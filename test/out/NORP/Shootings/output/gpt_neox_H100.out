PROMPT 1:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 1:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #1

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #2

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #3

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #4

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #5

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #6

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #7

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #8

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #9

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

Solution:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

---

## SQL Quiz #10

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2015' AND IncidentDate < '01/01/2016'

Expected Output:
	[
		[
			"01/01/2015",
			"01/01/2016"
		]
	]

---

## SQL Quiz #11

### Question

Prompt:
	Get count of mass shootings for each month in USA.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, VictimsKilled, VictimsKilled, VictimsKilled, VictimsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled, SuspectsKilled
---

---

---


---

---

[
[

---

---

---

---

---





---



---









---

---

---
)
)


	, SuspectsKilled, SuspectsKilled, VictimsKilled, Suspects), SuspectsKilled,
), SuspectsKilled, SuspectsKilled, Suspects
[
---









---




[

	INSUPPT


---

---










[




<

	[

[

	"
	[
	"
---

[
	"
---

[
	[
	[
	[
	[
	[
---
---

---

#

#

<

#







<


---




<







	<

*






---


<










<



<


)




	+
	,
	"
)
	,


,








	S





	S



	


	
	)



	.







	<

	simply
with
	.

.

(
	"
	"
	"

	












	"

<
	


	"
	"
	"
	"
[
[
S
	"
	"
S
	"
	"
---
#
If
























If




<








###

<






#



















<
If

<







<










































If


If
a



If
If




in
with
with

tag




in

in
#




with
with








in




<







iv
s



*
[
[


	"

	"
#/





a




*



























<








---













#




















#



#


#



















	
	<






































with with with








(


(






with















	"







s














	"

(








#


with











































































#








































































with







(
(



#





with
























#







s

#



"

",

	"

",

#
#



#













If





#














































ns



or




































'











#

















is


with

















is


with












	"

or






in






s

or










	"

---


#


# with

# with


or

#"
"
#"
"
#"
#


#<




"

"




	"
	"


	"


"
"
"

"





"
"































	"


















in


	"









#



	"
with







---





---
is
"
with'







"





---


---






























---
"

'


with

'






"
"
"


"
#
#


#





---


"

















"

"






"

"
"



"




































'.









in





















with















in
	"

with















in', Susp

#

#
s



s
s















"
#
#


# with
#
"






"
"

#

#
#
#
#









'
#











#




"

"






in'



"

#

#

#


#

#

#"





















































*
with







*
*
*
*
*
*
*
with



*
*
*





*
*
*

*

*
*

*





*

"

"


"

"

"




with
*
*







#"



#
#


#

*









*

































*



#





















"




"











for





in'




















with










*




is
"
with
with




*

*





*


*





*











"
"
"

"


"
"
"



with"
"
"

"

"
"
"




#



























"





"


"












"






























*






with',



	

	


"










	





















*





*
"
with



"
",

*





*


*

#

*
*

*






*



"

"

"
"
"

"

with",


*

"


#"
"
	"
"
#
*




	



*

*





	


	"







"
"


"

"
"


"
"













#
























.









"






*



	



























*
"
'















"
*

#
#
























"
"
"
"

"

with

"



"
"
"
"
"
"
"
"



"


"

*

"





"





*

	"
"

"


"


"
"
"
"
"
"

	

"

"
"
"








"
"
"

"

"

"

"

"

"

"
"










"




"










"



"



"
"
"









"





"



*




"














with




"

"

"


"
"

"



"

"
"
"
"
"
"
with a








*


"




"

	"



"


"
"

"

"

"
"
"
"
"
"
"







"
"

"
"
"
"
"
"
"



"
"
"



"
"

"
"

"


"




"

"

"













"
"



"
"

"
"

"
"

"




"
"
"

"
"
"
"









*

"
"

"
"
"
"
in
*

"
"

"



"

"

"

"
"
"


"





"


*
"


"


s
"

"


"


"




"
"

"
"
"
"
"
"

"

"

"
"
"

"
"

"
"
"

"

"
"

s

"

"

"
"







"







"








"




"




"

"

"




"

"






*







"














"

"

"

"


"



"


"



"

"
"


"

"

"









"

"





"

























"

"

"






















"

"

















"

"
"
















"









"



"




"

"










"












"



































false  










"










































"










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































,

  




,







  






  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <BR  
  
  
  
  
  ,  
<
  
,
  
,
,
,
  ,  <
  
    ,  <
  ,
,
,
    ,
    <
    ,
    < /	  ,
    ,  	  ,
,  	  ,
,  	  ,
,
,
    	,
  ,
  ,
	
  ,
  
  
  	  
  <
  ,
  
  ,
  
  
  ,
  
  ,
  
	
  ,
,
,
  	  ,
  <p
,
,
    ,
,
,
,
, 
,
,
,
, the-NPS  	
,
,
	
,
< /
	
	  	  	
,
,
,
, the road name="  ,
,  <l
,
,
,
	  	
,
,
,
,
,
	 (
	
	
.
	PS,
	
	  	
,
	  <name = ' (
	
	
	
,
	
	
	
	
	
	
	
	  	
	
	


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

  	P  ,
	
	

	
	

	P,
	
	[lock
	P,  , and,  	[lock
,  	
,  <string-  <p,  	
	
,  ,  <
,
	
	
	

	

	  ,
	


	[l,  <,

	
,
	string:  <  ,  	
,
	[lock
	

	
<,  ,  	,  <

	
	
	[lock	
	P,
	Nig<,
	  	PS
	
	if,<,	
	
,<
	
.  ||
	[1,
<
	  <
,
	
<,<,  	
	[
	[  Simplify,
Simplify,
	
	  	[,	  
	  	
	
	  
	  
	<	  	  





Simplify	<
	,



	  
Simplify\
Simplify
	  
Simplify

Simplify[
Simplify
    <

Simplify
<
<


<
<

Simplify
    <



<





<







Simplify,



Simplify.









Simplify,




Simplify,

<







Simplify,













    





Simplify,


Simplify,
Simplify,

Simplify,
Simplify,
Simplify,

Simplify,
Simplify,
Simplify,




Simplify<

Simplify




Simplify



Simplify,

Simplify,
Simplify,
Simplify,
Simplify,

Simplify<
Simplify	  

Simplify.
Simplify,






Simplify,}    
	<













	}
	,






Simplify,



















Simplify,



Simplify	  

















Simplify































Simplify	<
Simplify
Simplify
















Simplify



Simplify,




Simplify










Simplify[
Simplify.

Simplify	  
Simplify<

Simplify


Simplify
Simplify
Simplify
Simplify
Simplify
Simplify
Simplify


Simplify

Simplify

Simplify
Simplify
Simplify


Simplify
Simplify
Simplify







Simplify
Simplify	  

Simplify.


Simplify    
Simplify[

Simplify[<







Simplify}
Simplify


Simplify	
Simplify[


Simplify
Simplify












Simplify





Simplify[


Simplify[
Simplify
Simplify

Simplify


Simplify






Simplify



Simplify


























Simplify



Simplify













Simplify


Simplify[<
Simplify
Simplify
Simplify





Simplify

















Simplify
Simplify
Simplify
Simplify
Simplify















Simplify
























Simplify

































Simplify
Simplify
Simplify
Simplify







Simplify


Simplify




Simplify


====================================================================================================

PROMPT 2:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 2:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.1

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.2

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.3

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.4

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.5

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.6

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.7

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.8

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.9

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.10

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT SUM(SuspectsArrested) / 1000000 AS SuspectsArrestedPerMillion FROM us_shootings WHERE State = 'CA'

Expected Output:
	CA: 1,919,918
	INSUFFICENT

## 2.2.2.2.2.11

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

## 2.2.2.2.2.1

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, state, state, state, state, state, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, state, state, with 'IN, State, State,
Prompt, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State,

in, State, State, State, State, State, State, State, State, State, State, State,2.2.2.1, State, state, State, State, state, state, state, state, state, State, state, state, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, state, state.



If state, state, state, state, state with with state.
State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, state, state, 'an state.

A state,
*
* State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, with a single, state, state, State, state, state, state, 'with.


State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State,  State, State, State, State, State, State, State, State, State, State, State, State, State, State, State,A, State, State, 's State,


Prompt with, 'IN.






* State,
the, State, State, State, "IN,S.






.


.













IN, State, State,




.

s.







.

.


A


The statement.

A statement.




A,a

in',



s
The,


*
A.


	"

.


the.
, state, state,
	"
with, state,
.
,


.
, State,
.
.



.

in,S.


in, "A.A"
* state, the, state, state, the, State, state, a single state,  a
If, a single statement.
us, 's.
A.1.
.

s, a
the number, State, State, State,a,a, state, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State,


State, State, State, State, State, State, State, State, State, the, State, state, state, State, State, State, State, State,


.
K
,
.
	(us, "A, the, State, State, State, the, State, State, State, State, State, "2,  .
.
.

A, "A
	"

, State, State,
.
,  
.



.1.2.1.2.  ,2.1, the, the, the, "A, 'A
A
.a
A
"

A with, "A, the.
"




.
the
s.
A, "A
A
A, State, State, State, State, "A.
State.
.
, State, State,  " .
,  .
,  

	.
# .

.
.
.
.
.

.

.
.
State, the, State, "State, State, State, State,a
.
# .

.
.
The
s.
##
	.

A the,



A
.
, State, State, State, State, "A,

A.
.
A,  .
	" .
	, State, State,

	"
.

	In,  .
, State,  , the,  ,  , "A
, the, "A, a,  ,
,
,  , "
, State, with, 's.1, .
s,  

.
, the,  .
", 'A
A .1.
A"A, State, State, State, State, State, State, State, State, State, State, State, State,s, State, State, State, State, K, the,  , " .
A .
.
  
A,  .
the.
	a
.
	a
	"a
a
	.
s.
.
	"
s, State, State, State, the, the,a
	State, the.
, State, State, "state, the, State, State, State, State, State, State, State, State, State, State, State, State, State,
, State, State, State, State, State, State, State, the.1.1, State, "A
A statement, State, a,
A


A,
A is
s, with, IN,
	.1.
s,
A, the,
s, State,
A,
A, State, State, state, the, state, State, state, State, State,

A,
S, the.
	"S, State,
Ing, State, State,

The,
", state, State, State,


A, the, the, the.
s, the same,
A l, a, a
in, the.
s,
s.
s
A
A
in, the.1.1.
	State.
s.1, state, state, state, the.
    , state,S.1, State, state, State, state.
, State, state, the.
in, state, state, in, state.
, a,
S.1
s, the same, the

s, "a
.
A

.
A,
s.1, state.1, the.1.1
s, state, state, the, State, State, state, state, state,
s, State,
S.state, state, state, State, state,

A, State,
S.1.1,s, State, State, State, State, state, state, state, state, State, State, state, state,

A s.
the.
A l,



s.1.

s.
s.1.
s, the.
	S.1.

A the.


.1, State, s, state, state, state, the.
	A l, state, state, state,
	S.1, state, State, State,



in, state.






.1.1.1.1.1.1.1, the, state, a,
A d.

A.

.1
S with, state, the.1.1
s.

s, the, state, state,
s

A l, state, State, state, state, State, state, state, state, state, state, state, state, state, State, state, state, state, state,

s, state, state, State,

state, State, state, state, a, state, the.
state, a




S.
a
a

A with.
s.

the
s.



c





s, state,



s, state, state, state, state, a.
Prompt.
s, state, state, state, state, state, State, state, ther.
s.












the.
s, state,



s, state, a, state,


s
s,




s.1, state, state, state, state, state, the, state, state, state, state, state, state,





Prompt h.1, state, state,


s.

s.






s, state, state, state, state, state, state, state, state, state.




a


the.1



s
an
with, a, a.
state.

s.

the
s.
state, state



state, a, state, state, state, state, state, state, state, state, state.

Prompt.1.1



s






s, state, state, state, state, state, state, state, state, state, state, the same.

s
s, state,
with a
s.
s

Promptri

s
with with,
s,
s,
s
s.

s
s
state, a






s.











s.








s

1, state, state,









s


state







a
the
the








a

a
a







state, State,








state,
a


















S
State, state.1,










  

state


















"s
"
state,

state,


a
state,



S
information, state, with a






Prompthe









a






s
"











state






A,

1,








s





s











s








s





s,


Promptri, state,






a




























"





































"


"









"
"




"












"











S, a, State, State, State, State, State, State,














State, state, State,














































"







"







































































































































## {
















## ,





















































































































































,





,






,











,





















,



,




,





,

,

,

,






,
,










,




,


,
,










,
,










,

,

,

,


,

















,




,


,


##,













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































,










































































































































































,
,
,



,



,
,

,




,
,
),,




















,





































,



,





























,
,



,



,
,




,
,
,
,
,
,
,
,















,



,





,
,









,


,

,
,

,



,
,



















,
,
,



,



,
,


,
,
,
,
,
,
,

,
,
,


,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,

,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,

,
,
,
,
,
,
,
,
,
,
,
,

,
,
,
,
,
,
,
,
,


,
,
,
,

,
,
,
,
,
,
,

,
,
,
,
,



,
,




====================================================================================================

PROMPT 3:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get count of homeless population and US shooting incidents for each year.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 3:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get count of homeless population and US shooting incidents for each year.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '0-17'
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '18-24'
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '25-34'
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '35-44'
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '45-54'
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '55-64'
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '65+'
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '0-17'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '18-24'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '25-34'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '35-44'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '45-54'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '55-64'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '65+'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '0-17'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
AND    EXPERIENCING_HOMELESSNESS_CNT > EXPERIENCING_HOMELESSNESS_CNT
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '18-24'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
AND    EXPERIENCING_HOMELESSNESS_CNT > EXPERIENCING_HOMELESSNESS_CNT
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '25-34'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
AND    EXPERIENCING_HOMELESSNESS_CNT > EXPERIENCING_HOMELESSNESS_CNT
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '35-44'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
AND    EXPERIENCING_HOMELESSNESS_CNT > EXPERIENCING_HOMELESSNESS_CNT
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```

```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '45-54'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
AND    EXPERIENCING_HOMELESSNESS_CNT > EXPERIENCING_HOMELESSNESS_CNT
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '55-64'
AND    EXPERIENCING_HOMELESSNESS_CNT > 0
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '0-17'
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
AND    LOCATION = 'USA'
AND    AGE_GROUP_PUBLIC = '0-17'
GROUP BY EXPERIENCING_HOMELESSNESS_CNT
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_age_demographics
WHERE  CALENDAR_YEAR = '2017'
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_cnt
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
FROM   experiencing_homelessness_cnt
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
```
```sql
```
```sql
SELECT EXPERIENCING_HOMELESSNESS_CNT,
       COUNT(*)
```
```sql
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```sql
```sql
```
```sql
```
```sql
```
```sql
```
```
```
```
```
```sql
```
```sql
```
```
```sql
```
```sql
```
```sql
```sql
```sql
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```sql
```
```
```
```
```
```
```
```
```sql
```
```sql
```
```
```
```
```
```
```sql
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```sql
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```sql
```
```
```
```
```
```
```
```
```sql
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```

```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```
```

```
```

```

```
```
```

```
```
```

```

```
```

```
```

```
```
```

```

```

```
```

```
```

```
```
```

```
```




```




```


```
```

```


```


```
```
`



```

```
`

`
`




`
```
```
```



```
```
`
`
```
  

```

```
  
`

  
```
`
`
`
. (h. (h. ( th
 th. th
`
, the same, the
 th
.
, the
 th
 th

, the
 th
, the same, the same as
 th
 th
, the
,
,
.
.5.5. of the same,
.
,
.
,
.
.5.
.
.5.
.
.
.
.
.
.5.
.
.
.
.
,
.
.
.
,
.
.
,
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
,
.
.
.
.
.
.
.
.
.
.
.
.
.
. th
.
. of
.
.
. of
. of
.
.
.
.
. of
. of the
. of
. of
. of. of the same as of
. of

.

. of
.
.
. of
. th. th. th

. of

.
. of the
. of
. of

. of
. th
  
. th. th
  
. th

. th
  
,
.

  
. th
<script. th
,
  
. th
<script. th
  
. th
. th
  
. th. th. t. th
  


. th
  
. th
. th
. th
. th

. th
. th
, '

, of the same as in the same as of the same as a. t. th. th. t. t. th. t. t. th
. t. t
, ' m. th
, '!
, '!
, of the same number, of the same number. th
, of
, '
<scriptedite. t. t. th
<scripted. th
. th
. th
, '
<scriptedite
, '
<scriptedition, '
, '
, '
,
\frown, '
,
, '
.
, '
\nog
\nog
\fuck, '
, '
.
\nog.
, '
, '
, '
, '
, '
,
\
\fuck

,
,
,
,
\nog.
,
. the same number.


.
.
. th
<scriptedition. th
<scriptedition, '
, '
<script.
, '
<scriptedition,
<scriptedition
\nog
\nog. .nog.

<subsection of the same number.
, the same number. .o
, '
, and '
\nother words
, and 's.
,
, 's.
, '
<scriptedition.2.
<substituting
, '
, and 's.
,
<scriptedur.  
<scriptedition
<subscript. tablest. t.
, '
<subscripted. 's.

, 's.
, 's.
, '
, '

<subscripted.
<scriptedition.  
<span. '
.
, and '
<subscripted.
, and '
, 's.


<subscript:.
. 's.

, and 's.
,
, 's.
, 's.  
<scriptedition, 'nana
  
<subscript. tuss
, 'nana
, and 's.
, and
, '

, '


<subscript:
.
.

, ';
, 'nspell
, 's.
<subscripted
, '

, 's.



, 's.
.

<subscript:
, 's.

<subscript:
.
.


<scriptedite<subscript:
<subscript:
<script:
.
<scriptedite<subscript:
<scriptedition.
<subscript:
, '

, '
, and '
, '
.
.
<span diff.6.
, a.
.
.
, '!
.
, 'n.
.


<subscript.

, '
.

<subscript:
, '
<span, '

<nana

<span.

<n
<span diff, '
.
, ';
<span diffuss<span class.
<span class.  
<span diff:
<span,
,
<span, ';
,
,
.
<span,
, the same,
.
,
<span.
<nana

.
.
<span, and, the same,
.
<n.
\n.


,
.
<span,
<span,
<span, the same,
.
<nspit's
<subscript:
<span class.
<span,
<span,
, and,
<span, the same, ';
.
.


<span,
.

<span,
<span,
<span, the same,
.
.
<span,
<span, the
<span
<nspoon






.
.
.
.
<buss.
<span,
<span, the same,
.
.
.
<braces<embers

.
.
<span
<span.

.
.
<spandiffusion
<span


.

.
.
<brur
<bracur
.

<bran

.
.
.
.
.
<embers
<embers, the same number of the




  



.
  

.

  
.
.

.
<brur,



.

.
<braces,s

.



.
<embers,







.









.
<braced.
<emaccent.
.
<braces<divide
<embers
.
.
.
<braces.


.






  


====================================================================================================

PROMPT 4:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get homeless population per capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 4:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get homeless population per capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT EXPERIENCING_HOMELESSNESS_CNT, COUNT(*) FROM experiencing_homelessness_age_demographics WHERE CALENDAR_YEAR = '2020' AND LOCATION = 'CA' GROUP BY EXPERIENCING_HOMELESSNESS_CNT HAVING COUNT(*) > 0;

Expected Output:
	[
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "1",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "2",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "3",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "4",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "5",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "6",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "7",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "8",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "9",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "10",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "11",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "12",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "13",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "14",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "15",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "16",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "17",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "18",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "19",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "20",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "21",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "22",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "23",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "24",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "25",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "26",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "27",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "28",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "29",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "30",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "31",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "32",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "33",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "34",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "35",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "36",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "37",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "38",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "39",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "40",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "41",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "42",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "43",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "44",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "45",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "46",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "47",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "48",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "49",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "50",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "51",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "52",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "53",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "54",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "55",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "56",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "57",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "58",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "59",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "60",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "61",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "1",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "1",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "1",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "1",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "1",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "1",
		"COUNT(*)": "1"
	},
	{
		"EXPERIENCING_HOMELESSNESS_CNT": "1",
		"COUNT(*)": "1"
	}
]

```

## 2.1.1:
	SELECT EXPERIENCING_HOMELESSNESS_CNT, COUNT(*)

## 2.2:
	SELECT EXPERIENCING_HOMELESSNESS_CNT, COUNT(*) FROM us_population_cnt WHERE COUNT(*)

## 2.3:
	SELECT EXPERIENCING_HOMELESSNESS_CNT, COUNT(*)
	SELECT EXPERIENCING_HOMELESSNESS_CNT, COUNT(*)
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"1"
	"1"
	"1"
	"1"
	"1"
	"1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"1": "1"
	"1"
	"1"
	"1"
	"COUNT(*)": "1"
	"COUNT(*)": "1"
	"1"
	"1"
	"1"
	"):1"
	"1"
	"1": "1"
	"1"
	"): "1": "1"	"	"1"1"	"1"COUNT(*)": "1": "1"
	"COUNT(*)": "1"
	"1"
	"1": "1"
	"1"
	"S": "1"
	"1": "1"
	"
	"1"
	"	"
	"	"
	"
	"): "1": "1"
	"
	"	"
	"	"
	)	"1"
	"COUNT(*)": "1": "1": "1": "1": "1": "1"
	"	"
	"COUNT(*)": "1"
	"	"COUNT(*)": "1": "1": "1": "1": "1": "1"
	"COUNT(*)": "1"
	"COUNT(*)": "1": "1": "1": "1": "1": "1"1": "1"1": "1"1"
)": "1": "1": "1": "1": "1": "1": "1"1": "1"1": "1"1"
	": "1": "1": "1": "1": "1": "1": "1"1": "1"1": "1"1"
"1": "1": "1": "1": "1": "1": "1": "1"
"1"1": "1"1"
	"COUNT(": "1": "1": "1": "1": "1": "1"1": "1"1"):"1"
	"1": "1": "1": "1": "1": "1": "1": "1"
	"1": "1"1"
	"1": "1": "1": "1": "1": "1": "1": "1"
	"1"	"	"1"
"	"1"
"1": "1": "1": "1": "1": "1"
	"1"	"": "1"
S": "1"1": "1": "1": "1": "1": "1": "1"
"1": "1"1"
	"	"	"	"1": "1": "1": "1": "1": "1": "1": "1": "1"1"
	": "1"S"S": "1": "1": "1": "1": "1"
	"1"	"	"	"
	": "1"S"S": "1": "1": "1": "1": "1"
S": "1": "1"	"
	": "1"S"S": "1": "1": "1": "1": "1"
	"1": "1": "1"
	"": "1"S"1": "1": "1": "1": "1": "1"	"1"	"	"1"
	":"	"1":"1"
	"S"	"S"S": "1"	"1": "1": "1"
	"	"	"S": "1": "1": "1": "1": "1": "1": "1": "1": "1"
	"S"	"S": "1": "1"S": "1": "1": "1": "1": "1": "1": "1"": "1"1": "1": "1": "1": "1": "1": "1"
	"1"S"": "1"1"S"S"S"S": "1"S": "1": "1": "1"S"S": "1"S": "1"S"S"S"S": "1": "1"S"	"S": "1": "1": "1": "1": "1"S"S":"S": "1": "1"S": "1": "1": "1": "1": "1": "1"	"S": "1":"S"S":"1"
	"S": "1": "1": "1": "1": "1": "1": "1"S":"	"S"S": "1"
"	"	"	"	"	"	"":"1":"	"1"
	"	"S"	"": "1": "1": "1": "1": "1"1"1": "1":"1"
	"": "1"S"":"1"1"1": "1"1": "1"1"1"1": "1": "1"
	"1": "1": "1"1"
"1": "1"S": "1"
"S"1": "1"1"
"
"	"1"1"1"1"1"1"": "1"1"1"
"1"": "1"1"
"	"1"1"": "1"1"1": "1"1"
"1"
"1": "1": "1"1"1"
"
"1":"1"1"
"1"1"1": "1"1"1"1": "1": "1"1"1"1": "1": "1"1"1"1"1"1"1"1"1"1"1"S"1"
"	"": "1":"1"1"1"
"1"1"1"1"1"1"1": "1"1"
"1"1"1":"1"1"1"
"1"1"1"1"1"1"1": "1"1"
"1"
"1":"1"1":"1": "1"1"1"1"1"1"1": "1"1"
"1"
"1":"1"1"1"
"1"1"	"	"1"1"1"
"1"
	"1"1"1"1"1"1"
"
"1"
"	"1"1"1"": "1"1"
"1"1"1":"1"1"1"
"
"1"
"	"1"1"1"
"1"
	"1"1"1":"1"1"1"
"1"1"	"	"1"	"1": "1"1"
"1"1"":"1"1"1"	"1"1"
	"1"	"	"1"
"1"1"
	"1"":"1"1"1"1"	"1"
"	"	"1"	"	"1"1"
"1"1"1":"1"1"1"1"1"1"
	"	"1"1"	"1"1"	"1"1"1"1"1"1"1"1"1"
"1"	"1"	"1"1"1"1"1"1"1"1"1"1"1"1"1"
	"1"1"	"1"
"1"1"
	"1"1"1"1"1"1"1"1"
"1"	"1"1"	"1"1"1"1"1"1"1"1"1"	"1"1"
"1"	"1"1"1":"1"1"
	"1"1"1"1"1"1"1"1"
	"1"1"1"1"
	"1"1"1"1"1"1"1"1"1"1"1"
"1"	"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
	"1"1"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
"1"1"
	"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"
	"1"1"1"1"
	"1"1"1"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
	"1"1"1"1"	"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
1"1"1"1"1"1"1"1"1"1"1"1"
"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
	"1"1"1"1"1"1"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
1"1"1"1"1"1"1"1"
1"1"1"1"1"1"1"1"1"
1"1"1"1"1"1"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"
"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1,1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1"1,1"1"1"1"1"1"1"1,1.1"1"1, "1,1":1"1"1"1"1"1"1"1"1,1"1"1"1"1"1"1"1"1"1"1,1"1, "1,1"1,1, "1,1,1, "1,1,1,1,1, "1", "1,1", "1,1"1"1, "1,1,1,1,1", "1, "1", "1, "1", "1", "1,1", "1, "1,1,1, "1, "1,1,1,1", "1", "1", "1", "1", "1", "1", "1", "1,1", "1", "1,1", "1,1", "1,1", "1", "1", "1"1", "1", "1", "1", "1,1", "1", "1", "1" "1", "1", "1" "1" "1" "1" "1" "1" "1,1", "1" "1", "1" "1", "1", "1", "1", "1, "1", "1", "1", "1" "1" "1", "1" "1" "1" "1", "1" "1" "1", "1" "1", "1" "1", "1", "1", "1" "1", "1", "1", "1" "1", "1" "1" "1" "1" "1" "1" "1" "1" "1" "1", "1" "1, "1" "1, "1, "1 "1, " "1, "1, "1", "1", "1, "1, "1, "1, "1, "1, "1, "1", "1, "1, "1, "1, "1, "1, "1, "1", "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, " "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, " " "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, " "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, "1, " " "1, "1, " " " " " " " " " " " " " " " "1, " " " " " " " " "1, " " " "1, " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "1, " " " " " " " " " " " " " " " "1, " " " " " " " " " "1, "1, " "1, " " " " " "1, " " " " "1, "1, "1, "1, " " "1, " " " "1, " " " "1, " " " " "1, "1, "1, " "1, " "1, " " " " " " "1, " " "1, " " " "1, " " " "1, "1, " " " " " " " " " " " " " " " " " " " " " " " " " "1, " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

====================================================================================================

PROMPT 5:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 5:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Schema: 
	experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
us_population_county (PopulationCount, County)

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

Example:
	Get homeless population per capita and US shooting incidents per capita.
Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.
Example:
	Get homeless population per capita and US shooting incidents per million capita for each county of California.
Example:
	Get homeless population per capita and US shooting incidents per capita for each county of California.
Example:
	Get homeless population per capita
Example:
	Get homeless population per capita

Example:
Example:
	Get
	Get
Example:
	Get
Example:
	Get
Example:
	Get
Example:
	Get
	Get
	Get
	Get
	Get
Note:
	Get
Note:
	Get
Note:
Note:
Note:
Note:
	Note:
	Note:
Note:
	Get
Note)

Note:
	Get
	
	Get

Note:
Note:
	Get
Note:

Note:
Note:
Note:
	Note:
	Note,
	Note,
	Note,
	Note,
Note:
	Note
	Note,
	Note,
	Note:
	Note:
	Note,
Note:
	Note:
	Note,
	Note)
	Note)
	Note)
	Note)
Note)

Note:



Note)

Note)

Note:

Note, Note:

Note:
Note,
Note:
Note,

Note,

Note:

Note:

Note:
Note:
	Get
Note




Note




Note:

Note,
Note
	Get

Note:

Note, note,
	Note,
	Note)
	Note)
	Note)



Note)

Note


Note)




Note:



Example:

Example:
Example:
	
	Note:
	Note)

	
	
	

	
	Note

Note,


Note)




Note,



	
Note)

Note,
Note,

	S.


Example:
	Note
	required

with




Note,

Example:
	Inde








A


of


Example:
Example:
Example:





	



	"


	





	



















Note








Example

Example:






	

	


	





























)


)

Example:
	





).


Example




with









Example:

Example:







)







)



Example













	

	



























Note










Example


in



),

	






































)

)

















with









Example


Example


















Example


In











Example





	A










Example


Example







	with

	with







Example






	














































































V

















A


with
in





	


ation






	























	A
with











	





















































































V













of


A
	with
with






	


	"






A



	














	



	with
	with



	



	
	S

	
	


	
	Example



Example


	








	

	

Example:

Note







	

	




	
	S



	
	

	S




	



	


	



	If

	





	
	with
	
	
	
	
	
	

	
	



	



	







	


	




	

	V
	with,

	


	
	



	









	

Example















	

Example

	Example











	







	























Example
	





	


	


	

	
	
	


	

	
	












	

















	with
	
	
	

	




	

	















A


















	
	V






























































	with












	
































	with

















































































































	





	with


	
	





	





	


































	








































































































































































	





















































































































with










































































































































































with















































with





































































































































































































































































































with






















































































































































































































































































































































with





























































































































































































































































































































































































































































































of

of





























































































of






















































































































of













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































  (  (source 

















,




, "


each (



  





  (  ( the




  (  (  (  (  (  (  (  (  (  (



  (  (  (  (  (



  (  (  (
  (
="" (

  (  (

  (  (

="" (
  (
  (  (  (

(  (

,
="" (
 (

="" (

="" (
="" (
each (
="" (
="" (
  (  (  (  (  (
="" (
,
(  (
,
each

="" (
,
  (  (  (  (  ( the,
  (


  ,
  ,
  
  .
  



  (  
  (  (
  
  
  (
  
  ,
  
  (  
  ,
  ,
  ,
  ,
  <br/hipplasci= (
  ,
  ,
  (
  (
  ,
  
  ,
  ,
  ,
  ,
  ,
  ,
  	plancest  ,
  ,
  , the road, 
  [other: 
  , the most (
  , the most (
  ,
	,
  ,
,
  .
, the road-
  ,
,
,
.
,
,
,
, the road, and the road, the road- the road- the most (
, the set  	<br / t
, the road, 
, 

	pl tion.
	.
.
	.

	,
		,
.html tion, and the set, the road, the road, the set	  	pl tion	.
	.
		strange

















  








Simplify, the most (h, the most (hace

  	.co.html	, and the most (h, the most (le tion, tion.





Simplify, and the most (low






Simplify, the most (low,

Simplify, the most (
Simplify, the most (low	 tion	















Simplify, tion.


Simplify, tion	, tion, tion	, tion, tion



Simplify, the most highl    

Simplify,



















Simplify, tion







Simplify,


Simplify, tion



Simplify, tion







Simplify, tion.  


Simplify,











Simplify,


Simplify,






Simplify,



Simplify,






Simplify,
Simplify, tion<








Simplify,









Simplify,










Simplify,
Simplify,
Simplify,

















Simplify,

Simplify.
















Simplify,





Simplify.

Simplify.



Simplify.



Simplify,



Simplify.




Simplify.


Simplify.




Simplify.



Simplify.



Simplify




Simplify.
Simplify.

Simplify
Simplify.

Simplify
Simplify

Simplify.




Simplify
Simplify.

Simplify{
Simplify{

Simplify
Simplify


Simplify[



Simplify.




Simplify{



Simplify
Simplify{

Simplify
Simplify	

Simplify	
Simplify.
Simplify{Simplify

Simplify
Simplify[
Simplify

Simplify
Simplify


Simplify{



Simplify

Simplify{



Simplify


Simplify{
Simplify{
Simplify{





Simplify{

Simplify.
Simplify
Simplify

Simplify{

Simplify.




Simplify{
Simplify


Simplify



Simplify
Simplify

Simplify
Simplify




Simplify
Simplify
Simplify
Simplify
Simplify



Simplify
Simplify
Simplify
Simplify










Simplify






Simplify

Simplify
Simplify


Simplify
Simplify[



Simplify











Simplify





Simplify









Simplify
Simplify



Simplify

Simplify


Simplify


Simplify
Simplify
Simplify

Simplify
Simplify



Simplify{
Simplify{

Simplify[
Simplify[
Simplify[
Simplify[
Simplify[







Simplify{
Simplify



Simplify
Simplify
Simplify.

Simplify
Simplify[
Simplify. 

Simplify


Simplify.
Simplify.
Simplify.






Simplify.
Simplify.
Simplify.
Simplify.
Simplify.
Simplify.
Simplify.

Simplify.





Simplify.










Simplify.























Simplify.















Simplify.





Simplify.






















Simplify.
Simplify.

Simplify.
Simplify.
Simplify.

Simplify.

Simplify.
Simplify,
Simplify<


Simplify.
Simplify<
Simplify.
Simplify.
Simplify.
Simplify.
Simplify.

====================================================================================================

PROMPT 6:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each county, get shooting incidents per million capita, and income per million capita.

Schema: 
	food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 6:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each county, get shooting incidents per million capita, and income per million capita.

Schema: 
	food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)
us_population_county (PopulationCount, County)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	For each county, get shooting incidents per million capita, and income per million capita.

SQL:
	SELECT COUNT(*) / 1000000 AS ShootingsPerMillion,
	COUNT(*) / 1000000 AS IncomePerMillion
	FROM food_access
	WHERE County = 'Cook'
	GROUP BY County
	HAVING COUNT(*) > 0
	ORDER BY ShootingsPerMillion DESC
	LIMIT 1

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0
	IncomePerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0

Input:
	Cook

Output:
	ShootingsPerMillion: 1.0

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook
Input:
	Cook
Input:
	Cook
Input:
	Cook

Input:
	Cook
Input:
	Cook
Input:
	Cook
Input:
	Cook
	Cook
	Cook
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook
	Cook

Input:
	Cook

Input:
	Cook

Input:
	Cook

	Cook

Input:
	Cook
Input:
	Cook
Input
	Cook

Input:
	Cook
Input:
	Cook

Input:

	Cook

	Cook
Input:
	Cook
Input:

Input:
	)

Input:
	
	

Input:
	Cook,

Input:
	
	
	



Input,




Input:


Input



Input,




Input





Input


	


Input


Input




Input
Input




Input,



Input,



Input



Input,



Input,

	

Input,
	

Input,
	





	


Input:

	

Input,
	
Input,

	



Input
	
Input



Input:
	

Input



Input:

	

Input

	


Input:
	
	
Input
	
	
Input:
	
Input
	
Input
	
Input:

	
Input
Input
	
Input


Input,

Input,

Input,
Input
	
Input
Input

	L
	
Input

	
	


Input



	L

	
	
Input
	

Input

Input

	
Input



Input


Input,


	
Input
	
	L
	
	
	
	
	
	


	
	


	
	


	
	
	
	
	
	
	

	

	

	



	


	
	
	
	
	
	
	
	



	




	




	



	


	
	

	


	
	



	

	

	

	
	
	

	
	
	
	
	
	
	
	L
	

	

	



	
	

	
	



	


	
	M	M
	
		
	M

	

	
	
	
	M
	




	
	M
	
	
	

	
	

	
	M
	

	M
	T


	
	
	M
	M
	
	
	
	1
	
	T
	
	M
	
	


	
	
	
	
	
	

	"



	
	



	
	T




	


	
	"

	
	T
	
	
	
	
	
	




	



	

	

	
	

	T

	

	
	

	T
	T



	

	
	
	"


	
	
	
	
	
	"
	
	







	
	

	"



	
	
	T
	"
	"
	"
	"

	"
	
	"
	"	"
	"
	"
	"
	"
	"
	
	"
	"
	
	"	"
	"
	"
	

	"
	
	"
	"
	"

	"
	
	"
	"
	"
	"
	"
	"
	"
	"
	"


	"
	"
	"
	"

	"
	"
	"
	"
	"	"
	"

	"
	"
	"
	"	"
	"
	"
	"
	"
	"
	"
	"
	"
	
	"
	"
	"
	"


	"
	"
	"
	"
	"
	"
	"
	"
	"
	"
	"

	"
	"
	"
	"


	
	


	"
	"
	"
	





	"


	"
	"

	


	"
	"
	"
	
	"





	"	"
	"
	"
	"
	"

	"
	"
	"
	"
	"
	"
	"
	"
	"
	"
	"
	
	
	"
	
	"

	
	"
	"
	"
	"
	
	"
	"
	"
	"
	"
	"

	"
	"
	"
	"
	"
	"
	"
	"
	
	"

	"

	"
	"
	"
	"
	"
	"
	"
	"
	"
	"








	"
	"
	"

	"




	"
	"
	"
	"


	"
	"
	"
	"
	"
	"


	"
	"
	"







	"

	"
	"










	
	"
	

	"



	





	"

	



	
	
	
	
	
	










	"




	"




	
	

	"
	"


	"
	"

	"
	"	"
	"


	"
	

	"
	
	




	

	"

	


	
	"
	
	"



	"
	"

	

	
	


	
	



	"

	"
	
	
	"
	





	



	"
	"
	"



























	"


































































	















	"







	"



























	

	









	"







	"
	"
	
	"

	"
	"
	"
	"
	"
	
	"
	"
	
	"
	
	
	"
	"
	"
	"
	"
	"
	"
	"
	"
	"
	
	"
	"	"	"
	"
	"
	"
	"
"
	"
"
	"
	"
"
	"
	"
	"
	"
	
	"
	1
	"
"
	"
	"
	"
	"
"
"
	"
	"


	"
	"
	"
	"
	"
	"
	"
	"
	"
	"
	"

	"
	"
	"
	"
	"
	"
	"
	"
"

	"
	"

"





"


	"
	"
	"

	"
"

	"




"




	"

	"








	"
"
	"
	



	"




"


	"








	"





	"


"


"
"
"
"









	"









"





"


	"








	"
	"

	"



"
	"
	"


	"








	"
"

	"




	"
"
"



	"















	



	"


	"














	1




	"






"
















	"

	"

	"







	"



"






	"















"

"



"




















"



"
	"













1














	
	





















"


"

	"





	"







	"
"
	"
	"


"




	"














"
































1













	"























































































































1






































































































































































































































































































































































































































































	

	





	


















	


	Per
	





	
























































	Per































	
































	Per
	Per




	
























































	




	

























	1








	1



















	Per









































































	


























	Per






















































































































	Per00
	














































	Per













	Per































	Per































	Per












	Per


































	Per













	Per



















	Perferata,
























...


Categeth






















...


"


"



































...







Per












...




































...














  















...:

Perfer(Perfer, the






Perferati"






"T
C"

"The'data"










"

...

"1


"

















"





"  `1`1









...





















''




















...  

`Shangela:


















...:









































  











...:




...  

























  

`Per(  






...





Per(




Per(Per(

Per(
	Per(















  

	Per(Per(

Perati(







Per(



Theus(



...

	Performats(





	Per(
  

  









  




  

	
(t
  

Theus(  


  





The  

	

  

	Theus(  






  

  


  

  

  

  (


(

The most"V(

  

The most m(


The first_2:

(  
  

(  

(


The pre-m(

(  
  

  
  
  (C
(expected"V(
(C.
(

(C
(
    

(expected_
(
(C
(
(C
,
(
(C
,
(
(C
,
(C
,
,
(C
(C
  
(C
(C
(C
(C
(C:\n
,
(C:\n
,
(C
(C
  
(C
  
(C
(C
(C(C
(C
(C
(C
(C
(C
(C(C
(C
(C
(C
(C
(C:\n
(C
(C
(
(C
(C
(C(C
(C(C
(C
(C
(C
  (C
  (C
(C
  (C
(C
  (C
(C:\n
(C
(C(C
(C:\n
(C
  (C

,
  (
  (C
  (C
  (C
,
  (C
, (C
, (C:\r(C:\r(
  (
  (
, and the most (C
, (C
,
,
,

,
, (C:\r(C
  (C
, (C
, (C(C
, (C:\r(C
,
  

, (press
, (C
, and the m 
,
,

, (C
,
, (C:\r(C
  (C
, (Spons
, (C:\r(C
, (C:\r(
, and/
, and/

, (C




, and/  
,
, (
, and the most of the most of the most of the_
, (Fall
, (C:  (  (
, (C:  ( the_



, (Curs

, (Curs



, ( the_
, and the_

, (on the_
, and/








	





	





	{Keeper


	











  
	












	:




, the_


	




, the_name:  







, (on the_metadata_name: (on the_name = " the_name:









, and the_name:  :  


, ( theseus the_name:  



, the_name_Casc_name = " the_name: (River, (on the m/
, the_name =  (C:  : (J
, (on the_name: (O(Curs
, the_name: (on the_Cascrib, (on the_



  (


,





, the_name =
  ( the_name: (on_name: (on the_name:

,




  (

( the_metadata_name:














,










,




<strong>



,





<span the_ the_

















































<span:  

<span
















    <span


,




<span










<span



<span


<span



































































































<span









  





<span










  (



<span















<span









<span
























<span


<span




<span















<span




<span
















<span


, 

<span

<span





  



<span



<span




<span










































  <span










.html: 
    











  <span


  




  





  <span







  <span


  































<span



<span






















<span











































  



  







    
    

























    














  <span
    


















  










    <span










  <table


  
  <table



  
  

  <span
  
  
  




    
    
  
  

    






  
  

  

    
  





  


  


    
  




  


    
    

  






====================================================================================================

PROMPT 7:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get shooting incidents per million capita, and income per million capita.

Schema: 
	food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)
us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 7:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get shooting incidents per million capita, and income per million capita.

Schema: 
	food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)
us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

SQL Statement:
	SELECT
	COUNT(*) AS "Shootings",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) AS "Population",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 AS "Population_Million",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 AS "Population_Billion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 AS "Population_Trillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 AS "Population_Quintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Sextillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Septillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Octillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Nonillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Decillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Undecillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Duodecillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Tredecillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Quattuordecillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Quindecillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Sexdecillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Septendecillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Octodecillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Novemdecillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Vigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Unvigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Duovigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Treduovigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Quattuovigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Quintuovigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Sextuovigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Septuovigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Octuovigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Novenvigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Vigintuovigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 AS "Population_Unvigintuovigintillion",
	SUM(CASE WHEN Pop2010 > 0 THEN Pop2010 * 1000000 ELSE 0 END) / 1000000 * 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000 / 1000000,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)

Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
Note,
	)
Note,
	)
Note,
	)
Note,
	)
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note, Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note, Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,

Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,
Note,

Note,
Note,
Note,
Note,

Note,




Note,


Note,
Note, Note,
Note,
Note,

Note,

	)



	,

Note,

	)
	,
	)










)



)


)

Note,


Note,

Note,

Note,


Note, LIST)


Note,

Note, L)




Note,
)
,





Note,
)
Note,
)
)

Note,

)
Note,

	)



	)






)


	)



	)
	)

)
)
	)
	)
)
)
	)
)
	)


	)

	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)

	)
	)
	)
	)
)
	)
	)
	)
	)
	)
	)
	)

	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
)
	)
)
)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
)
	)
)
	)
	)
	)
	)
	)
	)
	)
	)
	
	)
	,
	)
	)
	
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	
	)
	
	)
	)
	)
	)
	
	)
	)
	)
	
	)
	,
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	)
	
	"
	0
	)
	
	"
	)
	)
	0
	)
	)
	)
	)
	)
	)
	)
	"
	)
		)
	)
	"
	)
		)
	"
	)
	)
	"
	"
	)
	)
	)
	)
	)
	)
	)
	"
	
	)
	"
	"
	
	"
	
	
	"
	)
	"
	)
	"
	)
	"
	)
	0)
	)	)
	)
	)
	)
	"
	)
	)
	)
	)
	
	)
	)
	"	)
	
	)
	"	)
	)
	"
	)
	)
	)
	)
	)
	)
	)
	)
	"
	)
	)
	"	0)	)
	"0	)	)
	"
	)
	)
	)
	0)
	0)	)
	)
	)
	)
	)
	)
	)	)
	)
	)
	)
	"
	)	"	)
	)	)
	)
	)
	)	0	)
	)
	)
	)
	)
	)
	)
	"	)	)	)	)
	)	)	)	)	)	)
	)	)	)	)
	)	)
	"	)
	)
	)
	)
	)	)	)
	)
	)	)
	)
	)
	0)
	"	)	)	)	)	)	)	)	)	"	)	)	)
	)	)
	"	)	)	0,	)	0,0)	)	)	0,000'0000)	"	"0000)	)
	)	0)	)
	0	)	0.0	)
	0	)	"	)	)	)	)		)		"	0	)	)	)	)	)	)	)	)	)
	0	)	0	0)	0,000'0000,000'0000,	)	*	1	0	)	"	0)	*0)	"	*0)	)	)
00)
	)	0)	*	)	*	*	*	*	*	*0	0)	*0	0	)
	0	*	)	0,	)	*0)	*	*0)	)	)	0)	)	*00	)	*	*	0)	*00	0	)	)	)	0)	)	)	)	0)	0)	)	)	)	)	)	0)	0)	0)	)	)	)	)	)	)	)	*	)	*00)	)	)	)	)	)	)	)	)	0)	)	)	)	)	*0.0,0.0.0)	*	)	)	*	)	)	)	0)	)	)	)	)	)	)	0)	)	0)	)	)	)	)	*	)	)	*1,0,	)	0)	)	)	)	)	0)	0)	0,0)	)	)	)	)	)	*0)	*0,00)	)	)	)	)	0)	)	*0	)	*1)	)	*	*	*0,0,0)	)	)	)	)	)	0)	)	)	)	)	)	)	)	)	*	)	)	0)	)	)	)	)	)	)	0)	)	1)	)	)	)	)	)	*0)	)	)	)	)	)	*	)	)	0	)	0,000,000,000,000,000,	0,	)	*	)	)	)	)	)	)	)	)	)	*	)	)	)	)	)	)	)	*	)	)	)	*	)	)	)	)	)	*	)	)	*	)	)	*	0,0,	)	)	)	)	)	)	*	)	*	*	)	*	)	)	)	)	)	)	)	*	)	*	*	0,	)	)	'	)	)	)	*	)	*	*	*	)	)	*	)	*	*	*	*	0	*	*	*	*	*	*	*	*	)	*	*	*	*	*	*	*	*	*	*	*	)	*	0)	*	*	)	)	*	*	*	*	*	*	)	*	*	)	*	*	)	/	*	)	*	*	*	*	)	*	0	*	*	*	)	)	*	*	*	*	)	*	*	*	*	*	*	)	*	*	)	*	)	)	)	)	)	)	)	)	)	)	)	0	)	*	0	)	)	)	*	*	)	*	*	)	)	)	)	/	)	/	) *	)	)	)	)	)	)	)	)	)	)	)	)	)	)	/	/	/	)	*	*	)	*	) *	*	)	)	)	)	) *	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	/	)	)	)	/	)	)	)	/	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	"	)	)	)	)	)	)	/	)	/	)	)	)	)	)	"	)	)	)	)	)	)	)	)	)	)	)	)	)	"	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	)	"	)	)	)	"	0	"	)	"	)	)	"	)	"	)	)	"	)	)	)	"	"	"	"	)	)	"	"	"	"	"	"	"	"	"	"	"	"	)	"00,	"	"	"	"	"	"	"	"	"	)	"	"	"	" /"	"	"	"	"	"	"	"	"	"	"	)	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"0,	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	'1'
	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	'	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	"	'	'	'	'	'	'	'	'	"	'	'	'	'	'	'	'	'	'	"	"	"	"	"	"	"	"	"	"	"	"	"	'	'	'	'	'	'	'	'	'`"	'	'	'	'	'	'
	'	"	'`(v(0'
	(0'	( '( '( '( '(0'	(0'	( '(0'	('	'((string'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'	'`(*)"	'	'	'	'`( '(*)"	(*)"	'	(*)"	(*)"	'	'((string('	

====================================================================================================

PROMPT 8:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get count of suspects arrested each month over the years.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 8:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get count of suspects arrested each month over the years.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2012' AND IncidentDate < '01/01/2013'

Expected Output:
	'INSUFFICENT'

Expected SQL:
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate > '01/01/2012' AND IncidentDate < '01/01/2013'

Input/Output Examples:
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Input:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'INSUFFICENT'
	Output:
	'IN
	'
	'INSUFFICent'
	'
	'
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'INSUFFICENT'
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'IN
	'
	'
	'IN
	'
	'IN'
	'IN
	'IN'
	'IN'
	'
	'IN
	'IN
	'IN
	'
	'
	'IN'
	'
	'
	'IN'
	'IN
	'
	'
	'IN
	'
	'IN'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'IN'
	'IN'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'IN'
	'
	'
	'
	'IN'
	'IN'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'IN'
	'
	'
	'
	'
	'IN'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'

	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'

	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'

	'
	'
	'
	'
	'
	'
	'
	'



	'
	'
	

	'


	'
	'
	
	'
	'
	'
	'

	'
	'
	'
	'




	'
	'
	'






	'
	'
	



	'

	'










	'






	'
	'
	







	'
	'
	




	'
	'


	
	'

	'
	'
	



	'
	'
	

	
	'

	'
	'
	



	'
	'
	'
	'



	'
	'
	
	'
	'
	'
	'
	'



	'
	'
	



	'
	'
	'
	'



	'
	'
	
	'
	'
	'
	'
	
	'
	'
	'
	
	
	
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	
	'
	
	'
	'
	'
	'
	'
	
	'
	'
	
	

	
	'
	'
	

	

	'
	'
	'
	
	
	'
	'
	'
	

	
	'
	'
	
	'
	
	'
	'
	
	
	
	'
	'
	'
	'
	
	'
	'
	
	

	
	'
	'
	
	'
	
	'
	'
	
	
	
	'
	
	'
	
	
	
	'
	'
	
	


	
	'
	'
	
	
	

	'
	'
	
	

	
	'
	'
	
	
	
	'
	'
	
	
	
	'
	'
	'
	
	
	'
	'
	'


	
	'
	'
	'

	
	
	'
	'
	

	

	'
	
	'
	
	
	

	
	'
	
	
	
	'
	'
	

	
	
	
	
	'
	
	
	
	'
	
	'

	
	'
	
	
	'

	
	
	
	'
	'
	
	
	
	'
	'
	
	
	
	'
	'
	
	
	
	
	'
	'
	
	
	
	
	'
	'
	
	
	
	'
	'
	
	
	
	
	'
	'
	
	
	
	'
	'
	
	
	'
	'
	'
	
	
	
	'
	'
	'
	
	
	'
	
	'
	
	
	
	'
	'
	
	
	'
	'
	'
	
	'
	
	'
	'
	
	
	
	'
	'
	'
	
	'
	'
	'
	
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	
	
	
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'

	'
	'
	'
	
	'
	'
	'
	'
	
	'
	'
	'

	
	
	'
	'
	'
	
	'
	'
	'
	
	
	
	'
	'
	'
	
	
	'
	'
	'

	

	'
	'
	'
	
	'
	'
	'
	
	
	
	'
	'
	'
	
	
	'
	'
	'
	
	
	'
	'
	'

	'
	'
	'
	'

	'
	'
	'
	'

	'
	'
	'
	'
	
	'
	'
	'
	

	'
	'
	'
	'
	
	
	'
	'
	'

	
	
	'
	'
	'
	
	'
	'
	'
	
	
	'
	'
	'
	
	
	'
	'
	'

	
	'
	'
	'
	
	
	
	'
	
	'
	
	
	
	'
	'
	

	'
	'
	
	'
	
	

	'
	
	'

	
	
	'
	
	'

	
	
	'
	
	'



	
	'
	
	'

	
	
	'
	
	'



	
	'
	'
	'

	

	'
	
	'


	

	'
	
	'


	

	'
	
	'
	
	

	'
	
	'

	
	
	'
	
	'
	
	

	'
	
	'



	
	'
	'
	'

	

	'
	'
	'


	
	'

	'
	


	'
	'
	'
	

	

	'

	'
	

	

	
	'
	'

	


	'
	
	
	
	
	
	'
	'
	'


	
	'
	'
	'


	'
	'
	'
	

	

	'
	
	'


	

	'
	
	'



	
	'
	'
	'




	'

	'
	


	
	'

	'
	




	'

	'
	

	
	
	'
	'
	


	'
	'
	'
	

	'
	'
	
	'
	

	.
	'
	'
	


	'

	'
	'

	
	'
	'
	'
	'
	'
	'
	'
	'

	'
	'
	'
	'

	'

	'
	'
	

	

	'
	'
	'

	'
	'
	'
	'
	
	'
	'
	'
	
	
	'
	'
	'
	


	
	'

	'
	


	'
	'
	'
	
	
	'
	'
	'
	'

	'
	'
	'
	'

	'

	'
	'


	'

	'
	'
	'

	'

,
	'
	'

'

, er
,
	'
	/0. (
,
,
.  /

'

, (2.
	'
	. (2 d'
, (o '( ( 



, (2. (2. ( the rest of '(2.
,
, (2.
'
 '( (
, (  ( ( the rest of the last d. (2.  (2.


, (2. (  /
, ( the end d.
, (2. (  (1/ (on ( the '(2. ( the end of the end of the end of the end of the end of the end of the '( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (on ( the first and ( ( ( ( ( ( ( ( ( the end of the end of the end of ( ( ( the end dfs ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( the end of the most ( ( ( ( the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the most recent years, ( ( ( ( the end of the end of the
  ( the end of the end of the
  ( the
	 the end of the last week, ( ( ( ( ( dfs ( s.
	 the end of the
  ( the end of the end of the end of the end of the end of the
	 the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the
 the end of the end of the end of the
 the end of the
,
 the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the
 the end of the end of the end of the

 the end of the end of the end of the
 the end

====================================================================================================

PROMPT 9:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get count of victims injured, suspects arrested and suspects killed for each incident.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 9:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	Get count of victims injured, suspects arrested and suspects killed for each incident.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT IncidentID, COUNT(*) FROM us_shootings GROUP BY IncidentID;

Expected Output:
	IncidentID, COUNT(*)
	1, 1
	2, 1
	3, 1
	4, 1
	5, 1
	6, 1
	7, 1
	8, 1
	9, 1
	10, 1
	11, 1
	12, 1
	13, 1
	14, 1
	15, 1
	16, 1
	17, 1
	18, 1
	19, 1
	20, 1
	21, 1
	22, 1
	23, 1
	24, 1
	25, 1
	26, 1
	27, 1
	28, 1
	29, 1
	30, 1
	31, 1
	32, 1
	33, 1
	34, 1
	35, 1
	36, 1
	37, 1
	38, 1
	39, 1
	40, 1
	41, 1
	42, 1
	43, 1
	44, 1
	45, 1
	46, 1
	47, 1
	48, 1
	49, 1
	50, 1
	51, 1
	52, 1
	53, 1
	54, 1
	55, 1
	56, 1
	57, 1
	58, 1
	59, 1
	60, 1
	61, 1
	62, 1
	63, 1
	64, 1
	65, 1
	66, 1
	67, 1
	68, 1
	69, 1
	70, 1
	71, 1
	72, 1
	73, 1
	74, 1
	75, 1
	76, 1
	77, 1
	78, 1
	79, 1
	80, 1
	81, 1
	82, 1
	83, 1
	84, 1
	85, 1
	86, 1
	87, 1
	88, 1
	89, 1
	90, 1
	91, 1
	92, 1
	93, 1
	94, 1
	95, 1
	96, 1
	97, 1
	98, 1
	99, 1
	100, 1
	101, 1
	102, 1
	103, 1
	104, 1
	105, 1
	106, 1
	107, 1
	108, 1
	109, 1
	110, 1
	111, 1
	112, 1
	113, 1
	114, 1
	115, 1
	116, 1
	117, 1
	118, 1
	119, 1
	120, 1
	121, 1
	122, 1
	123, 1
	124, 1
	125, 1
	126, 1
	127, 1
	128, 1
	129, 1
	130, 1
	131, 1
	132, 1
	133, 1
	134, 1
	135, 1
	136, 1
	137, 1
	138, 1
	139, 1
	140, 1
	141, 1
	142, 1
	143, 1
	144, 1
	145, 1
	146, 1
	147, 1
	148, 1
	149, 1
	150, 1
	151, 1
	152, 1
	153, 1
	154, 1
	155, 1
	156, 1
	157, 1
	158, 1
	159, 1
	160, 1
	161, 1
	162, 1
	163, 1
	164, 1
	165, 1
	166, 1
	167, 1
	168, 1
	169, 1
	170, 1
	171, 1
	172, 1
	173, 1
	174, 1
	175, 1
	176, 1
	177, 1
	178, 1
	179, 1
	180, 1
	181, 1
	182, 1
	183, 1
	184, 1
	185, 1
	186, 1
	187, 1
	188, 1
	189, 1
	190, 1
	191, 1
	192, 1
	193, 1
	194, 1
	195, 1
	196, 1
	197, 1
	198, 1
	199, 1
	200, 1
	201, 1
	202, 1
	203, 1
	204, 1
	205, 1
	206, 1
	207, 1
	208, 1
	209, 1
	210, 1
	211, 1
	212, 1
	213, 1
	214, 1
	215, 1
	216, 1
	217, 1
	218, 1
	219, 1
	220, 1
	221, 1
	222, 1
	223, 1
	224, 1
	225, 1
	226, 1
	227, 1
	228, 1
	229, 1
	230, 1
	231, 1
	232, 1
	233, 1
	234, 1
	235, 1
	236, 1
	237, 1
	238, 1
	239, 1
	240, 1
	241, 1
	242, 1
	243, 1
	244, 1
	245, 1
	246, 1
	247, 1
	248, 1
	249, 1
	250, 1
	251, 1
	252, 1
	253, 1
	254, 1
	255, 1
	256, 1
	257, 1
	258, 1
	259, 1
	260, 1
	261, 1
	262, 1
	263, 1
	264, 1
	265, 1
	266, 1
	267, 1
	268, 1
	269, 1
	270, 1
	271, 1
	272, 1
	273, 1
	274, 1
	275, 1
	276, 1
	277, 1
	278, 1
	279, 1
	280, 1
	281, 1
	282, 1
	283, 1
	284, 1
	285, 1
	286, 1
	287, 1
	288, 1
	289, 1
	290, 1
	291, 1
	292, 1
	293, 1
	294, 1
	295, 1
	296, 1
	297, 1
	298, 1
	299, 1
	300, 1
	301, 1
	302, 1
	303, 1
	304, 1
	305, 1
	306, 1
	307, 1
	308, 1
	309, 1
	310, 1
	311, 1
	312, 1
	313, 1
	314, 1
	315, 1
	316, 1
	317, 1
	318, 1
	319, 1
	320, 1
	321, 1
	322, 1
	323, 1
	324, 1
	325, 1
	326, 1
	327, 1
	328, 1
	329, 1
	330, 1
	331, 1
	332, 1
	333, 1
	334, 1
	335, 1
	336, 1
	337, 1
	338, 1
	339, 1
	340, 1
	341, 1
	342, 1
	343, 1
	344, 1
	345, 1
	346, 1
	347, 1
	348, 1
	349, 1
	350, 1
	351, 1
	352, 1
	353, 1
	354, 1
	355, 1
	356, 1
	357, 1
	358, 1
	359, 1
	360, 1
	361, 1
	362, 1
	363, 1
	364, 1
	365, 1
	366, 1
	367, 1
	368, 1
	369, 1
	370, 1
	371, 1
	372, 1
	373, 1
	374, 1
	375, 1
	376, 1
	377, 1
	378, 1
	379, 1
	380, 1
	381, 1
	382, 1
	383, 1
	384, 1
	385, 1
	386, 1
	387, 1
	388, 1
	389, 1
	390, 1
	391, 1
	392, 1
	393, 1
	394, 1
	395, 1
	396, 1
	397, 1
	398, 1
	399, 1
	400, 1
	401, 1
	402, 1
	403, 1
	404, 1
	405, 1
	406, 1
	407, 1
	408, 1
	409, 1
	410, 1
	411, 1
	412, 1
	413, 1
	414, 1
	415, 1
	416, 1
	417, 1
	418, 1
	419, 1
	420, 1
	421, 1
	422, 1
	423, 1
	424, 1
	425, 1
	426, 1
	427, 1
	428, 1
	429, 1
	430, 1
	431, 1
	432, 1
	433, 1
	434, 1
	435, 1
	436, 1
	437, 1
	438, 1
	439, 1
	440, 1
	441, 1
	442, 1
	443, 1
	444, 1
	445, 1
	446, 1
	447, 1
	448, 1
	449, 1
	450, 1
	451, 1
	452, 1
	453, 1
	454, 1
	455, 1
	456, 1
	457, 1
	458, 1
	459, 1
	460, 1
	461, 1
	462, 1
	463, 1
	464, 1
	465, 1
	466, 1
	467, 1
	468, 1
	469, 1
	470, 1
	471, 1
	472, 1
	473, 1
	474, 1
	475, 1
	476, 1
	477, 1
	478, 1
	479, 1
	480, 1
	481, 1
	482, 1
	483, 1
	484, 1
	485, 1
	486, 1
	487, 1
	488, 1
	489, 1
	490, 1
	491, 1
	492, 1
	493, 1
	494, 1
	495, 1
	496, 1
	497, 1
	498, 1
	499, 1
	500, 1
	501, 1
	502, 1
	503, 1
	504, 1
	505, 1
	506, 1
	507, 1
	508, 1
	509, 1
	510, 1
	511, 1
	512, 1
	513, 1
	514, 1
	1, 1
	2, 1
	3, 1
	4, 1
	5, 1
	6, 1
	7, 1
	8, 1
	9, 1
	10, 1
	11, 1
	12, 1
	13, 1
	14, 1
	15, 1
	16, 1
	17, 1
	18, 1
	19, 1
	20, 1
	21, 1
	22, 1
	24, 1
	25, 1
	26, 1
	27, 1
	28, 1
	29, 1
	30, 1
	31, 1
	32, 1
	33, 1
	34, 1
	35, 1
	36, 1
	37, 1
	38, 1
	39, 1
	40, 1
	41, 1
	42, 1
	43, 1
	44, 1
	45, 1
	46, 1
	47, 1
	48, 1
	49, 1
	50, 1
	51, 1
	52, 1
	53, 1
	54, 1
	55, 1
	56, 1
	57, 1
	58, 1
	59, 1
	60, 1
	61, 1
	62, 1
	63, 1
	64, 1
	65, 1
	66, 1
	67, 1
	7, 1
	8, 1
	9, 1
	10, 1
	11, 1
	12, 1
	13, 1
	14, 1
	15, 1
	16, 1
	17, 1
	18, 1
	19, 1
	20, 1
	21, 1
	22, 1
	23, 1
	24, 1
	25, 1
	26, 1
	27, 1
	28, 1
	29, 1
	30, 1
	31, 1
	32, 1
	33, 1
	34, 1
	35, 1
	36, 1
	37, 1
	38, 1
	39, 1
	40, 1
	41, 1
	42, 1
	42
	43, 1
	44, 1
	45, 1
	46, 1
	47, 1
	48, 1
	49, 1
	50, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52, 1
	52
	52, 52
	52, 52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
1
	52, 1
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	0
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	52
	
	52
	
	52
	52
	52
	
	52
	52
	52
	52
	52
	52
	52
	52
	52
	
	52
	
	52
	
	52
	
	52
	
	
	
	
	52
	
	52
	
	52
	
	52
	
	52
	
	42
	
	42
	
	43
	
	44
	
	46
	
	46
	
	46
	
	46
	
	52
	
	52
	
	52
	52
	52
	52
	52
	52
	
	52
	52
	52
	52
	52
	52
	52
	52
	52
	
	52
	52
	52
	52
	52
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	
	52
	
	52
	
	52
	52
	
	52
	
	52
	
	
	52
	
	1
	
	
	
	36
	
	36
	
	36
	
	36
	
	36
	
	42
	
	42
	
	42
	
	42
	
	42
	42
	42
	
	42
	
	
	
	42
	
	42
	
	43
	
	44
	
	44
	
	46
	46
	
	46
	46
	46
	
	46
	
	
	
	
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	52
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	1
	1
	
	1
	
	1
	
	1
	1
	
	1
	
	
	
	
	1
	
	1
	1
	1
	
	1
	1
	
	1
	
	1
	
	1
	
	1
	
	
	1
	
	
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1
	
	1

	1
	
	1
	1
	1

	
	1


	1



	1




	1


	1


	1





	



	1


	1


	1







	
	1


	1


	1


	1














	1










	1





	1


	1

















	1







	1



	1






	1


	1


	1


	1

	1
	1
	1



1



	1


















































































































































































































































































































































































































































































	







	





























































































































	








































































































































































	





































































	


	



	



	








	























	
	

	


	




	



	


	
	


	



	



	



	1

	
	

	
	

	
	

	
	

	
	

	
	

	
	
	
	1
	1
	
	
	1
	
	1
	
	
	1
	
	1
	
	1
	
	.00
	
	
	
	
	
	
	
	
	1
	1
	
	1
	
	.00
	
	
	
	
	.
	
	1
	.00
	
	
	1
	
	
	.00
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	1
	
	
	
	
	
	
	1
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	.00(
	
	
	
	
	
	
	
	.00
	
	
	
	
	
	
	
	
	
	
	
	.0
	.0
	
	
	
	
	1
	
	
	
	
	
	
	
	
	
	
	

	
	

	
	
	

	
	
	
	
	
	
	
	
	

	
	
	
	
	
	
	
	
	


	
	
	
	
	
	


	
	

	
	


	
	


	
	
	
	
	
	

	
	

	
	


	




	



	


	



	




	.00
	


	
	


	
	

	



	
	

	


	
	
	
	



	

	
	


	
	

	
	

	
	
	
	
	
	
	

	
	
	
	


	
	


	



	



	



	


	




	




	


	



	



	



	



	



	








	








	



































































































	








	



	



	


















	

























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































  




































































































































































































































































































































































































































































































































































































































,0












,0


,0


,



,







,2


,
,
,
,
,0
,
,0
,0
,
,0
,
,0
,0
,
,
,
,
,
,
,
,
,
,
,

,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,0
, 
,
,
,0
,
,0
,
,132
  0
,
,
, 
,
,0
,
, 
,
,0
,
,0
,
,0
,
,0
,0
,0
,0
,
  F0
,0
,
,0
,0
,0
,
,0
,
  <br0
,
,0
  
,0
-0
,0
  <:00,0 the other
-0
, the other side the other side the other
,0 the other side the other than the other
,0
,0
,0
,0 the other side the other side
,0
,0 the other side the other side the other
,0 the other
,0 the other side
<br new E
,0 the other_3
, the other_3
, the other_1, the other_1 the other
<br /<br-1, the last year-
<0 the other side the other
, the other side the other_1 the other_1, the other
, the other_1 the other_1, the other side the other_1 the other_1 the other_1 the other_1 the other_1 the other_1 the other_1 the other_1 the other_1 the other_1 the other_1 the other_1 the other_1, the other_9:54, the other_1 the other_1 the other_1 the other_16th-1 the other_9:54th, the other_1 the other times, the other_16th_1 the other_16th, the other_16th, the other_16thirty-1: the other words-1 the other words-1 the other words-1 the other_9:54th-1:54th-1,000 years, the other_1, the other_16th_1:54th-1 the other_1 the other_16th, the other_1 the other_1 the other_1 the other words-1 the other words-1 the other words-1: the other times, the other times, the other words-1:16th_1: the other_1, the other side
-1, the other words-1, the other words-C, the_1:
-C the other times, the other words-1:54th_ (1 day, the other_1:
-1:54th_1 day, the other side
-1 the other_1 day, the_ the other_ the other side_1 the_1 day, the_1 the_1 the_1 day, the_1 the_ the_1 day, the other_1 the_16th_ (1 the_1 the_16th_ (1, the_ the_ the_ (1 the_ the_ (1, the_ (1, the_ (1_ (1 the_ (1 the_ (1.1-1 the_ (Shar_ (1_ the_ (1_ (1-1-Shin_ (Shar-Shar_dds  <thomas_dax, the_Shadds< 
-Shar-Shar-Shar-Shin_Shar-Shar-Shar-Friends<a_m<divide_dblockquote+
-Shar-Shar-Shar-Shar-Shar-Friends, the_m<  ||-h-Shar-f the_m 
  Simplify, the_a_m the_a_a_migers  	 the_a_Shar-Shar-Shin the other_Shar-Shar-finally, the_a_Shar-Shar-Shar-Shin the_m	other_Shar-Shar-Shar-Shar-Shin the_a_a_Shar-Shar-Shar-Shar-Shar- the_m  {Shar- a_Shar-Shar-Shar-Sharababre	(
(private, the_a_Shar-Shar-Shar-Shak:Shar-Shar-Sharabababre	Sharababig
- a_a_Shar-Shar-Sharab7th-Faint	Shar-Shar-Shar-Sharabre	Shar-Shakabigers<,Shakabig
-Shar-Nelabre	Sharabig  Simplify, the_Shak:Shar- the_Shar-Sharabigottigers<{Shak:m the_a_Sharabigottigottabigottigottabigdp_Shakabigottabig
-Sharabigottigottabigottigottabigottabigottigottabigott  Simplify,Sharabigottigottabigott  Simplify, the first_Shakabre<  Simplify.Shak:Shak:Shak:Shak_Shakabigott<,the_Shakarn<\nurigott<,Shak:Shakir
Shak:Shakarnsour-a(Shakabortussurigottabortaxi(Shak:Shakabre@  Simplify.Shar<a(the_a(Shakabigottabortel_a(Shar-a(Shar<iShakarn<divideas the_a(Shak:Shakabigottabigottabigottabigottabigottabigottabigottabigottabigottabigottigottabigottab  Simplify.Naughtsour(Shakabigott.BriefSimplify.a(if(Shallow<.a(Shar<{
<{The first_a(Shar<{  The_a

====================================================================================================

PROMPT 10:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each month, get count of victims killed and average of victims killed in each shooting incident.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 10:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each month, get count of victims killed and average of victims killed in each shooting incident.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	For each month, get count of victims killed and average of victims killed in each shooting incident.

SQL:
	SELECT COUNT(VictimsKilled) AS VictimsKilled, AVG(VictimsKilled) AS AverageVictimsKilled
	FROM us_shootings
	WHERE IncidentDate BETWEEN '01/01/2015' AND '12/31/2015'
	GROUP BY IncidentDate
	ORDER BY IncidentDate

Expected Output:
	VictimsKilled	AverageVictimsKilled
	1		0.5
	2		0.5
	3		0.5
	4		0.5
	5		0.5
	6		0.5
	7		0.5
	8		0.5
	9		0.5
	10		0.5
	11		0.5
	12		0.5
	13		0.5
	14		0.5
	15		0.5
	16		0.5
	17		0.5
	18		0.5
	19		0.5
	20		0.5
	21		0.5
	22		0.5
	23		0.5
	24		0.5
	25		0.5
	26		0.5
	27		0.5
	28		0.5
	29		0.5
	30		0.5
	31		0.5
	32		0.5
	33		0.5
	34		0.5
	35		0.5
	36		0.5
	37		0.5
	38		0.5
	39		0.5
	40		0.5
	41		0.5
	42		0.5
	43		0.5
	44		0.5
	45		0.5
	46		0.5
	47		0.5
	48		0.5
	49		0.5
	50		0.5
	51		0.5
	52		0.5
	53		0.5
	54		0.5
	55		0.5
	56		0.5
	57		0.5
	58		0.5
	59		0.5
	60		0.5
	61		0.5
	62		0.5
	63		0.5
	64		0.5
	65		0.5
	66		0.5
	67		0.5
	68		0.5
	69		0.5
	70		0.5
	71		0.5
	72		0.5
	73		0.5
	74		0.5
	75		0.5
	76		0.5
	77		0.5
	78		0.5
	79		0.5
	80		0.5
	81		0.5
	82		0.5
	83		0.5
	84		0.5
	85		0.5
	86		0.5
	87		0.5
	88		0.5
	89		0.5
	90		0.5
	91		0.5
	92		0.5
	93		0.5
	94		0.5
	95		0.5
	96		0.5
	97		0.5
	98		0.5
	99		0.5
	100		0.5
	101		0.5
	102		0.5
	103		0.5
	104		0.5
	105		0.5
	106		0.5
	107		0.5
	108		0.5
	109		0.5
	110		0.5
	111		0.5
	112		0.5
	113		0.5
	114		0.5
	115		0.5
	116		0.5
	117		0.5
	118		0.5
	119		0.5
	120		0.5
	121		0.5
	122		0.5
	123		0.5
	124		0.5
	125		0.5
	126		0.5
	127		0.5
	128		0.5
	129		0.5
	130		0.5
	131		0.5
	132		0.5
	133		0.5
	134		0.5
	135		0.5
	136		0.5
	137		0.5
	138		0.5
	139		0.5
	140		0.5
	141		0.5
	142		0.5
	143		0.5
	144		0.5
	145		0.5
	146		0.5
	147		0.5
	148		0.5
	149		0.5
	150		0.5
	151		0.5
	152		0.5
	153		0.5
	154		0.5
	155		0.5
	156		0.5
	157		0.5
	158		0.5
	159		0.5
	160		0.5
	161		0.5
	162		0.5
	163		0.5
	164		0.5
	165		0.5
	166		0.5
	167		0.5
	168		0.5
	169		0.5
	170		0.5
	171		0.5
	172		0.5
	173		0.5
	174		0.5
	175		0.5
	176		0.5
	177		0.5
	178		0.5
	179		0.5
	180		0.5
	181		0.5
	182		0.5
	183		0.5
	184		0.5
	185		0.5
	186		0.5
	187		0.5
	188		0.5
	189		0.5
	190		0.5
	191		0.5
	192		0.5
	193		0.5
	194		0.5
	195		0.5
	196		0.5
	197		0.5
	198		0.5
	199		0.5
	200		0.5
	201		0.5
	202		0.5
	203		0.5
	204		0.5
	205		0.5
	206		0.5
	207		0.5
	208		0.5
	209		0.5
	210		0.5
	211		0.5
	212		0.5
	213		0.5
	214		0.5
	215		0.5
	216		0.5
	217		0.5
	218		0.5
	219		0.5
	220		0.5
	221		0.5
	222		0.5
	223		0.5
	224		0.5
	225		0.5
	226		0.5
	227		0.5
	228		0.5
	229		0.5
	230		0.5
	231		0.5
	232		0.5
	233		0.5
	234		0.5
	235		0.5
	236		0.5
	237		0.5
	238		0.5
	239		0.5
	240		0.5
	241		0.5
	242		0.5
	243		0.5
	244		0.5
	245		0.5
	246		0.5
	247		0.5
	248		0.5
	249		0.5
	250		0.5
	251		0.5
	252		0.5
	253		0.5
	254		0.5
	255		0.5
	256		0.5
	257		0.5
	258		0.5
	259		0.5
	260		0.5
	261		0.5
	262		0.5
	263		0.5
	264		0.5
	265		0.5
	266		0.5
	267		0.5
	268		0.5
	269		0.5
	270		0.5
	271		0.5
	272		0.5
	273		0.5
	274		0.5
	275		0.5
	276		0.5
	277		0.5
	278		0.5
	279		0.5
	280		0.5
	281		0.5
	282		0.5
	283		0.5
	284		0.5
	285		0.5
	286		0.5
	287		0.5
	288		0.5
	289		0.5
	290		0.5
	291		0.5
	292		0.5
	293		0.5
	294		0.5
	295		0.5
	296		0.5
	297		0.5
	298		0.5
	299		0.5
	300		0.5
	301		0.5
	302		0.5
	303		0.5
	304		0.5
	305		0.5
	306		0.5
	307		0.5
	308		0.5
	309		0.5
	310		0.5
	311		0.5
	312		0.5
	313		0.5
	314		0.5
	315		0.5
	316		0.5
	317		0.5
	318		0.5
	319		0.5
	320		0.5
	321		0.5
	322		0.5
	323		0.5
	324		0.5
	325		0.5
	36		0.5
	37		0.5
	38		0.5
	39		0.5
	40		0.5
	41		0.5
	42		0.5
	43		0.5
	44		0.5
	45		0.5
	46		0.5
	47		0.5
	48		0.5
	49		0.5
	50		0.5
	51		0.5
	52		0.5
	53		0.5
	54		0.5
	55		0.5
	56		0.5
	57		0.5
	58		0.5
	59		0.5
	60		0.5
	61		0.5
	62		0.5
	63		0.5
	64		0.5
	65		0.5
	66		0.5
	67		0.5
	68		0.5
	69		0.5
	70		0.5
	71		0.5
	72		0.5
	73		0.5
	74		0.5
	75		0.5
	76		0.5
	77		0.5
	78		0.5
	79		0.5
	80		0.5
	81		0.5
	82		0.5
	83		0.5
	84		0.5
	85		0.5
	86		0.5
	87		0.5
	88		0.5
	89		0.5
	90		0.5
	91		0.5
	92		0.5
	93		0.5
	94		0.5
	95		0.5
	96		0.5
	97		0.5
	98		0.5
	99		0.5
	100		0.5
	101		0.5
	82		0.5
	73		0.5
	74		0.5
	75		0.5
	76		0.5
	82		0.5
	82		0.5
	82		0.5
	82		0.5
	91		0.5
	82		0.5
	82		0.5
	82		0.5
	84		0.5
	85		0.5
	86		0.5
	87		0.5
	91		0.5
	91		0.5
	91		0.5
	91		0.5
	91		0.5
	91		0.5
	92	0.5
	94	0.5
	96	0.
	127	0.	0.
	127	0.
	127	0.
	127	0.
	127		0.
	127	0.
	127	0.
	127
	127	
	127		0.
	127		0.
	127	
	127		0.
	127	0.
	127.
	127.
	127.
	127	0.	127
	127.
	127.
	127.
	127.	127.
	127.
	127.	127.
	127
	127.
	127.	0.
	127.	127
	127.	
	127
	127
	127
	127
	127.
	127
	127.
	127
	127
	127
	127	127
	127	127.
	127.
	127.
	127.
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
		127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	
	
	127
	127
	127
	127
	127
	127
127
	127
	127
127
	127
	127
127
	127
	127
	127
	127
	127
	127
	127
)
	127
	127
)
	127
	127
)
	127
	127
)
	127
	127
)
	127
	127
	
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127	127
	127
	127
	127
	127
	127
	127
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	
	127
	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127
	127
	127
	127
	127
	127	127
	127
	127	127
	127
	127
	127
	127
	127	127
	127
	127	127
	
	127
	127
	
	127
	127
	127
	127	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	
	127
	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	127
	127	127
	
	127
	127
	127
	127	0
	
	127
	127
	
	127
	127
	127
	127
	127
	
	127	127
	127
	127	127
	127
	127	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
127
	127
	127	127
	127
	127	127
	127
	127	127
127
	127
	127	127
	127
	127
	
	127	127	127
	127
127	127
	127
	127
	127
	127
	127	127
	127
	127
	127
	127
	127
	127
	127
127
	
	127
	127
	127
127
127
	127
	127
	127
	127
	127
127
	127
127
	127
	127
	127	127
	
	127
	127
	
	127
127	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127	127
	127
	127
	127
	127
	127	127
	127
	127
	
	127
127	127
	127
127
127
	
	127
	127
127

127
	127
	
	127
127
	127
	127
127
	127
	127
	127	127

	127	127
	127
	127	127
	
	127
	127
	127

	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127


127
127




127
0




	127





1


	


	127
	



127
	127

	127
	127





	127
	127

1
	127
	

	127

	
	127
	127
	127
	127
	127
	
	127
	
	

	127
	
	


	127
	
	127

	127
	127


(



	127
	127
	


	127
	
	
	127
	
	

	127
	
	
	
	127
	
	

	127
	
	

	127
	


	127
	
	

	127
	
	
	127
	127
	

	127
	127

	127
	127
	
	127
	127
	
	127
	127
	127
	127
	
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	

	
	127
	127
	
	127
	

	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127
	
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127
	
	
	127
	127
	127
	127
	
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127
	127
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	
	127
	
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	0
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127
	127
	127
	127
	127
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	127
	127
	127

	127
	127
	
	127
	127
	
	127
	127
	
	127
	127


	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	
	
	
	127
	
	
	127
	127
	
	127
	127
	
	127
	
	
	127
	127
	
	127
	127
	

	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127


	127
	127




	127
	
	127
	127
	

	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127
	127
	
	127



	

	127


	
	127



	
	127
	127
	
	127


	
	127
	127

	
	127
	127
	
	127
	127
	
	127


	127
	127
	127
	127






	127
	127
	
	127


	127

	127



	
	127



	
	127













	127





	127


	127

	127

	127
	127
	127

	127
	127
	127
	127
	127
	
	127


	127
	127



	127
	127
	127
	127
	127
	127
	127
	127
	
	127
	127
	
	127
	127
	
  
	127
	127
  
	127


	127
127

	127
	127


	127
	127






  


	127
	127


	127
	127


	127
	127


	127
	127
127



	127



	127
127
127

	127

127
127
	127
	127

	127
	127


	127
  
127

	127
  
127
127
	127
  


	0

127
127
	0

127
127




127
127
	127

127
127
	0

127


	0
  




  
  



	127
  
127


	127

127



  
  
	127
	
  



	127
  
127

	127
  
127
	127
  
  	127
  
  
  	127
  
  
  
  
  
  
  


  
  
  


  
  
  
  
	127
  
127

  
  
  
  
  
  
  
127
  127
  
127

  
  
127
127
  
  
  127


  
  
127

  
  
  127

  
  
  
  
  
  
  
  
  
  
  127
  127
  
  
  127
  
  
127
  127
  
  
127
  
  
127
127
  127
  (1
  127
  
  127
  
  
  
127

  127
  
127
  127
  
  127
  127
  
  127
127
  127
  127
127
  
  (127
	0
  
  
	0
  
  (0
127
  
  (  
  127
  (1
	0
  
  127
127
  127
  (0  127
  
  127
127
  
  127
127
  
  
  127
  127
  
  (0  127
  
  (  
  
  
  
127
  
  
  
127
127
  
  (0  127
  (  127
  0  
  (
127
  
  
  (  127
  127
  (  (  
  
  (  (  
  
  (  (  
  (  (  (  127
  (  (  .0  
  (  0  127
  
  127
  127
  127
  127
  127
  (  0  0  
  (  0  127
  
  0  127
  
  127
  0  127
  127
  0  127
  127
  127
  
  (  0  127
  
  127
  127
  127
  127
  127
  
  0  0
  (  127
  127
  127
  0  0
  127
  0  0
  
  (0  127
  127
  0  0  127
  0  0  127
  127.1,  127
  127.1.1
  127
  0  0  127
  0  0  127
  .1
  127
  
  127  )  127
  .1
  127
  
  
  0  127
  
  0  .  
  .1
  0  
  .1
  0  127
  .1
  127,  (  127,  (  
  
  0  127,  
  0  127  
  
  0  127  127  127  (  127  127  
  .  127  127  .  127  .  127  .  127  .  127  .  0  0  127,  .  0  127  
  
  0  127  
  
  0  127  
  0  0  127  
  
  0  127  
  
  0  127  
  
  0  127  
  
  0  
  
  (  0  
  (  (  
  
  
  (  0  
  
  (  
  
  (  ,  0  
  
  (  
  
  
  
  
  
  
  
  
  
  
  ,  0  
  (  ,  
  
  
  ,  (  
  
  ,  (  
  
  ,  
  (  ,  ,  (  (  
  ,  (  .  ,  ,  
  (  ,  ,  
  0   0  ,  0  0    ,  ,  0  (  ,  (  .0  ,  ,  (  (  ,  ,  .  .  ,  ,  .0  .  ,  ,  .1  ,  ,  ,    ,  ,  \  .1  ,  \  .1  \  ,  
  (  \  \  ,  ,  
  ,  \  .1  ,  \
  ,  \  ,  
  ,  \  \  ,  ,  \
  \  ,  ,  \  \  (  \  \  \   0  \  \  \  \  ,  ,  \n
  ,  \
  \  ,  \  \  ,  \  \  ||  \  \  \  \  \  \  \  ,  \  \  \

  ,  \  ,  ,0  \  ,  ,  \
  \  ,  ,  	  ,  \  ||  \
,0  ||  ,  \
  ,  ,  \
  <  ,  ,  	0  \

  	0  \
  ,0  \
  ,  ,0  \
  ,  ,  	0  \
\
  	  \  ,  ,  	  ,  	
  \

  \  \
  	  \




  \
  ,  ,  \
  \  \
  \
  \



  \
  ,  \
,  	  	  ,  	  	
  \
  <  \





  \
  ,  \
  \
  ,  ,  	
  ,  \
  \
\

  ,  \

  ,  ,  	
<  \
\

\
\

<  	0  	
\
\n  ||  	
\
\


,  ,
	0  	
\n  \n  	
  ,  	  ,  \n  	

,  \n

\n  	


\n
,


<br /


<br/	  \



,
<br /,
<br/,


<br2  	  \

	
	  ,
<br2  \end  	  	
	
	  ,
,  	  ,
	
<br /||  
	  ,
	  \
	  ,  \
	
	
	
	
	
	

<td_1,
<td_1
	
,<td
<td_2
<td_2  
<td_
<br2  
	

<span
	
<span
<td
	
<td
<td
	
	


	
	
	
<td
	
	
	
	
	  <td_2  <td
<br2  <br2  ,


,
	  	
<br2  	
	
	  <td0
<td
<td
<td0  

<td_  <td

	
	
<td0  <td0  






	





	
<td0


<td0


	

	
	

	
	
	
<td
<td
<td0  <td0
	

<td0
	
	
<td  
	
<td


	

<td


<td0
<td

	
<td



<td0




<td0





<td






<td0

  

  
  

  
  




  








	
	


  
	
	



	







	
<td

  	



  <
	












<td0  <td
  
  <td0  	  
  
  




  
<td  




	
  





	









<td0
  
<td_	

	
	


  
	
	


  
	
	
	


	
	
	
  	
  	

	
	
	
	
	
  	
	




  
	


  
	
	
	
  
	
	
	  	  	  
	  
  
	
	
	  
  
	
	
	
  (	




	
  
  

  
  (	

  
  
  

  
  
	
	
  
  
	
  
  

  
  
	

  

  



  
	
  
  
  	  
  
  	
  
  
	

  
  	
	

  
	
  
  -  

  


	
  
  	

	

	
	
  
  
	
  
  

  
  

	
  

	


  	
	
  
  

  
  
  

  


	


  


	
  
  (	
  
  

  (    
  	
  
  	
  	
  

  

  	
  (	(  	
  
  	

  
  
  	



  
  
  
  
  
  	
  	
  (  	
  	
  (  	
  	
  	
  (  (  
  	
  	
  (  (  	
  (  
  
  	The last-  
  
  
  
  (  (	
  	
  (	
  	
  
  
  	
  
  	
  
  (  
  	
  	
  	
  
  (  
  
  
  
  (  	
  (  
  (  (  (  (  (  
  
  (  
  
  (  (  (  	(  (  (  public  if (in the system	
  (  (  
  (  (  (  (

====================================================================================================

PROMPT 11:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
us_population_county (PopulationCount, County)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 11:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.

Schema: 
	us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
us_population_county (PopulationCount, County)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, incident counts for million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, incident counts for million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, incident counts for million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, suspects arrested per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita.
	For each county, get victims killed per million, and incident counts for million capita, and incident counts for million capita.
	For each county, get victims killed per million, and incident counts for million capita, and incident counts for million capita, and incident counts for million capita, and incident counts for million capita, and incident counts for million, and incident counts for million, and incident counts for million, and incident counts for million, and incident counts for million capita.
	For each county, get victims killed per million capita, and incident counts for million capita, and incident counts for the same, and incident counts for the first and incident counts for the same, and incident counts for the same, and incident counts for the same, and incident counts for each county, and incident counts for million, and incident counts for million, and incident counts for each county, and incident counts for the same, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident counts for the first, and incident counts, and incident counts, and incident counts for the first, and incident counts for each county, and incident, and incident counts for the first, and incident counts for the first, and incident, and incident counts for the same, and incident counts for million, and incident counts for million, and incident counts for the same, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and the same, and incident, and incident, and the most recent, and the most recent, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident counts for the most recent, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident counts for the most recent, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident counts for the first, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident counts for each, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident counts for the first, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident, and incident.























for each



	and incident, the first



	and, and incident, and incident, and incident, and the, and incident, and incident, and the  *
	*
	*


	*


	and  

	and	and incident, and the
	and incident, and the, and incident, and the, and the, and the, and the first, and the, and  for each, and
	*

	and  

	and, and the, and the, and incident, and the, and the, and the first
	and, and the, and the, and the, and the, and the, and the, and the first, and the first, and the first, and the, and the, and incident, and the, and incident, and incident, and incident, and incident, and incident, and  
	and

and  and the, and the, and the, and incident, and the first







and  





































































































































































































































































































































































and






	
	









	
	and
	1

	and




	and














	







	and






	and

	
	

	
	"

	and

	
	and







	
	and

	








and
	



	and




	and
	and

	and









	c
	and

	and













	"






	



	
	and

































  


































and
























	




and






























































	and






























































































































































































































	and
























































  



	and




	and








	











	and





























and































	and















	





	




	and























	





































	and	




























































































	and





























and






























































































































































































































































































































































































	S





























	S





























































































































































































































































































































































































































































































































































































	S




























	"























	<br'

	





	

















	"



	"









	





	




	"




	"



	





	










	and




	"










	
























































	S
















































































































































































































































































































































































































































	






	"






























































































































































































































































	






























































































































































































































































































































































































































































































































































































































































































































































































































































  for (for (weather,









  for (for (for ( the same (weather, and (for ( for (for (for (for (for (for ( for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for (for ( ( (for ( ( ( ( ( ( ( ( ( ( ( ( ( (  ||<  	(<  , (, (<, (<, (<, (, (, (<, (<, (<, (, (, (, (<, (<, (<, (var (<, (  ||<, (.  ||<.,  Simplify, the first, (, (  







The first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the most (, the first, the first, the first, the first, the first, the first, the first, the first, the first,  The first,  The first, the first,
The first,  The first,  The first,
The first, the first,

The first,
The first, the first,  The first, the first,
The first, the first, the first, the first,  
The first,

The first, the first,
The first, the first, the first, the first,  The first,
The first, the first,
The first, the first,  The first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first, the first,  The first, the first,  The first, the first, the first, the first, and.
The first,  
The first, the first, and the first, the first, the first, the first, and the first, the first, and the first, and the first, the first, and the first, the first, and the first,  The first, and the first, and the first, and the first, and the first, and the first, the first, and the first, and the first, the first, and the first, and the first, and the first, and the first, and the first, and the first, and<Simplify, and the first, and the first, and the first, and the first, and the first, andSimplify{Simplify, and

The first,

====================================================================================================

PROMPT 12:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get shooting incidents per million capita.

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 12:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get shooting incidents per million capita.

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	For each state, get shooting incidents per million capita.
	INSUFFICENT

Expected Output:
	For each state, get shooting incidents per million capita.
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Alabama'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Alaska'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Arizona'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Arkansas'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'California'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Colorado'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Connecticut'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Delaware'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Florida'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Georgia'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Hawaii'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Idaho'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Illinois'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Indiana'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Iowa'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Kansas'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Kentucky'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Louisiana'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Maine'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Maryland'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Massachusetts'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Michigan'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Minnesota'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Mississippi'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Missouri'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Montana'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Nebraska'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'Nevada'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'New York'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'New York'
	SELECT IncidentID, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested, IncidentDate, State, CityOrCountry, PopulationCount, VictimsKilled / PopulationCount AS IncidentsPerMillionCensus FROM us_shootings WHERE State = 'New York'
	SELECT IncidentID, VictimsKilled, VictimsInjured, IncidentDate, State, CityOrCountry, PopulationCount, IncidentDate, State, CityOrCountry, PopulationCount, IncidentDate, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, State, State, State, State, CityOrCountry, State, State, State, CityOrCountry, State, CityOrCountry, State, CityOrCountry, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State,State, State, State, State, State, State, State, State, State, State,State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State,State, State, State, State, State, State, State, State, State, State, State, State, State,State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State,State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, s, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State, State,





















	
















	





	

	
	



	
	


	
	


	
	
	
	

	

	

	
	
	
	

	




	
	









	





	




	

	

	




	


	 State





	
	
	

	


	
	



	
	

	 State




	
	 State

	




	

	 State
	 State
	 State
	 State
	 State
	 State

	 State


	 State




	 State

	 State
	 State



	 State

	 State
	 State



	 State



	 State



	 State

	 State





	 State

	 State
	 State
	 State
	 State

	 State

	 State









	 State











	 State

	 State
	 State




	 State
	 State



	 State





	 State



	 State


	 State










	 State
	 State



	 State
	 State









	 State



	 State





	 State
	 State













	 State




	 State
	 State

	 State












	 State


	 State


	 State
	 State














	 State














	 State







	 State
	 State































































































































































































































































	 S





























































































































































































































































































































































































































































































































































































































































































































































































































































































, the of




















































, the, the National







, the, the, the






, the,

































, the, P














































































, Winner,













,























,












































































,




















































,






















,












































































",
























































































































































































































































































====================================================================================================

PROMPT 13:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get victims killed per million capita.

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 13:

Given the schema of the relavent database(s), generate an SQL statement to answer a question.

Prompt: 
	For each state, get victims killed per million capita.

Schema: 
	us_population (CensurYear, State, PopulationCount)
us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND State = 'California' AND PopulationCount > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_shootings WHERE IncidentDate = '2012-01-01' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND State = 'California' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND CityOrCountry = 'Los Angeles' AND VictimsKilled > 1000000;
	SELECT COUNT(*) FROM us_population WHERE CensurYear = '2012' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND City' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry)
)
)
)
)






' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = '2012


Note: '2012' AND City' AND City' AND City' AND City' AND CityOr' AND City' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = 'Los Angeles' AND CityOr(1' AND CityOrCountry' AND CityOrCountry = 'Los Angeles' AND City' AND CityOrCountry = '2012' AND CityOrCountry 'Los Angeles' AND CityOrCountry 'Los Angeles' AND City'











' AND CityOrCountry = 'Los Angeles' AND CityOrCountry = '2012' AND City' and' AND CityOrCountry= 'Los Angeles'













' AND 'Los Angeles' AND City' AND CityOrCountry = '2012' AND City' AND City' AND CityOr' AND City' AND City'
' AND CityOrig'





































  




and'

























	A











' AND City'










































' AND







	



















	A












' AND




























	





' AND



	
  








	
	A

	
	The

	A
	(
	' AND'
	A
	
	' AND
	V
	A
	A
	A
	
	A
	(
	A
	A
	A'
	' AND
	A' AND
	A
	A'
	A'
	A'
	A
	A
	A' AND City'
	
	A
	A
	A
	A
	A
	A
	A'
	A
	A' AND
	
	A
	
	'
	A'
	
	A' AND
	
' AND
	A' AND
	A
	
	
	A
	
	A'
	
	A
	
	
	A'
	
	
	
	A' AND
	'
	A'
	A'
	'
	A
	A'
	
	A
	
	
	A' AND
	
	
	A
	A
	'
	
	A
	A
	A' AND
	
	' AND
	
	A
	
	A'
	A
	
	
	
	A' AND
	
	A'
	
	
	
	
	
	
	
	
	A'
	
	
	'
	A
	
	A'
	
	
	'
	A'
	A'
	
	A
	
	A'
	
	A
	
	
	A'
	
	'A'
	
	A'
	'
	A'
	' AND'
	
	
	' AND
	A
	
	
	'
	A
	
	
	
	
	
	'
	'
	'
	
	'
	
	
	'
	A'
	1
	'
	'
	'
	
	'
	
	'
	
	
	A
	
	
	
	
	
	K
	A'
	1
	
	'
	'
	
	'
	'
	'
	'
	A
	
	
	'
	
	
	
	A
	
	A
	'
	'
	'
	'
	'
	'
	'
	'
	A'	'	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'A'
	'
	'
	'
	'
	'
	'
	'
	'
	'
'
	'
	'
	'
	'
	'
'
	'
	'
	'
	'
	'
	'
	'
	'	'
	'
	1
	'
	'	'
	'
	'
	'
	'
'
'
	'
	
	'
	'
	'n'
	'
'
	'
	'
	'
	'	'
'
	'
'
'
	'	'
	'
'
'
	'
	'
	'
'
	'
	'
	'
	'
'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
'
	'
	'
	
	'
'
	
	
	'
	
	'
	'
	'
	'
	
	
	
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	
	
	'
	'
	'
	'
	
	'
	'
	'
	
	
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'
	'
	'
	'
	'
	'
	'	'
	
	'
	
	'
	'
	
	'
	'
	
	'
	'
	'
	
	
	
	
	'
	
	
	'
	'
	
	
	
	'	'
	
	
	
	
	'
	'
	
	
	
	'
	'
	
	
	'
	
	
	
	'
	'
	
	
	
	
	'
	'	
	
	'
	
	'
	'
	
	'
	'
	
	'
	
	'	
	
	
	
	'
	'	'
	
	
	
	'
	'	'
	
	
	'
	
	
	'
	'	
	
	
	
	
	
	
	
	
	
	
	
	
	'
	
	'
	
	'
	'
	
	'	'
	
	
	
	
	'	
	
	
	
	
	
	'
	
	
	
	
	
	
	
	
	'	
	
	
	
	
	'
	
	
	
	
	
	
	'	
	
	
	
	
	
	
	'
	'	
	
	
	
	
	
	
	
	
	
	
	
	
	'
	
	
	
	
	
	'
	
	'
	
	
	
	'
	
	
	
	
	
	
	
	
	'
	
	'
	
	'
	'
	
	'	'
	
	
	
	'
	
	
	
	
	
	'
	'	'
	'	'
	'
	
	'
	
	'
	
	
	
	'
	'	'
	
	'
	'
	'	'
	
	'
	'
	
	
	'
	'
	
	
	
	
	
	'
	
	
	'
	'
	'	
	'
	
	
	
	
	'
	
	'	'
	
	
	'
	'
	'
	'
	
	'
	
	'	'
	'
	'
	
	'	'
	'	
	
	
	
	'
	'	'
	'
	'
	'
	'	
	
	'
	'
	'
	'
	'	'
	'
	'
	'
	'	'
	'	'
	'
	'	'
	'	'
	'
	'
	'
	'	'
	'
	'
	'
	'	'
	'	'
	'
	'	'
	'	'
	'	'
	'	'
	'Los_'
	'
	'	'
	'  
	'
	'
	'
	'	'
	'	'
	'	'
	'	'	'	'
	'
	'	'
	'	'	'
	'	'
	'
	'
	'
	'
	'	'
	'
	'	'
	'	'
	'
	'	'
	' OR'
	'	'	
	'
	'	'
	'	'
	'	'
	'  '	'	'
	'
	'	'
	'	'	'	' OR '
	'	'
	'
	'	'
	'	'
	'	'
	'	
	'	'	'	'	'
	'	'	'
	'  '
	'	'
	'	'
	' OR '(
	'
	'	
	'
	'	'	'
	'
	'	'	'	'
	'
	'
	'	'
	'
	'	'	' or'	'
	'	'	'	'	The'
	'	'	'	'
	'
	'
	'
	'	'
	'	' .'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	'
	
	'	'	The'
	'
	'	'	'	'	'	'
	'	'	'
	'	The'	'
	'
	'
	'	'
	The'
	'	'	'	The'	The'
	The'	The'	'
	The'	The'
	The'
	'
	
	The'
	The'
	'
	'	The'
	
	The'
	The'
	'
	The'
	'	The'
	The'
	'	The'
	The'
	'
	The'	The_1'
	The'
	The'	'
	The'
	'
	The'
	'
	The'  '
	The'
	'
	The'	The_ '
	The'
	The'
	The'
	The'
	The_
	The'
	The'	The'
	The'
	'
	The'	The
	The'
	The'
	The'	The
	The'
	'
	
	The'
	The'The'
	The'
	'
	The' The_
	The
	The
	The'
	The'
	The'
	'
	The
	'
	The'The'
	The'
	The'The'The'The'
	The'The'The'
	The'The'
	The'
	The
	The'The'
	The'The'
	The'
	'The'The' The'	The
	The'The' The
	The
	The
	The_
	The'The
	The' AND (    'The'The'
	The'
	The' The'
	The'The'The' The'
	The
	The
	The'
	The- The
	The' The
	The'The'
	The'The'The'The' The
	The' The'The-1'The 'The
	The'
	The
	The' The
	The'The'The
	The
	The
	The'The'
	The
	The
	The- The
	The
	The
	The
	The- The 'The'
	The'The- 'The-1'
	The-1' AND '
	The
	The-1'
	The
	The 'The-The- The
	The- The 'The'
	The- 'The-1'
	The- The'
	The-1'
	The-1' AND 'The'
	The '
	The- The 'The '
	The- The 'The
	The
	The
	The 'The'
	The
	The 'The-1' AND 'The
	The
	The- 'The
	The
	The
	The 'The- 'The
	The
	The (the'
	The (
	The (the'
	The
	The (The

	The 'The- The
	The 'The 'The 'The 'The- The 'The 'The- The 'The-1'The 'The'The 'The- The

	The
	The 'The 'The- The 'The 'The 'The 'The 'The- The 'The 'The- The 'The- The








' The


'The '
	The 'The 'The 'The 'The 'The 'The- The- The
	The 'The 'The 'The'




	The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The- The



	The 'The 'The 'The- The (The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The-The 'The- The 'The- The (The- The


	The 'The- The

	The 'The 'The- The 'The 'The 'The 'The 'The- The 'The 'The 'The- The 'The 'The-The 'The 'The-The 'The- The
	The 'The 'The 'The- The

	The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The- The 'The 'The 'The 'The- The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The- The 'The 'The 'The 'The- The 'The 'The 'The 'The 'The 'The 'The- 'The 'The 'The 'The- The
' The 'The 'The 'The 'The 'The 'The 'The 'The 'The- The (
	The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The 'The ( 'The (

' The (

	The (The 'The (The 'The (The (The (The (The (
	The (The (
    
 'The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (
 (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (The (
 (The (The (The (The (The (The (The (The (The (The (The (The (V (The (V ( * ( '( '( 'The (The (The ( 'The ( 'The ( 'The ( the ( the (The (The (The (The (The (The (The (The (The (The (The ( 'The (The (The (V (V ( 'The (V ( 'The ( 'The (The (The ( 'The (The (The (The (The (The (The (The (The (The (The (The (The (The ( 'The (The (The (The (The (The ( 'The (The (The (The ( 'The (The (The (The (The (The (The ( 'The ( the ( 'The (The (The (The (The (The ( 'The (The (The (The (The (The ( the ( the (The ( 'The (The (The (The (The (The ( 'The ( the ( the ( the ( the ( the ( the ( the ( the ( the (The ( the ( the ( the (The ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( the ( ( ( the ( the ( the ( the ( ( ( ( ( ( the ( the

====================================================================================================

