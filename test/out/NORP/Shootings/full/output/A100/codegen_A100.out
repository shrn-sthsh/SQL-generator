PROMPT 1:

Generate an SQL statement to answer a question.

Prompt: 
	Get count of mass shootings for each month in USA.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 1:

Generate an SQL statement to answer a question.

Prompt: 
	Get count of mass shootings for each month in USA.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# import statements
import psycopg2
import psycopg2.extras

# connect to database
conn = psycopg2.connect(
    host = "localhost",
    database = "postgres",
    user = "postgres",
    password = "postgres"
)

# create a cursor
cur = conn.cursor(cursor_factory = psycopg2.extras.DictCursor)

# create a query
query = "SELECT COUNT(*) FROM us_shootings WHERE State = 'United States'"

# execute the query
cur.execute(query)

# get the results
results = cur.fetchall()

# print the results
print(results)

# close the cursor
cur.close()

# close the connection
conn.close()

====================================================================================================

PROMPT 2:

Generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 2:

Generate an SQL statement to answer a question.

Prompt: 
	For each state, get total suspects arrested per million capita

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# Create a list of all states
state_list = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming']

# Create a list of all counties
county_list = ['Adams', 'Alcorn', 'Amite', 'Attala', 'Benton', 'Bolivar', 'Calhoun', 'Carroll', 'Chickasaw', 'Choctaw', 'Claiborne', 'Clarke', 'Clay', 'Coahoma', 'Copiah', 'Covington', 'DeSoto', 'Forrest', 'Franklin', 'George', 'Greene', 'Grenada', 'Hancock', 'Harrison', 'Hinds', 'Holmes', 'Humphreys', 'Issaquena', 'Itawamba', 'Jackson', 'Jasper', 'Jefferson', 'Jones', 'Kemper', 'Lafayette', 'Lamar', 'Lauderdale', 'Lawrence', 'Leake', 'Lee', 'Leflore', 'Lincoln', 'Lowndes', 'Madison', 'Marion', 'Marshall', 'Monroe', 'Montgomery', 'Neshoba', 'Newton', 'Noxubee', 'Oktibbeha', 'Panola', 'Pearl', 'Perry', 'Pike', 'Pontotoc', 'Prentiss', 'Quitman', 'Rankin', 'Scott', 'Sharkey', 'Simpson', 'Smith', 'Stone', 'Sunflower', 'Tallahatchie', 'Tate', 'Tippah', 'Tishomingo', 'Tunica', 'Union', 'Walthall', 'Warren', 'Washington', 'Wayne', 'Webster', 'Wilkinson', 'Winston']

# Create a list of all counties
tract_list = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100', '101', '102', '103', '104', '105', '106', '107', '108', '109', '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127', '128', '129', '130', '131', '132', '133', '134', '135', '136', '137', '138', '139', '140', '141', '142', '143', '144', '145', '146', '147', '148', '149', '150', '151', '152', '153', '154', '155', '156', '157', '158', '159', '160', '161', '162', '163', '164', '165', '166', '167', '168', '169', '170', '171', '172', '173', '174', '175', '176', '177', '178', '179', '180', '181', '182', '183', '184', '185', '186', '187', '188', '189', '190', '191', '192', '193', '194', '195', '196', '197', '198', '199', '200', '201', '202', '203', '204', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220', '221', '222', '223', '224', '225', '226', '227', '228', '229', '230', '231', '232', '233', '234', '235', '236', '237', '238', '239', '240', '241', '242', '243', '244', '245', '246', '247', '248', '249', '250', '251', '252', '253', '254', '255', '256', '257', '258', '259', '260', '

====================================================================================================

PROMPT 3:

Generate an SQL statement to answer a question.

Prompt: 
	Get count of homeless population and US shooting incidents for each year.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 3:

Generate an SQL statement to answer a question.

Prompt: 
	Get count of homeless population and US shooting incidents for each year.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# Get the count of population and shooting incidents for each year.
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#


====================================================================================================

PROMPT 4:

Generate an SQL statement to answer a question.

Prompt: 
	Get homeless population per capita for each county of California.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 4:

Generate an SQL statement to answer a question.

Prompt: 
	Get homeless population per capita for each county of California.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# Get the population of each county in California
# SELECT PopulationCount, County
# FROM us_population_county
# WHERE State = 'CA'
# ORDER BY PopulationCount DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county
# SELECT EXPERIENCING_HOMELESSNESS_CNT, County
# FROM experiencing_homelessness_age_demographics
# WHERE CALENDAR_YEAR = '2018'
# AND LOCATION = 'CA'
# ORDER BY EXPERIENCING_HOMELESSNESS_CNT DESC
# LIMIT 1;

# Get the number of homeless people in each county


====================================================================================================

PROMPT 5:

Generate an SQL statement to answer a question.

Prompt: 
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 5:

Generate an SQL statement to answer a question.

Prompt: 
	Get homeless population per capita and US shooting incidents per million capita for each county of California.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county in California
# Get the population of each county in California
# Get the shooting incidents of each county

====================================================================================================

PROMPT 6:

Generate an SQL statement to answer a question.

Prompt: 
	For each county, get shooting incidents per million capita, and income per million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 6:

Generate an SQL statement to answer a question.

Prompt: 
	For each county, get shooting incidents per million capita, and income per million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# import statements
import psycopg2
import psycopg2.extras
import pandas as pd
import numpy as np
import datetime

# connect to the database
conn = psycopg2.connect("host=localhost dbname=postgres user=postgres password=postgres")
cur = conn.cursor(cursor_factory=psycopg2.extras.DictCursor)

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month
current_month = datetime.datetime.now().month

# get the current day
current_day = datetime.datetime.now().day

# get the current year
current_year = datetime.datetime.now().year

# get the current month

====================================================================================================

PROMPT 7:

Generate an SQL statement to answer a question.

Prompt: 
	For each state, get shooting incidents per million capita, and income per million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 7:

Generate an SQL statement to answer a question.

Prompt: 
	For each state, get shooting incidents per million capita, and income per million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# import statements
import psycopg2
import psycopg2.extras
import pandas as pd
import numpy as np
import re

# connect to database
conn = psycopg2.connect(host = "localhost", database = "postgres", user = "postgres", password = "postgres")
cur = conn.cursor(cursor_factory = psycopg2.extras.DictCursor)

# get all states
cur.execute("""
	SELECT DISTINCT(state)
	FROM us_population_county
	ORDER BY state
	""")

# get all states
states = cur.fetchall()

# for each state, get shooting incidents per million capita, and income per million capita.
for state in states:
	# get shooting incidents per million capita
	cur.execute("""
		SELECT CAST(SUM(CASE WHEN state = %s THEN 1 ELSE 0 END) AS DOUBLE PRECISION) / CAST(SUM(CASE WHEN state = %s THEN 1 ELSE 0 END) AS DOUBLE PRECISION) AS shooting_per_capita
		FROM us_shootings
		""", (state[0], state[0]))
	shooting_per_capita = cur.fetchone()[0]

	# get income per million capita
	cur.execute("""
		SELECT CAST(SUM(CASE WHEN state = %s THEN 1 ELSE 0 END) AS DOUBLE PRECISION) / CAST(SUM(CASE WHEN state = %s THEN 1 ELSE 0 END) AS DOUBLE PRECISION) AS income_per_capita
		FROM us_population
		""", (state[0], state[0]))
	income_per_capita = cur.fetchone()[0]

	# if shooting_per_capita is not None and income_per_capita is not None:
	if shooting_per_capita is not None and income_per_capita is not None:
		# generate SQL statement
		sql = """
			SELECT
				CASE WHEN state = %s THEN '{}'
				ELSE 'INSUFFICENT'
				END AS state,
				CASE WHEN shooting_per_capita > 0.5 THEN '{}'
				ELSE 'INSUFFICENT'
				END AS shooting_per_capita,
				CASE WHEN income_per_capita > 0.5 THEN '{}'
				ELSE 'INSUFFICENT'
				END AS income_per_capita
			FROM us_population_county
			ORDER BY state
			""".format(state[0], shooting_per_capita, income_per_capita)
		print(sql)
	else:
		# generate SQL statement
		sql = """
			SELECT
				CASE WHEN state = %s THEN '{}'
				ELSE 'INSUFFICENT'
				END AS state,
				CASE WHEN shooting_per_capita > 0.5 THEN '{}'
				ELSE 'INSUFFICENT'
				END AS shooting_per_capita,
				CASE WHEN income_per_capita > 0.5 THEN '{}'
				ELSE 'INSUFFICENT'
				END AS income_per_capita
			FROM us_population_county
			ORDER BY state
			""".format(state[0], shooting_per_capita, income_per_capita)
		print(sql)
	# execute SQL statement
	cur.execute(sql)
	# get results
	results = cur.fetchall()
	# print results
	print(results)
	# close the cursor
	cur.close()
	# close the connection
	conn.close()


====================================================================================================

PROMPT 8:

Generate an SQL statement to answer a question.

Prompt: 
	Get count of suspects arrested each month over the years.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 8:

Generate an SQL statement to answer a question.

Prompt: 
	Get count of suspects arrested each month over the years.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

# Get the number of suspects arrested each month over the years.

====================================================================================================

PROMPT 9:

Generate an SQL statement to answer a question.

Prompt: 
	Get count of victims injured, suspects arrested and suspects killed for each incident.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 9:

Generate an SQL statement to answer a question.

Prompt: 
	Get count of victims injured, suspects arrested and suspects killed for each incident.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# Get the number of victims injured, suspects arrested and suspects killed for each incident.
#
# Prompt: 
#	Get count of victims injured, suspects arrested and suspects killed for each incident.
#
# All Schema: 
#	    us_population_county (PopulationCount, County)
#	    us_population (CensurYear, State, PopulationCount)
#	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
#	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
#	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

# Get the number of victims injured, suspects arrested and suspects killed for each incident.
#
# Prompt: 
#	Get count of victims injured, suspects arrested and suspects killed for each incident.
#
# All Schema: 
#	    us_population_county (PopulationCount, County)
#	    us_population (CensurYear, State, PopulationCount)
#	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
#	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
#	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI,

====================================================================================================

PROMPT 10:

Generate an SQL statement to answer a question.

Prompt: 
	For each month, get count of victims killed and average of victims killed in each shooting incident.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 10:

Generate an SQL statement to answer a question.

Prompt: 
	For each month, get count of victims killed and average of victims killed in each shooting incident.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# import statements
import psycopg2
import psycopg2.extras
import pandas as pd
import numpy as np
import re

# connect to database
conn = psycopg2.connect(host="localhost", database="postgres", user="postgres", password="postgres")
cur = conn.cursor(cursor_factory=psycopg2.extras.DictCursor)

# get the data
cur.execute("""
	SELECT
	us_population_county.county,
	us_population.calendar_year,
	us_population.state,
	us_population.population_count,
	us_shootings.incident_id,
	us_shootings.address,
	us_shootings.incident_date,
	us_shootings.state,
	us_shootings.city_or_country,
	us_shootings.victims_killed,
	us_shootings.victims_injured,
	us_shootings.suspects_injured,
	us_shootings.suspects_killed,
	us_shootings.suspects_arrested
	FROM
	us_population_county
	INNER JOIN
	us_population
	ON
	us_population.state = us_population_county.state
	INNER JOIN
	us_shootings
	ON
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident_date
	AND
	us_population_county.county = us_shootings.city_or_country
	AND
	us_population.state = us_shootings.state
	AND
	us_population.calendar_year = us_shootings.incident

====================================================================================================

PROMPT 11:

Generate an SQL statement to answer a question.

Prompt: 
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 11:

Generate an SQL statement to answer a question.

Prompt: 
	For each county, get victims killed per million capita, victims injured per million capita, suspects arrested per million capita, and incident counts for million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# import statements
import psycopg2
import psycopg2.extras
import pandas as pd
import numpy as np
import json
import sys
import os

# import credentials
from credentials import *

# import functions
from functions import *

# get the data
def get_data(state, county):
	# get the data
	data = pd.read_csv(f"data/{state}/{county}/{state}_{county}_data.csv")
	# get the data
	data = data.drop(columns=["Unnamed: 0"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data.drop(columns=["Unnamed: 0.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"])
	# get the data
	data = data

====================================================================================================

PROMPT 12:

Generate an SQL statement to answer a question.

Prompt: 
	For each state, get shooting incidents per million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 12:

Generate an SQL statement to answer a question.

Prompt: 
	For each state, get shooting incidents per million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# Create a list of all states
state_list = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming']

# Create a list of all counties
county_list = ['Adams', 'Alcorn', 'Amite', 'Attala', 'Benton', 'Bolivar', 'Calhoun', 'Carroll', 'Chickasaw', 'Choctaw', 'Claiborne', 'Clarke', 'Clay', 'Coahoma', 'Copiah', 'Covington', 'DeSoto', 'Forrest', 'Franklin', 'George', 'Greene', 'Grenada', 'Hancock', 'Harrison', 'Hinds', 'Holmes', 'Humphreys', 'Issaquena', 'Itawamba', 'Jackson', 'Jasper', 'Jefferson', 'Jones', 'Kemper', 'Lafayette', 'Lamar', 'Lauderdale', 'Lawrence', 'Leake', 'Lee', 'Leflore', 'Lincoln', 'Lowndes', 'Madison', 'Marion', 'Marshall', 'Monroe', 'Montgomery', 'Neshoba', 'Newton', 'Noxubee', 'Oktibbeha', 'Panola', 'Pearl', 'Perry', 'Pike', 'Pontotoc', 'Prentiss', 'Quitman', 'Rankin', 'Scott', 'Sharkey', 'Simpson', 'Smith', 'Stone', 'Sunflower', 'Tallahatchie', 'Tate', 'Tippah', 'Tishomingo', 'Tunica', 'Union', 'Walthall', 'Warren', 'Washington', 'Wayne', 'Webster', 'Wilkinson', 'Winston']

# Create a list of all counties
tract_list

====================================================================================================

PROMPT 13:

Generate an SQL statement to answer a question.

Prompt: 
	For each state, get victims killed per million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 13:

Generate an SQL statement to answer a question.

Prompt: 
	For each state, get victims killed per million capita.

All Schema: 
	    us_population_county (PopulationCount, County)
	    us_population (CensurYear, State, PopulationCount)
	    us_shootings (IncidentID, Address, IncidentDate, State, CityOrCountry, VictimsKilled, VictimsInjured, SuspectsInjured, SuspectsKilled, SuspectsArrested)
	    experiencing_homelessness_age_demographics (CALENDAR_YEAR, LOCATION, AGE_GROUP_PUBLIC, EXPERIENCING_HOMELESSNESS_CNT)
	    food_access (CensusTract, State, County, Urban, Pop2010, Ohu2010, LILATracts_1And10, LILATracts_halfAnd10, LILATracks_1And20, LILATracts Vehicle, HUNVFlag, LowIncomeTracts, PovertyRate, MedianFamilyIncome, LA1and10, LAhalfand10, LA1and20, LATracts_half, LATracts1, LATracts10, LATracts20, LATractsVehicle_20, LAPOP1_10, LAPOP05_10, LAPOP1_20, LALOWI1_10, LALOWI05_10, LALOWI1_20, lapophalf, lalowihalf, lakidshalf, laseniorshalf, lawhitehalf, lablackhalf, laasianhalf, lanhopihalf, laaianhalf, laomultirhalf, lahisphalf, lahunvhalf, lasnaphalf, lapop1, lalowi1, lakids1, laseniors1, lawhite1, lablack1, laasian1, lanhopi1, laaian1, laomultir1, lahisp1, lahunv1, lasnap1, lapop10, lalowi10, lakids10, laseniors10, lawhite10, lablack10, laasian10, lanhopi10, laaian10, laomultir10, lahisp10, lahunv10, lasnap10, lapop20, lalowi20, lakids20, laseniors20, lawhite20, lablack20, laasian20, lanhopi20, laaian20, laomultir20, lahisp20, lahunv20, lasnap20, TractLOWI, TractKids, TractSeniors, TractWhite, TractBlack, TractAsian, TractNHOPI, TractAIAN, TractOMultir, TractHispanic, TractHUNV, TractSNAP)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

"""

# import statements
import psycopg2
import psycopg2.extras

# connect to the database
conn = psycopg2.connect(
    host = "localhost",
    database = "postgres",
    user = "postgres",
    password = "postgres"
)

# create a cursor
cur = conn.cursor(cursor_factory = psycopg2.extras.DictCursor)

# create a list of states
states = [
    "Alabama",
    "Alaska",
    "Arizona",
    "Arkansas",
    "California",
    "Colorado",
    "Connecticut",
    "Delaware",
    "Florida",
    "Georgia",
    "Hawaii",
    "Idaho",
    "Illinois",
    "Indiana",
    "Iowa",
    "Kansas",
    "Kentucky",
    "Louisiana",
    "Maine",
    "Maryland",
    "Massachusetts",
    "Michigan",
    "Minnesota",
    "Mississippi",
    "Missouri",
    "Montana",
    "Nebraska",
    "Nevada",
    "New Hampshire",
    "New Jersey",
    "New Mexico",
    "New York",
    "North Carolina",
    "North Dakota",
    "Ohio",
    "Oklahoma",
    "Oregon",
    "Pennsylvania",
    "Rhode Island",
    "South Carolina",
    "South Dakota",
    "Tennessee",
    "Texas",
    "Utah",
    "Vermont",
    "Virginia",
    "Washington",
    "West Virginia",
    "Wisconsin",
    "Wyoming"
]

# create a list of years
years = [
    "2010",
    "2011",
    "2012",
    "2013",
    "2014",
    "2015",
    "2016",
    "2017",
    "2018",
    "2019"
]

# create a list of victims killed per million capita
victims_killed_per_million_capita = [
    "0.0",
    "0.1",
    "0.2",
    "0.3",
    "0.4",
    "0.5",
    "0.6",
    "0.7",
    "0.8",
    "0.9",
    "1.0",
    "1.1",
    "1.2",
    "1.3",
    "1.4",
    "1.5",
    "1.6",
    "1.7",
    "1.8",
    "1.9",
    "2.0",
    "2.1",
    "2.2",
    "2.3",
    "2.4",
    "2.5",
    "2.6",
    "2.7",
    "2.8",
    "2.9",
    "3.0",
    "3.1",
    "3.2",
    "3.3",
    "3.4",
    "3.5",
    "3.6",
    "3.7",
    "3.8",
    "3.9",
    "4.0",
    "4.1",
    "4.2",
    "4.3",
    "4.4",
    "4.5",
    "4.6",
    "4.7",
    "4.8",
    "4.9",
    "5.0",
    "5.1",
    "5.2",
    "5.3",
    "5.4",
    "5.5",
    "5.6",
    "5.7",
    "5.8",
    "5.9",
    "6.0",
    "6.1",
    "6.2",
    "6.3",
    "6.4",
    "6.5",
    "6.6",
    "6.7",
    "6.8",
    "6.9",
    "7.0",
    "7.1",
    "7.2",
    "7.3",
    "7.4",
    "7.5",
    "7.6",
    "7.7",
    "7.8",
    "7.9",
    "8.0",
    "8.1",
    "8.2",
    "8.3",
    "8.4",
    "8.5",
    "8.6",
    "8.7",
    "8.8",
    "8.9",
    "9.0",
    "9.1",
    "9.2",
    "9.3",
    "9.4",
    "9.5",
    "9.6",
    "9.7",
    "9.8",
    "9.9",
    "10.0",
    "10.1",
    "10.2",
    "10.3",
    "10.4",
    "10.5",
    "10.6",
    "10.7",
    "10.8",
    "10.9",
    "11.0",
    "11.1",
    "11.2",
    "11.3",
    "11.4",
    "11.5",
    "11.6",
    "11.7",
    "11.8",
    "11.9",
    "12.0",
    "12.1",
    "

====================================================================================================

