PROMPT 1:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Atlanta on each day of the week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 1:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Atlanta on each day of the week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2001'
	AND Crime_Time = '00:00:00'
	AND Crime_Type = 'Murder'
	AND Area_Name = 'Downtown'
	AND Vict_Age = '0-18'
	AND Vict_Sex = 'M'
	AND Weapon_Desc = 'Firearm'
	AND Address = '123 Main St.'
	AND Latitude = '34.5'
	AND Longitude = '-118.5'
	ORDER BY Date_Reported;

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2001'
	AND Crime_Time = '00:00:00'
	AND Crime_Type = 'Murder'
	AND Area_Name = 'Downtown'
	AND Vict_Age = '0-18'
	AND Vict_Sex = 'M'
	AND Weapon_Desc = 'Firearm'
	AND Address = '123 Main St.'
	AND Latitude = '34.5'
	AND Longitude = '-118.5'
	ORDER BY Date_Reported;


====================================================================================================

PROMPT 2:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Atlanta during each month of the year

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 2:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Atlanta during each month of the year

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM la_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM nyc_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the New York City data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM philly_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Philadelphia data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_DAY(date_reported)

Note, the above SQL statement is for the Atlanta data set.

Expected Output:
	SELECT LAST_DAY(date_reported) AS LAST_DAY, count(*) AS total_crimes_occurred_in_atlanta_during_each_month_of_the_year FROM atlanta_crime_data WHERE date_reported BETWEEN LAST_DAY(date_reported) AND LAST_DAY(date_reported) + INTERVAL '1' YEAR GROUP BY LAST_DAY(date_reported) ORDER BY LAST_

====================================================================================================

PROMPT 3:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Atlanta at each hour of the day

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 3:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Atlanta at each hour of the day

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, COUNT(*)
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	GROUP BY Crime_ID
	ORDER BY Crime_ID
	LIMIT 1;

Expected Output:
	Crime_ID, COUNT(*)
	1, 2
	2, 1
	3, 1
	4, 1
	5, 1
	6, 1
	7, 1
	8, 1
	9, 1
	10, 1
	11, 1
	12, 1
	13, 1
	14, 1
	15, 1
	16, 1
	17, 1
	18, 1
	19, 1
	20, 1
	21, 1
	22, 1
	23, 1
	24, 1
	25, 1
	26, 1
	27, 1
	28, 1
	29, 1
	30, 1
	31, 1
	32, 1
	33, 1
	34, 1
	35, 1
	36, 1
	37, 1
	38, 1
	39, 1
	40, 1
	41, 1
	42, 1
	43, 1
	44, 1
	45, 1
	46, 1
	47, 1
	48, 1
	49, 1
	50, 1
	51, 1
	52, 1
	53, 1
	54, 1
	55, 1
	56, 1
	57, 1
	58, 1
	59, 1
	60, 1
	61, 1
	62, 1
	63, 1
	64, 1
	65, 1
	66, 1
	67, 1
	68, 1
	69, 1
	70, 1
	71, 1
	72, 1
	73, 1
	74, 1
	75, 1
	76, 1
	77, 1
	78, 1
	79, 1
	80, 1
	81, 1
	82, 1
	83, 1
	84, 1
	85, 1
	86, 1
	87, 1
	88, 1
	89, 1
	90, 1
	91, 1
	92, 1
	93, 1
	94, 1
	95, 1
	96, 1
	97, 1
	98, 1
	99, 1
	100, 1
	101, 1
	102, 1
	103, 1
	104, 1
	105, 1
	106, 1
	107, 1
	108, 1
	109, 1
	110, 1
	111, 1
	112, 1
	113, 1
	114, 1
	115, 1
	116, 1
	117, 1
	118, 1
	119, 1
	120, 1
	121, 1
	122, 1
	123, 1
	124, 1
	125, 1
	126, 1
	127, 1
	128, 1
	129, 1
	130, 1
	131, 1
	132, 1
	133, 1
	134, 1
	135, 1
	136, 1
	137, 1
	138, 1
	139, 1
	140, 1
	141, 1
	142, 1
	143, 1
	144, 1
	145, 1
	146, 1
	147, 1
	148, 1
	149, 1
	150, 1
	151, 1
	152, 1
	153, 1
	154, 1
	155, 1
	156, 1
	157, 1
	158, 1
	159, 1
	160, 1
	161, 1
	162, 1
	163, 1
	164, 1
	165, 1
	166, 1
	167, 1
	168, 1
	169, 1
	170, 1
	171, 1
	172, 1
	173, 1
	174, 1
	175, 1
	176, 1
	177, 1
	178, 1
	179, 1
	180, 1
	181, 1
	182, 1
	183, 1
	184, 1
	185, 1
	186, 1
	187, 1
	188, 1
	189, 1
	190, 1
	191, 1
	192, 1
	193, 1
	194, 1
	195, 1
	196, 1
	197, 1
	198, 1
	199, 1
	200, 1
	201, 1
	202, 1
	203, 1
	204, 1
	205, 1
	206, 1
	207, 1
	208, 1
	209, 1
	210, 1
	211, 1
	212, 1
	213, 1
	214, 1
	215, 1
	216, 1
	217, 1
	218, 1
	219, 1
	220, 1
	221, 1
	222, 1
	223, 1
	224, 1
	225, 1
	226, 1
	227, 1
	228, 1
	229, 1
	230, 1
	231, 1
	232, 1
	233, 1
	234, 1
	235, 1
	236, 1
	237, 1
	238, 1
	239, 1
	240, 1
	241, 1
	242, 1
	243, 1
	244, 1
	245, 1
	246, 1
	247, 1
	248, 1
	249, 1
	250, 1
	251, 1
	252, 1
	253, 1
	254, 1
	255, 1
	256, 1
	257, 1
	258, 1
	259, 1
	260, 1
	261, 1
	262, 1
	263, 1
	264, 1
	265, 1
	266, 1
	267, 1
	268, 1
	269, 1
	270, 1
	271, 1
	272, 1
	273, 1
	274, 1
	275, 1
	276, 1
	277, 1
	278, 1
	279, 1
	280, 1
	281, 1
	282, 1
	283, 1
	284, 1
	285, 1
	286, 1
	287, 1
	288, 1
	289, 1
	290, 1
	291, 1
	292, 1
	293, 1
	294, 1
	295, 1
	296, 1
	297, 1
	298, 1
	299, 1
	300, 1
	301, 1
	302, 1
	303, 1
	304, 1
	305, 1
	306, 1
	307, 1
	308, 1
	309, 1
	310, 1
	311, 1
	312, 1
	313, 1
	314, 1
	315, 1
	316, 1
	317, 1
	318, 1
	319, 1
	320, 1
	321, 1
	322, 1
	323, 1
	324, 1
	325, 1
	326, 1
	327, 1
	328, 1
	329, 1
	330, 1
	331, 1
	332, 1
	333, 1
	334, 1
	335, 1
	336, 1
	337, 1
	338, 1
	339, 1
	340, 1
	341, 1
	342, 1
	343, 1
	344, 1
	345, 1


====================================================================================================

PROMPT 4:

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in Atlanta grouped by week since January 2009

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 4:

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in Atlanta grouped by week since January 2009

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Solution:
	SELECT COUNT(*)
	  FROM la_crime_data
	 WHERE Crime_Date BETWEEN '2009-01-01' AND '2009-01-31'
	   AND Crime_Type = 'Murder'
	   AND Area_Name = 'Atlanta'


====================================================================================================

PROMPT 5:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in LA on each day of the week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 5:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in LA on each day of the week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude FROM la_crime_data WHERE Date_Reported = '01/01/2012' AND Crime_Type = 'Assault' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Address = '123 Main St.' AND Latitude = '34.12' AND Longitude = '-118.12'

Expected Response:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude FROM la_crime_data WHERE Date_Reported = '01/01/2012' AND Crime_Type = 'Assault' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Address = '123 Main St.' AND Latitude = '34.12' AND Longitude = '-118.12'

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude FROM la_crime_data WHERE Date_Reported = '01/01/2012' AND Crime_Type = 'Assault' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Address = '123 Main St.' AND Latitude = '34.12' AND Longitude = '-118.12'

Hint:
	Use the 'WHERE' clause to filter the data.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use the 'IS NOT NULL' operator to find multiple values.

Hint:
	Use the 'IN' operator to find multiple values.

Hint:
	Use the 'AND' operator to find multiple values.

Hint:
	Use the 'OR' operator to find multiple values.

Hint:
	Use the 'NOT' operator to find multiple values.

Hint:
	Use the 'LIKE' operator to find multiple values.

Hint:
	Use the 'IS NULL' operator to find multiple values.

Hint:
	Use

====================================================================================================

PROMPT 6:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in LA during each month of the year

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 6:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in LA during each month of the year

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2012'
	AND Crime_Time = '00:00:00'
	AND Crime_Type = 'Murder'
	AND Area_Name = 'Los Angeles'
	AND Vict_Age = '0-18'
	AND Vict_Sex = 'M'
	AND Weapon_Desc = 'Firearm'
	AND Address = '123 Main St'
	AND Latitude = '34.1'
	AND Longitude = '-118.1'
	ORDER BY Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude

Expected Output:
	Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	01/01/2012 00:00:00 Murder Los Angeles 0-18 M Firearm 123 Main St 34.1 -118.1

Hint:
	You can use the 'IN' operator to find the most recent date.
	You can use the 'IN' operator to find the most recent time.
	You can use the 'IN' operator to find the most recent crime type.
	You can use the 'IN' operator to find the most recent area.
	You can use the 'IN' operator to find the most recent victim age.
	You can use the 'IN' operator to find the most recent victim sex.
	You can use the 'IN' operator to find the most recent weapon description.
	You can use the 'IN' operator to find the most recent address.
	You can use the 'IN' operator to find the most recent latitude.
	You can use the 'IN' operator to find the most recent longitude.
	You can use the 'IN' operator to find the most recent date.
	You can use the 'IN' operator to find the most recent time.
	You can use the 'IN' operator to find the most recent crime type.
	You can use the 'IN' operator to find the most recent area.
	You can use the 'IN' operator to find the most recent victim age.
	You can use the 'IN' operator to find the most recent victim sex.
	You can use the 'IN' operator to find the most recent weapon description.
	You can use the 'IN' operator to find the most recent address.
	You can use the 'IN' operator to find the most recent latitude.
	You can use the 'IN' operator to find the most recent longitude.
	You can use the 'IN' operator to find the most recent date.
	You can use the 'IN' operator to find the most recent time.
	You can use the 'IN' operator to find the most recent crime type.
	You can use the 'IN' operator to find the most recent area.
	You can use the 'IN' operator to find the most recent victim age.
	You can use the 'IN' operator to find the most recent victim sex.
	You can use the 'IN' operator to find the most recent weapon description.
	You can use the 'IN' operator to find the most recent address.
	You can use the 'IN' operator to find the most recent latitude.
	You can use the 'IN' operator to find the most recent longitude.
	You can use the 'IN' operator to find the most recent date.
	You can use the 'IN' operator to find the most recent time.
	You can use the 'IN' operator to find the most recent crime type.
	You can use the 'IN' operator to find the most recent area.
	You can use the 'IN' operator to find the most recent victim age.
	You can use the 'IN' operator to find the most recent victim sex.
	You can use the 'IN' operator to find the most recent weapon description.
	You can use the 'IN' operator to find the most recent address.
	You can use the 'IN' operator to find the most recent latitude.
	You can use the 'IN' operator to find the most recent longitude.
	You can use the 'IN' operator to find the most recent date.
	You can use the 'IN' operator to find the most recent time.
	You can use the 'IN' operator to find the most recent crime type.
	You can use the 'IN' operator to find the most recent area.
	You can use the 'IN' operator to find the most recent victim age.
	You can use the 'IN' operator to find the most recent victim sex.
	You can use the 'IN' operator to find the most recent weapon description.
	You can use the 'IN' operator to find the most recent address.
	You can use the 'IN' operator to find the most recent latitude.
	You can use the 'IN' operator to find the most recent longitude.
	You can use the 'IN' operator to find the most recent date.
	You can use the 'IN' operator to find the most recent time.
	You can use the 'IN' operator to find the most recent crime type.
	You can use the 'IN' operator to find the most recent area.
	You can use the 'IN' operator to find the most recent victim age.
	You can use the 'IN' operator to find the most recent victim sex.
	You can use the 'IN' operator to find the most recent weapon description.
	You can use the 'IN' operator to find the most recent address.
	You can use the 'IN' operator to find the most recent latitude.
	You can use the 'IN' operator to find the most recent longitude.
	You can use the 'IN' operator to find the most recent date.
	You can use the 'IN' operator to find the most recent time.
	You can use the 'IN' operator to find the most recent crime type.
	You can use the 'IN' operator to find the most recent area.
	You can use the 'IN' operator to find the most recent victim age.
	You can use the 'IN' operator to find the most recent victim sex.
	You can use the 'IN' operator to find the most recent weapon description.
	You can use the 'IN' operator to find the most recent address.
	You can use the 'IN' operator to find the most recent latitude.
	You can use the 'IN' operator to find the most recent longitude.
	You can use the 'IN' operator to find the most recent date.
	You can use the 'IN' operator to find the most recent time.
	You can use the 'IN' operator to find the most recent crime type.
	You can use the 'IN' operator to find the most recent area.
	You can use the 'IN' operator to find the most recent victim age.
	You can use the 'IN' operator to find the most recent victim sex.
	You can use the 'IN' operator to find the most recent weapon description.
	You can use the 'IN' operator to find the most recent address.
	You can use the 'IN' operator to find the most recent latitude.
	You can use the 'IN' operator to find the most recent longitude.
	You can use the 'IN' operator to find the most recent date.
	You can use the 'IN' operator to find the most recent time.
	You can use the 'IN' operator to find the most recent crime type.
	You can use the 'IN' operator to find the most recent area.
	You can use the 'IN' operator to find the most recent victim age.
	You can use the 'IN' operator to find the most recent victim sex.
	You can use the 'IN' operator to find the most

====================================================================================================

PROMPT 7:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in LA at each hour of the day

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 7:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in LA at each hour of the day

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, Los Angeles, Male, Machete, 123 Main St, 34.12, -118.12

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

SQL Fiddle:
	http://sqlfiddle.com/#!2/9b0c0/1

Explanation:
	The query is asking for the most recent crime that occurred in LA.
	The query is using a subquery to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause to find the most recent crime.
	The subquery is using a where clause

====================================================================================================

PROMPT 8:

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in LA grouped by week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 8:

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in LA grouped by week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

Expected Output:
	'5'

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in LA grouped by week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

Expected Output:
	'5'

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in LA grouped by week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

Expected Output:
	'5'

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in LA grouped by week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

Expected Output:
	'5'

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in LA grouped by week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

Expected Output:
	'5'

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Date BETWEEN '01/01/2015' AND '01/01/2015' AND Crime_Type = 'Murder' AND Area_Name = 'Los Angeles'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in LA grouped by week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude

====================================================================================================

PROMPT 9:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in New York on each day of the week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 9:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in New York on each day of the week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude FROM la_crime_data WHERE Crime_Date = '01/01/2014'
	UNION
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude FROM nyc_crime_data WHERE Crime_Date = '01/01/2014'
	UNION
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude FROM philly_crime_data WHERE Crime_Date = '01/01/2014'
	UNION
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude FROM atlanta_crime_data WHERE Crime_Date = '01/01/2014'

Hint:
	Use the 'INSUFFICENT' response to indicate that you are not sure of the answer.

Expected Results:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	2, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	3, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	4, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	5, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	6, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	7, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	8, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	9, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	10, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	11, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	12, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	13, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	14, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	15, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	16, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	17, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	18, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	19, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	20, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	21, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	22, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	23, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	24, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	25, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	26, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	27, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	28, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	29, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	30, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	31, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	32, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	33, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	34, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	35, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	36, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York, 0, 0, 0, 0, 0, 0
	37, 1, 01/01/2014, 01/01/2014, 01/01/2014, 1, New York

====================================================================================================

PROMPT 10:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in New York during each month of the year

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 10:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in New York during each month of the year

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude FROM la_crime_data WHERE Date_Reported = '01/01/2013'
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude FROM nyc_crime_data WHERE Crime_Date = '01/01/2013'
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude FROM philly_crime_data WHERE Crime_Date = '01/01/2013'
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude FROM atlanta_crime_data WHERE Crime_Date = '01/01/2013'

Hint:
	Use the 'WHERE' clause to filter the data.

Hint:
	Use the 'ORDER BY' clause to sort the data.

Hint:
	Use the 'GROUP BY' clause to group the data.

Hint:
	Use the 'HAVING' clause to filter the data.

Hint:
	Use the 'LIMIT' clause to limit the data.

Hint:
	Use the 'UNION' clause to combine the data.

Hint:
	Use the 'JOIN' clause to join the data.

Hint:
	Use the 'CASE' clause to create a new column.

Hint:
	Use the 'COALESCE' clause to create a new column.

Hint:
	Use the 'IF' clause to create a new column.

Hint:
	Use the 'CAST' clause to create a new column.

Hint:
	Use the 'CONCAT' clause to create a new column.

Hint:
	Use the 'SUBSTRING' clause to create a new column.

Hint:
	Use the 'SUBSTRING_INDEX' clause to create a new column.

Hint:
	Use the 'INSTR' clause to create a new column.

Hint:
	Use the 'INSTR' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to create a new column.

Hint:
	Use the 'LOCATE' clause to

====================================================================================================

PROMPT 11:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in New York at each hour of the day

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 11:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in New York at each hour of the day

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, New York, 18, M, Knife, 123 Main St, -34.9, -118.4

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, New York, 18, M, Knife, 123 Main St, -34.9, -118.4

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, New York, 18, M, Knife, 123 Main St, -34.9, -118.4

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, New York, 18, M, Knife, 123 Main St, -34.9, -118.4

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, New York, 18, M, Knife, 123 Main St, -34.9, -118.4

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, New York, 18, M, Knife, 123 Main St, -34.9, -118.4

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, New York, 18, M, Knife, 123 Main St, -34.9, -118.4

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, New York, 18, M, Knife, 123 Main St, -34.9, -118.4

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_Time
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2015, 01/01/2015, 12:00, Assault, New York, 18, M, Knife, 123 Main St, -34.9, -118.4

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la

====================================================================================================

PROMPT 12:

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in New York grouped by week since January 2023

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 12:

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in New York grouped by week since January 2023

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Expected Output:
	SELECT COUNT(*) AS total_crimes, DATE_FORMAT(Date_Reported, '%W') AS week_number
	FROM nyc_crime_data
	WHERE Date_Reported BETWEEN '2023-01-20' AND '2023-01-27'
	GROUP BY week_number
	ORDER BY week_number

Solution:
	SELECT COUNT(*) AS total_crimes, DATE_FORMAT(Date_Reported, '%W') AS week_number
	FROM nyc_crime_data
	WHERE Date_Reported BETWEEN '2023-01-20' AND '2023-01-27'
	GROUP BY week_number
	ORDER BY week_number

Explanation:
	The query is a simple aggregate query.
	The query is asking for the total number of crimes in New York City, grouped by week.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the week the crime occurred.
	The query is asking for the week number of the

====================================================================================================

PROMPT 13:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Philly on each day of the week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 13:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Philly on each day of the week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude FROM la_crime_data WHERE Crime_Date = '01/01/2015' AND Crime_Time = '00:00:00' AND Crime_Type = 'Murder' AND Area_Name = 'South Philly'

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	2, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	3, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	4, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	5, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	6, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	7, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	8, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	9, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	10, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	11, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	12, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	13, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	14, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	15, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	16, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	17, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	18, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	19, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	20, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	21, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	22, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	23, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	24, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	25, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	26, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	27, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	28, '1', '01/01/2015', '01/01/2015', '00:00:00', 'Murder', 'South Philly', '0', '0', '0', '0', '0', '0', '0'
	29, '1', '01/01/

====================================================================================================

PROMPT 14:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Philly during each month of the year

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 14:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Philly during each month of the year

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date BETWEEN '01/01/2012' AND '12/31/2012'
	ORDER BY Crime_Date ASC
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 01/01/2012, 01/01/2012, 12:00:00 AM, Assault, North Philly, Male, Knife, 123 Main St., 40.789, -73.984

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date BETWEEN '01/01/2012' AND '12/31/2012'
	ORDER BY Crime_Date ASC
	LIMIT 1

Explanation:
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	The query is asking for the most recent crime that occurred in the month of January.
	

====================================================================================================

PROMPT 15:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Philly at each hour of the day

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 15:

Generate an SQL statement to answer a question.

Prompt: 
	Give total crimes occurred in Philly at each hour of the day

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Expected Output:

```sql
SELECT
    COUNT(*)
FROM
    philly_crime_data
WHERE
    Date_Reported = '2019-01-01'
    AND Crime_Time >= '00:00:00'
    AND Crime_Time < '01:00:00'
    AND Crime_Type = 'Theft'
    AND Area_Name = 'Downtown'
    AND Vict_Age = '18-24'
    AND Vict_Sex = 'Male'
    AND Weapon_Desc = 'Gun'
    AND Address = '123 Main St'
    AND Latitude = '40.7'
    AND Longitude = '-75.6'

```

## 解题思路

见程序注释


====================================================================================================

PROMPT 16:

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in Philly grouped by week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 16:

Generate an SQL statement to answer a question.

Prompt: 
	Give total count of crimes in Philly grouped by week

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM philly_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM atlanta_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Murder' AND Crime_Date = '2014-01-01'
	SELECT COUNT(*) FROM la

====================================================================================================

PROMPT 17:

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Atlanta

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 17:

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Atlanta

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	AND Area_Name = 'Atlanta'
	AND Crime_Type = 'Murder'
	AND Vict_Age = '0-10'
	AND Vict_Sex = 'Male'
	AND Weapon_Desc = 'Firearm'
	AND Crime_ID IN (SELECT Crime_ID FROM nyc_crime_data WHERE Crime_Type = 'Murder')
	AND Crime_ID IN (SELECT Crime_ID FROM philly_crime_data WHERE Crime_Type = 'Murder')
	AND Crime_ID IN (SELECT Crime_ID FROM atlanta_crime_data WHERE Crime_Type = 'Murder')
	ORDER BY Crime_ID

Solution:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	AND Area_Name = 'Atlanta'
	AND Crime_Type = 'Murder'
	AND Vict_Age = '0-10'
	AND Vict_Sex = 'Male'
	AND Weapon_Desc = 'Firearm'
	AND Crime_ID IN (SELECT Crime_ID FROM nyc_crime_data WHERE Crime_Type = 'Murder')
	AND Crime_ID IN (SELECT Crime_ID FROM philly_crime_data WHERE Crime_Type = 'Murder')
	AND Crime_ID IN (SELECT Crime_ID FROM atlanta_crime_data WHERE Crime_Type = 'Murder')
	ORDER BY Crime_ID

Correct Answer:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	AND Area_Name = 'Atlanta'
	AND Crime_Type = 'Murder'
	AND Vict_Age = '0-10'
	AND Vict_Sex = 'Male'
	AND Weapon_Desc = 'Firearm'
	AND Crime_ID IN (SELECT Crime_ID FROM nyc_crime_data WHERE Crime_Type = 'Murder')
	AND Crime_ID IN (SELECT Crime_ID FROM philly_crime_data WHERE Crime_Type = 'Murder')
	AND Crime_ID IN (SELECT Crime_ID FROM atlanta_crime_data WHERE Crime_Type = 'Murder')
	ORDER BY Crime_ID


====================================================================================================

PROMPT 18:

Generate an SQL statement to answer a question.

Prompt: 
	For each area of Atlanta give the total crime count, last reported date of any crime and the type of crime, most common crime type and weekly increase in crimes by percentage.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 18:

Generate an SQL statement to answer a question.

Prompt: 
	For each area of Atlanta give the total crime count, last reported date of any crime and the type of crime, most common crime type and weekly increase in crimes by percentage.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude FROM la_crime_data WHERE Area_Name = 'Atlanta'
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude FROM nyc_crime_data WHERE Area_Name = 'Atlanta'
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude FROM philly_crime_data WHERE Area_Name = 'Atlanta'
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude FROM atlanta_crime_data WHERE Area_Name = 'Atlanta'

Hint:
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Latitude, Longitude
	The data is stored in a table.
	The table is called 'crime_data'
	The table has a column for each of the following:
	Crime_ID, Report_

====================================================================================================

PROMPT 19:

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of LA

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 19:

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of LA

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:

Input:
	1, 1, 1/1/2015, 1/1/2015, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1

====================================================================================================

PROMPT 20:

Generate an SQL statement to answer a question.

Prompt: 
	For each area of LA give the total crime count, last reported date of any crime and the type of crime, most common crime type and weekly increase in crimes by percentage.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 20:

Generate an SQL statement to answer a question.

Prompt: 
	For each area of LA give the total crime count, last reported date of any crime and the type of crime, most common crime type and weekly increase in crimes by percentage.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, LA.Report_#
	FROM LA_crime_data LA
		INNER JOIN nyc_crime_data NYCD ON LA.Report_# = NYCD.Report_#
		INNER JOIN philly_crime_data PCD ON LA.Report_# = PCD.Report_#
		INNER JOIN atlanta_crime_data ACD ON LA.Report_# = ACD.Report_#
	WHERE LA.Area_Name = 'Los Angeles'
	ORDER BY LA.Report_#
	LIMIT 1

Solution:
	SELECT LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, LA.Report_#
	FROM LA_crime_data LA
		INNER JOIN nyc_crime_data NYCD ON LA.Report_# = NYCD.Report_#
		INNER JOIN philly_crime_data PCD ON LA.Report_# = PCD.Report_#
		INNER JOIN atlanta_crime_data ACD ON LA.Report_# = ACD.Report_#
	WHERE LA.Area_Name = 'Los Angeles'
	ORDER BY LA.Report_#
	LIMIT 1

Hint:
	Use the following SQL statement to get the most recent crime data:
	SELECT LA.Report_#, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, LA.Report_#
	FROM LA_crime_data LA
		INNER JOIN nyc_crime_data NYCD ON LA.Report_# = NYCD.Report_#
		INNER JOIN philly_crime_data PCD ON LA.Report_# = PCD.Report_#
		INNER JOIN atlanta_crime_data ACD ON LA.Report_# = ACD.Report_#
	WHERE LA.Report_# = (SELECT MAX(Report_#) FROM LA_crime_data)
	ORDER BY LA.Report_#
	LIMIT 1

Hint:
	Use the following SQL statement to get the most recent crime data:
	SELECT LA.Report_#, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, LA.Report_#
	FROM LA_crime_data LA
		INNER JOIN nyc_crime_data NYCD ON LA.Report_# = NYCD.Report_#
		INNER JOIN philly_crime_data PCD ON LA.Report_# = PCD.Report_#
		INNER JOIN atlanta_crime_data ACD ON LA.Report_# = ACD.Report_#
	WHERE LA.Report_# = (SELECT MAX(Report_#) FROM LA_crime_data)
	ORDER BY LA.Report_#
	LIMIT 1

Hint:
	Use the following SQL statement to get the most recent crime data:
	SELECT LA.Report_#, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, LA.Report_#
	FROM LA_crime_data LA
		INNER JOIN nyc_crime_data NYCD ON LA.Report_# = NYCD.Report_#
		INNER JOIN philly_crime_data PCD ON LA.Report_# = PCD.Report_#
		INNER JOIN atlanta_crime_data ACD ON LA.Report_# = ACD.Report_#
	WHERE LA.Report_# = (SELECT MAX(Report_#) FROM LA_crime_data)
	ORDER BY LA.Report_#
	LIMIT 1

Hint:
	Use the following SQL statement to get the most recent crime data:
	SELECT LA.Report_#, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, LA.Report_#
	FROM LA_crime_data LA
		INNER JOIN nyc_crime_data NYCD ON LA.Report_# = NYCD.Report_#
		INNER JOIN philly_crime_data PCD ON LA.Report_# = PCD.Report_#
		INNER JOIN atlanta_crime_data ACD ON LA.Report_# = ACD.Report_#
	WHERE LA.Report_# = (SELECT MAX(Report_#) FROM LA_crime_data)
	ORDER BY LA.Report_#
	LIMIT 1

Hint:
	Use the following SQL statement to get the most recent crime data:
	SELECT LA.Report_#, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, LA.Report_#
	FROM LA_crime_data LA
		INNER JOIN nyc_crime_data NYCD ON LA.Report_# = NYCD.Report_#
		INNER JOIN philly_crime_data PCD ON LA.Report_# = PCD.Report_#
		INNER JOIN atlanta_crime_data ACD ON LA.Report_# = ACD.Report_#
	WHERE LA.Report_# = (SELECT MAX(Report_#) FROM LA_crime_data)
	ORDER BY LA.Report_#
	LIMIT 1

Hint:
	Use the following SQL statement to get the most recent crime data:
	SELECT LA.Report_#, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, LA.Report_#
	FROM LA_crime_data LA
		INNER JOIN nyc_crime_data NYCD ON LA.Report_# = NYCD.Report_#
		INNER JOIN philly_crime_data PCD ON LA.Report_# = PCD.Report_#
		INNER JOIN atlanta_crime_data ACD ON LA.Report_# = ACD.Report_#
	WHERE LA.Report_# = (SELECT MAX(Report_#) FROM LA_crime_data)
	ORDER BY LA.Report_#
	LIMIT 1

Hint:
	Use the following SQL statement to get the most recent crime data:
	SELECT LA.Report_#, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, LA.Report_#
	FROM LA_crime_data LA
		INNER JOIN nyc_crime_data NYCD ON LA.Report_# = NYCD.Report_#
		INNER JOIN philly_crime_data PCD ON LA.Report_# = PCD.Report_#
		INNER JOIN atlanta_crime_data ACD ON LA.Report_# = ACD.Report_#
	WHERE LA.Report_# = (SELECT MAX(Report_#) FROM LA_crime_data)
	ORDER BY LA.Report_#
	LIMIT 1

Hint:
	Use the following SQL statement to get the most recent crime data:
	SELECT LA.Report_#, LA.Area_Name, LA.Vict_Age, LA.Vict_

====================================================================================================

PROMPT 21:

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of New York

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 21:

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of New York

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Area_Name = 'Manhattan'

Expected Output:
	1

Solution:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Area_Name = 'Manhattan'

Example:
	SELECT COUNT(*) FROM philly_crime_data WHERE Area_Name = 'Manhattan'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM philly_crime_data WHERE Area_Name = 'Manhattan'

Example:
	SELECT COUNT(*) FROM atlanta_crime_data WHERE Area_Name = 'Manhattan'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM atlanta_crime_data WHERE Area_Name = 'Manhattan'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Manhattan'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Manhattan'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Brooklyn'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Brooklyn'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Queens'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Queens'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Bronx'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Bronx'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Staten Island'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'Staten Island'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Area_Name = 'New York'

Expected Output:
	0

Solution:
	SELECT COUNT(*) FROM la_

====================================================================================================

PROMPT 22:

Generate an SQL statement to answer a question.

Prompt: 
	For each area of New York give the total crime count, last reported date of any crime and the type of crime, most common crime type and weekly increase in crimes by percentage.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 22:

Generate an SQL statement to answer a question.

Prompt: 
	For each area of New York give the total crime count, last reported date of any crime and the type of crime, most common crime type and weekly increase in crimes by percentage.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

SQL Statement:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Area_Name = 'New York'
	ORDER BY Crime_Date DESC
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1, 1, '2014-01-01', '2014-01-01', '00:00:00', 'Theft', 'New York', 'Male', 'No', 'No', 'No', 'No', 'No', 'No'
	1,

====================================================================================================

PROMPT 23:

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 23:

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Area_Name, COUNT(*)
	FROM la_crime_data
	WHERE Crime_Type = 'Murder'
	GROUP BY Area_Name
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	philly

---

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Area_Name, COUNT(*)
	FROM la_crime_data
	WHERE Crime_Type = 'Murder'
	GROUP BY Area_Name
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	philly

---

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Area_Name, COUNT(*)
	FROM la_crime_data
	WHERE Crime_Type = 'Murder'
	GROUP BY Area_Name
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	philly

---

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Area_Name, COUNT(*)
	FROM la_crime_data
	WHERE Crime_Type = 'Murder'
	GROUP BY Area_Name
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	philly

---

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Area_Name, COUNT(*)
	FROM la_crime_data
	WHERE Crime_Type = 'Murder'
	GROUP BY Area_Name
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	philly

---

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Area_Name, COUNT(*)
	FROM la_crime_data
	WHERE Crime_Type = 'Murder'
	GROUP BY Area_Name
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	philly

---

Generate an SQL statement to answer a question.

Prompt: 
	Give the amount of crimes in each area of Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type,

====================================================================================================

PROMPT 24:

Generate an SQL statement to answer a question.

Prompt: 
	For each area of Philly give the total crime count, last reported date of any crime and the type of crime, most common crime type and weekly increase in crimes by percentage.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 24:

Generate an SQL statement to answer a question.

Prompt: 
	For each area of Philly give the total crime count, last reported date of any crime and the type of crime, most common crime type and weekly increase in crimes by percentage.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_ID;

Solution:
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	ORDER BY Crime_ID;

Expected Results:
	| Crime_ID | Report_# | Crime_Date | Crime_Time | Crime_Type | Area_Name | Vict_Age | Vict_Sex | Weapon_Desc | Address | Latitude | Longitude |
	| 1        | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 2        | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 3        | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 4        | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 5        | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 6        | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 7        | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 8        | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 9        | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 10       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 11       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 12       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 13       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 14       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 15       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 16       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 17       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 18       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 19       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 20       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 21       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 22       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 23       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 24       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 25       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 26       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 27       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789   | -75.14    |
	| 28       | 1        | 01/01/2015 | 12:00:00   | Assault    | South Philly | 18       | Male     | Knife       | 123 Main St | 40.789

====================================================================================================

PROMPT 25:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Atlanta spaced by 0.01 degrees, give the most common crime type and its count

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 25:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Atlanta spaced by 0.01 degrees, give the most common crime type and its count

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	For each coordinate in latitude and longitude of Atlanta spaced by 0.01 degrees, give the most common crime type and its count

SQL:
	SELECT Crime_Type, COUNT(*)
	FROM la_crime_data
	WHERE (Latitude BETWEEN 34.9 AND 35.1) AND (Longitude BETWEEN -84.1 AND -84.0)
	GROUP BY Crime_Type
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	Homicide
	1

Inputs:
	None

Outputs:
	SQL statement
	None

Errors:
	INSUFFICIENT
		INSUFFICIENT DATA
	UNKNOWN
		UNKNOWN ERROR
	INVALID_NUMBER_OF_ARGUMENTS
		INVALID NUMBER OF ARGUMENTS
	INVALID_DATA_TYPE
		INVALID DATA TYPE
	INVALID_DATA_LENGTH
		INVALID DATA LENGTH
	INVALID_DATA_PRECISION
		INVALID DATA PRECISION
	INVALID_DATA_SCALE
		INVALID DATA SCALE
	INVALID_DATA_DATETIME_PRECISION
		INVALID DATA DATETIME PRECISION
	INVALID_DATA_DATETIME_SCALE
		INVALID DATA DATETIME SCALE
	INVALID_DATA_TYPE_IN_GROUP_BY
		INVALID DATA TYPE IN GROUP BY
	INVALID_DATA_TYPE_IN_ORDER_BY
		INVALID DATA TYPE IN ORDER BY
	INVALID_DATA_TYPE_IN_HAVING
		INVALID DATA TYPE IN HAVING
	INVALID_DATA_TYPE_IN_SELECT
		INVALID DATA TYPE IN SELECT
	INVALID_DATA_TYPE_IN_EXPRESSION
		INVALID DATA TYPE IN EXPRESSION
	INVALID_DATA_TYPE_IN_FUNCTION
		INVALID DATA TYPE IN FUNCTION
	INVALID_DATA_TYPE_IN_STATEMENT
		INVALID DATA TYPE IN STATEMENT
	INVALID_DATA_TYPE_IN_COLUMN_LIST
		INVALID DATA TYPE IN COLUMN LIST
	INVALID_DATA_TYPE_IN_INDEX_LIST
		INVALID DATA TYPE IN INDEX LIST
	INVALID_DATA_TYPE_IN_ALTER_TABLE
		INVALID DATA TYPE IN ALTER TABLE
	INVALID_DATA_TYPE_IN_ALTER_INDEX
		INVALID DATA TYPE IN ALTER INDEX
	INVALID_DATA_TYPE_IN_CREATE_INDEX
		INVALID DATA TYPE IN CREATE INDEX
	INVALID_DATA_TYPE_IN_CREATE_TABLE
		INVALID DATA TYPE IN CREATE TABLE
	INVALID_DATA_TYPE_IN_DROP_INDEX
		INVALID DATA TYPE IN DROP INDEX
	INVALID_DATA_TYPE_IN_DROP_TABLE
		INVALID DATA TYPE IN DROP TABLE
	INVALID_DATA_TYPE_IN_DROP_COLUMN
		INVALID DATA TYPE IN DROP COLUMN
	INVALID_DATA_TYPE_IN_ALTER_COLUMN
		INVALID DATA TYPE IN ALTER COLUMN
	INVALID_DATA_TYPE_IN_CREATE_COLUMN
		INVALID DATA TYPE IN CREATE COLUMN
	INVALID_DATA_TYPE_IN_ALTER_FUNCTION
		INVALID DATA TYPE IN ALTER FUNCTION
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE
		INVALID DATA TYPE IN ALTER PROCEDURE
	INVALID_DATA_TYPE_IN_ALTER_TRIGGER
		INVALID DATA TYPE IN ALTER TRIGGER
	INVALID_DATA_TYPE_IN_ALTER_EVENT
		INVALID DATA TYPE IN ALTER EVENT
	INVALID_DATA_TYPE_IN_ALTER_TRIGGER_EVENT
		INVALID DATA TYPE IN ALTER TRIGGER EVENT
	INVALID_DATA_TYPE_IN_ALTER_RULE
		INVALID DATA TYPE IN ALTER RULE
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_GROUP
		INVALID DATA TYPE IN ALTER PROCEDURE GROUP
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_PRIVILEGE
		INVALID DATA TYPE IN ALTER PROCEDURE PRIVILEGE
	INVALID_DATA_TYPE_IN_ALTER_FUNCTION_PRIVILEGE
		INVALID DATA TYPE IN ALTER FUNCTION PRIVILEGE
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_PRIVILEGE_GRANT
		INVALID DATA TYPE IN ALTER PROCEDURE PRIVILEGE GRANT
	INVALID_DATA_TYPE_IN_ALTER_FUNCTION_PRIVILEGE_GRANT
		INVALID DATA TYPE IN ALTER FUNCTION PRIVILEGE GRANT
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_PRIVILEGE_REVOKE
		INVALID DATA TYPE IN ALTER PROCEDURE PRIVILEGE REVOKE
	INVALID_DATA_TYPE_IN_ALTER_FUNCTION_PRIVILEGE_REVOKE
		INVALID DATA TYPE IN ALTER FUNCTION PRIVILEGE REVOKE
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_PRIVILEGE_REVOKE_GRANT
		INVALID DATA TYPE IN ALTER PROCEDURE PRIVILEGE REVOKE GRANT
	INVALID_DATA_TYPE_IN_ALTER_FUNCTION_PRIVILEGE_REVOKE_GRANT
		INVALID DATA TYPE IN ALTER FUNCTION PRIVILEGE REVOKE GRANT
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_PRIVILEGE_REVOKE_REVOKE
		INVALID DATA TYPE IN ALTER PROCEDURE PRIVILEGE REVOKE REVOKE
	INVALID_DATA_TYPE_IN_ALTER_FUNCTION_PRIVILEGE_REVOKE_REVOKE_GRANT
		INVALID DATA TYPE IN ALTER FUNCTION PRIVILEGE REVOKE REVOKE GRANT
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_PRIVILEGE_REVOKE_REVOKE_REVOKE
		INVALID DATA TYPE IN ALTER PROCEDURE PRIVILEGE REVOKE REVOKE REVOKE
	INVALID_DATA_TYPE_IN_ALTER_FUNCTION_PRIVILEGE_REVOKE_REVOKE_REVOKE_GRANT
		INVALID DATA TYPE IN ALTER FUNCTION PRIVILEGE REVOKE REVOKE REVOKE GRANT
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_PRIVILEGE_REVOKE_REVOKE_REVOKE_REVOKE
		INVALID DATA TYPE IN ALTER PROCEDURE PRIVILEGE REVOKE REVOKE REVOKE REVOKE GRANT
	INVALID_DATA_TYPE_IN_ALTER_FUNCTION_PRIVILEGE_REVOKE_REVOKE_REVOKE_REVOKE_GRANT
		INVALID DATA TYPE IN ALTER FUNCTION PRIVILEGE REVOKE REVOKE REVOKE REVOKE GRANT GRANT
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_PRIVILEGE_REVOKE_REVOKE_REVOKE_REVOKE_REVOKE
		INVALID DATA TYPE IN ALTER PROCEDURE PRIVILEGE REVOKE REVOKE REVOKE REVOKE REVOKE REVOKE GRANT GRANT
	INVALID_DATA_TYPE_IN_ALTER_FUNCTION_PRIVILEGE_REVOKE_REVOKE_REVOKE_REVOKE_REVOKE_GRANT
		INVALID DATA TYPE IN ALTER FUNCTION PRIVILEGE REVOKE REVOKE REVOKE REVOKE REVOKE REVOKE GRANT GRANT GRANT
	INVALID_DATA_TYPE_IN_ALTER_PROCEDURE_PRIVILEGE_REVOKE_REVOKE_REVOKE_REVOKE_REVOKE_REVOKE
		INVALID DATA TYPE IN ALTER PROCEDURE PRIVILEGE REVOKE REVOKE REVOKE REVOKE REVOKE REVOKE

====================================================================================================

PROMPT 26:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Atlanta spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 26:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Atlanta spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	AND Crime_Time = '00:00:00'
	AND Crime_Type = 'Murder'
	AND Area_Name = 'Atlanta'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '33.7'
	AND Longitude = '-84.4'
	AND Latitude = '

====================================================================================================

PROMPT 27:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of LA spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 27:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of LA spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Expected Output:
	SELECT LA.Latitude, LA.Longitude, COUNT(*)
	FROM la_crime_data LA, nyc_crime_data NY, philly_crime_data PH, atlanta_crime_data AT
	WHERE LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <= PH.Longitude + 0.01
		AND LA.Latitude >= AT.Latitude - 0.01 AND LA.Latitude <= AT.Latitude + 0.01
		AND LA.Longitude >= AT.Longitude - 0.01 AND LA.Longitude <= AT.Longitude + 0.01
		AND LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <= PH.Longitude + 0.01
		AND LA.Latitude >= AT.Latitude - 0.01 AND LA.Latitude <= AT.Latitude + 0.01
		AND LA.Longitude >= AT.Longitude - 0.01 AND LA.Longitude <= AT.Longitude + 0.01
		AND LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <= PH.Longitude + 0.01
		AND LA.Latitude >= AT.Latitude - 0.01 AND LA.Latitude <= AT.Latitude + 0.01
		AND LA.Longitude >= AT.Longitude - 0.01 AND LA.Longitude <= AT.Longitude + 0.01
		AND LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <= PH.Longitude + 0.01
		AND LA.Latitude >= AT.Latitude - 0.01 AND LA.Latitude <= AT.Latitude + 0.01
		AND LA.Longitude >= AT.Longitude - 0.01 AND LA.Longitude <= AT.Longitude + 0.01
		AND LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <= PH.Longitude + 0.01
		AND LA.Latitude >= AT.Latitude - 0.01 AND LA.Latitude <= AT.Latitude + 0.01
		AND LA.Longitude >= AT.Longitude - 0.01 AND LA.Longitude <= AT.Longitude + 0.01
		AND LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <= PH.Longitude + 0.01
		AND LA.Latitude >= AT.Latitude - 0.01 AND LA.Latitude <= AT.Latitude + 0.01
		AND LA.Longitude >= AT.Longitude - 0.01 AND LA.Longitude <= AT.Longitude + 0.01
		AND LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <= PH.Longitude + 0.01
		AND LA.Latitude >= AT.Latitude - 0.01 AND LA.Latitude <= AT.Latitude + 0.01
		AND LA.Longitude >= AT.Longitude - 0.01 AND LA.Longitude <= AT.Longitude + 0.01
		AND LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <= PH.Longitude + 0.01
		AND LA.Latitude >= AT.Latitude - 0.01 AND LA.Latitude <= AT.Latitude + 0.01
		AND LA.Longitude >= AT.Longitude - 0.01 AND LA.Longitude <= AT.Longitude + 0.01
		AND LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <= PH.Longitude + 0.01
		AND LA.Latitude >= AT.Latitude - 0.01 AND LA.Latitude <= AT.Latitude + 0.01
		AND LA.Longitude >= AT.Longitude - 0.01 AND LA.Longitude <= AT.Longitude + 0.01
		AND LA.Latitude >= NY.Latitude - 0.01 AND LA.Latitude <= NY.Latitude + 0.01
		AND LA.Longitude >= NY.Longitude - 0.01 AND LA.Longitude <= NY.Longitude + 0.01
		AND LA.Latitude >= PH.Latitude - 0.01 AND LA.Latitude <= PH.Latitude + 0.01
		AND LA.Longitude >= PH.Longitude - 0.01 AND LA.Longitude <=

====================================================================================================

PROMPT 28:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of LA spaced by 0.01 degrees, give the most common crime type and its count

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 28:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of LA spaced by 0.01 degrees, give the most common crime type and its count

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Expected Output:
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	AND Crime_Time = '00:00:00'
	AND Crime_Type = 'Murder'
	AND Area_Name = 'Downtown'
	AND Vict_Age = '0-9'
	AND Vict_Sex = 'F'
	AND Weapon_Desc = 'Knife'
	AND Latitude = '40.7'
	AND Longitude = '-73.9'
	ORDER BY Crime_ID
	LIMIT 1

Solution:
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Date = '01/01/2015'
	AND Crime_Time = '00:00:00'
	AND Crime_Type = 'Murder'
	AND Area_Name = 'Downtown'
	AND Vict_Age = '0-9'
	AND Vict_Sex = 'F'
	AND Weapon_Desc = 'Knife'
	AND Latitude = '40.7'
	AND Longitude = '-73.9'
	ORDER BY Crime_ID
	LIMIT 1

Explanation:
	The query is asking for the most common crime type in the area of latitude 40.7 and longitude -73.9.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim, and the sex of the victim.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location, and the latitude of the location.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location, and the latitude of the location, and the longitude of the location.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location, and the latitude of the location, and the longitude of the location, and the name of the area of Downtown.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location, and the latitude of the location, and the longitude of the location, and the name of the area of Downtown, and the age of the victim.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location, and the latitude of the location, and the longitude of the location, and the name of the area of Downtown, and the age of the victim, and the sex of the victim.
	The query is also asking for the most common crime type in the area of latitude 40.7 and longitude -73.9, but only for the date of January 1, 2015, and the time of 00:00:00, and the type of Murder, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location, and the latitude of the location, and the longitude of the location, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location, and the latitude of the location, and the longitude of the location, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location, and the latitude of the location, and the longitude of the location, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location, and the latitude of the location, and the longitude of the location, and the name of the area of Downtown, and the age of the victim, and the sex of the victim, and the description of the weapon, and the address of the location

====================================================================================================

PROMPT 29:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of New York spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 29:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of New York spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, COUNT(*)
	FROM la_crime_data
	WHERE Latitude >= 40.748 AND Latitude <= 40.749 AND Longitude >= -73.984 AND Longitude <= -73.983
	GROUP BY Crime_ID
	HAVING COUNT(*) > 0
	ORDER BY Crime_ID

Expected Output:
	Crime_ID, COUNT(*)
	1, 2
	2, 1
	3, 1
	4, 1
	5, 1
	6, 1
	7, 1
	8, 1
	9, 1
	10, 1
	11, 1
	12, 1
	13, 1
	14, 1
	15, 1
	16, 1
	17, 1
	18, 1
	19, 1
	20, 1
	21, 1
	22, 1
	23, 1
	24, 1
	25, 1
	26, 1
	27, 1
	28, 1
	29, 1
	30, 1
	31, 1
	32, 1
	33, 1
	34, 1
	35, 1
	36, 1
	37, 1
	38, 1
	39, 1
	40, 1
	41, 1
	42, 1
	43, 1
	44, 1
	45, 1
	46, 1
	47, 1
	48, 1
	49, 1
	50, 1
	51, 1
	52, 1
	53, 1
	54, 1
	55, 1
	56, 1
	57, 1
	58, 1
	59, 1
	60, 1
	61, 1
	62, 1
	63, 1
	64, 1
	65, 1
	66, 1
	67, 1
	68, 1
	69, 1
	70, 1
	71, 1
	72, 1
	73, 1
	74, 1
	75, 1
	76, 1
	77, 1
	78, 1
	79, 1
	80, 1
	81, 1
	82, 1
	83, 1
	84, 1
	85, 1
	86, 1
	87, 1
	88, 1
	89, 1
	90, 1
	91, 1
	92, 1
	93, 1
	94, 1
	95, 1
	96, 1
	97, 1
	98, 1
	99, 1
	100, 1
	101, 1
	102, 1
	103, 1
	104, 1
	105, 1
	106, 1
	107, 1
	108, 1
	109, 1
	110, 1
	111, 1
	112, 1
	113, 1
	114, 1
	115, 1
	116, 1
	117, 1
	118, 1
	119, 1
	120, 1
	121, 1
	122, 1
	123, 1
	124, 1
	125, 1
	126, 1
	127, 1
	128, 1
	129, 1
	130, 1
	131, 1
	132, 1
	133, 1
	134, 1
	135, 1
	136, 1
	137, 1
	138, 1
	139, 1
	140, 1
	141, 1
	142, 1
	143, 1
	144, 1
	145, 1
	146, 1
	147, 1
	148, 1
	149, 1
	150, 1
	151, 1
	152, 1
	153, 1
	154, 1
	155, 1
	156, 1
	157, 1
	158, 1
	159, 1
	160, 1
	161, 1
	162, 1
	163, 1
	164, 1
	165, 1
	166, 1
	167, 1
	168, 1
	169, 1
	170, 1
	171, 1
	172, 1
	173, 1
	174, 1
	175, 1
	176, 1
	177, 1
	178, 1
	179, 1
	180, 1
	181, 1
	182, 1
	183, 1
	184, 1
	185, 1
	186, 1
	187, 1
	188, 1
	189, 1
	190, 1
	191, 1
	192, 1
	193, 1
	194, 1
	195, 1
	196, 1
	197, 1
	198, 1
	199, 1
	200, 1
	201, 1
	202, 1
	203, 1
	204, 1
	205, 1
	206, 1
	207, 1
	208, 1
	209, 1
	210, 1
	211, 1
	212, 1
	213, 1
	214, 1
	215, 1
	216, 1
	217, 1
	218, 1
	219, 1
	220, 1
	221, 1
	222, 1
	223, 1
	224, 1
	225, 1
	226, 1
	227, 1
	228, 1
	229, 1
	230, 1
	231, 1
	232, 1
	233, 1
	234, 1
	235, 1
	236, 1
	237, 1
	238, 1
	239, 1
	240, 1
	241, 1
	242, 1
	243, 1
	244, 1
	245, 1
	246, 1
	247, 1
	248, 1
	249, 1
	250, 1
	251, 1
	252, 1
	253, 1
	254, 1
	255, 1
	256, 1
	257, 1
	258, 1
	259, 1
	260, 1
	261, 1
	262, 1
	263, 1
	264, 1
	265, 1
	266, 1
	267, 1
	268, 1
	269, 1
	270, 1
	271, 1
	272, 1
	273, 1
	274, 1
	275, 1
	276, 1
	277, 1
	278, 1
	279, 1
	280, 1
	281, 1
	282, 1
	283, 1
	284, 1
	285, 1
	286, 1
	287, 1
	288, 1
	289, 1
	290, 1
	291, 1
	292, 1
	293, 1
	294, 1
	295, 1
	296, 1
	297, 1
	298, 1
	299, 1
	300, 1
	301, 1
	302, 1
	303, 1
	304, 1
	305, 1
	306, 1
	307, 1
	308, 1
	309, 1
	310, 1
	311, 1
	312, 1
	313, 1
	314, 1
	315, 1
	316, 1
	317, 1
	318, 1
	319, 1
	320, 1
	321, 1
	322, 1
	323, 1
	324, 1
	325, 1
	326, 1
	327, 1
	328, 1
	329, 1
	330, 1
	331, 1
	332, 1
	333, 1
	334, 1
	335, 1
	336, 1
	337, 1
	338,

====================================================================================================

PROMPT 30:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of New York spaced by 0.01 degrees, give the most common crime type and its count

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 30:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of New York spaced by 0.01 degrees, give the most common crime type and its count

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_Type, COUNT(*)
	FROM nyc_crime_data
	GROUP BY Crime_Type
	ORDER BY COUNT(*) DESC
	LIMIT 1

Response:
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFICENT
	INSUFFIC

====================================================================================================

PROMPT 31:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Philly spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 31:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Philly spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude
	FROM la_crime_data LA
	WHERE LA.Latitude = '40.7128' AND LA.Longitude = '-74.0093'
	ORDER BY LA.Latitude, LA.Longitude
	LIMIT 1;

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, '01/01/2015', '01/01/2015', '01/01/2015', 'Burglary', 'Philadelphia', '0', 'M', 'None', '1st and Main St', '40.7128', '-74.0093'

Solution:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude
	FROM la_crime_data LA
	WHERE LA.Latitude = '40.7128' AND LA.Longitude = '-74.0093'
	ORDER BY LA.Latitude, LA.Longitude
	LIMIT 1;

---
---
---

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Philly spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude
	FROM la_crime_data LA
	WHERE LA.Latitude = '40.7128' AND LA.Longitude = '-74.0093'
	ORDER BY LA.Latitude, LA.Longitude
	LIMIT 1;

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, '01/01/2015', '01/01/2015', '01/01/2015', 'Burglary', 'Philadelphia', '0', 'M', 'None', '1st and Main St', '40.7128', '-74.0093'

Solution:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude
	FROM la_crime_data LA
	WHERE LA.Latitude = '40.7128' AND LA.Longitude = '-74.0093'
	ORDER BY LA.Latitude, LA.Longitude
	LIMIT 1;

---
---
---

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Philly spaced by 0.01 degrees, give the total crime count.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude
	FROM la_crime_data LA
	WHERE LA.Latitude = '40.7128' AND LA.Longitude = '-74.0093'
	ORDER BY LA.Latitude, LA.Longitude
	LIMIT 1;

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, '01/01/2015', '01/01/2015', '01/01/2015', 'Burglary', 'Philadelphia', '0', 'M', 'None', '1st and Main St', '40.7128', '-74.0093'

Solution:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude
	FROM la_crime_data LA
	WHERE LA.Latitude = '40.7128' AND LA.Longitude = '-74.0093'
	ORDER BY LA.Latitude, LA.Longitude
	LIMIT 1;

---
---
---

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Philly spaced by 0

====================================================================================================

PROMPT 32:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Philly spaced by 0.01 degrees, give the most common crime type and its count

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 32:

Generate an SQL statement to answer a question.

Prompt: 
	For each coordinate in latitude and longitude of Philly spaced by 0.01 degrees, give the most common crime type and its count

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_Type, COUNT(*)
	FROM la_crime_data
	WHERE Latitude = '40.748' AND Longitude = '-74.006'
	GROUP BY Crime_Type
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	INSUFFICENT

Solution:
	SELECT Crime_Type, COUNT(*)
	FROM la_crime_data
	WHERE Latitude = '40.748' AND Longitude = '-74.006'
	GROUP BY Crime_Type
	ORDER BY COUNT(*) DESC
	LIMIT 1

Explanation:
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a given area.
	The area is defined by a latitude and longitude.
	The question is asking for the most common crime type in a

====================================================================================================

PROMPT 33:

Generate an SQL statement to answer a question.

Prompt: 
	Give the total count of each crime type in Atlanta

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 33:

Generate an SQL statement to answer a question.

Prompt: 
	Give the total count of each crime type in Atlanta

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, COUNT(*)
	FROM la_crime_data
	WHERE Crime_Type = 'Murder'
	GROUP BY Crime_ID
	HAVING COUNT(*) > 0
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	Crime_ID, COUNT(*)
	1, 1

Solution:
	SELECT Crime_ID, COUNT(*)
	FROM la_crime_data
	WHERE Crime_Type = 'Murder'
	GROUP BY Crime_ID
	HAVING COUNT(*) > 0
	ORDER BY COUNT(*) DESC
	LIMIT 1

Explanation:
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of murders in Atlanta.
	The query is asking for the total number of

====================================================================================================

PROMPT 34:

Generate an SQL statement to answer a question.

Prompt: 
	For each crime type in Atlanta, give its total count, last reported date, last reported area, most common area for this crime type, and percentage increase in this crime type by week.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 34:

Generate an SQL statement to answer a question.

Prompt: 
	For each crime type in Atlanta, give its total count, last reported date, last reported area, most common area for this crime type, and percentage increase in this crime type by week.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

SQL Statement:
	SELECT crime_type, count(*) as total_count, max(report_date) as last_reported, most_common_area, (max(report_date) - min(report_date)) / 7 as increase_per_week
	FROM (
		SELECT crime_type, count(*) as total_count, min(report_date) as min_report_date, most_common_area, most_common_area as most_common_area
		FROM (
			SELECT crime_type, count(*) as total_count, area_name as most_common_area, report_date, crime_type, area_name, latitude, longitude
			FROM nyc_crime_data
			GROUP BY crime_type, area_name, report_date, crime_type, area_name, latitude, longitude
			ORDER BY total_count DESC
		) as most_common_areas
		GROUP BY most_common_area, crime_type, area_name, report_date, crime_type, area_name, latitude, longitude
	) as most_common_areas_per_week
	GROUP BY most_common_area, crime_type, area_name, report_date, crime_type, area_name, latitude, longitude
	ORDER BY total_count DESC

Expected Results:
	+----------------+---------------+---------------+----------------+----------------+----------------+----------------+
	| crime_type     | total_count   | last_reported | most_common_area| increase_per_week|
	+----------------+---------------+---------------+----------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |              1 |             1 |                |                |
	| Burglary       |              1 |             1 |                |                |
	| Robbery        |              1 |             1 |                |                |
	| Theft          |              1 |             1 |                |                |
	| Total          |              4 |             1 |                |                |
	+----------------+---------------+---------------+----------------+----------------+----------------+
	| Assault        |

====================================================================================================

PROMPT 35:

Generate an SQL statement to answer a question.

Prompt: 
	Give the total count of each crime type in LA

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 35:

Generate an SQL statement to answer a question.

Prompt: 
	Give the total count of each crime type in LA

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_Type, COUNT(*)
	FROM la_crime_data
	GROUP BY Crime_Type
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	Crime_Type, COUNT(*)
	Assault, 2
	Burglary, 1
	Robbery, 1
	Theft, 1
	Vandalism, 1
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT,

====================================================================================================

PROMPT 36:

Generate an SQL statement to answer a question.

Prompt: 
	For each crime type in LA, give its total count, last reported date, last reported area, most common area for this crime type, and percentage increase in this crime type by week.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 36:

Generate an SQL statement to answer a question.

Prompt: 
	For each crime type in LA, give its total count, last reported date, last reported area, most common area for this crime type, and percentage increase in this crime type by week.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude FROM la_crime_data WHERE Crime_Type = 'Robbery'

Expected Output:
	Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	2, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	3, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	4, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	5, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	6, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	7, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	8, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	9, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	10, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	11, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	12, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	13, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	14, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	15, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	16, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	17, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	18, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	19, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	20, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	21, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	22, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	23, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	24, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	25, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	26, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	27, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	28, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	29, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	30, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	31, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife, 123 Main St, 40.789, -73.932, 0.0
	32, 1, 1/1/2014, 1/1/2014, 1/1/2014, Robbery, Central, Male, Knife

====================================================================================================

PROMPT 37:

Generate an SQL statement to answer a question.

Prompt: 
	Give the total count of each crime type in New York

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 37:

Generate an SQL statement to answer a question.

Prompt: 
	Give the total count of each crime type in New York

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_Type, COUNT(*)
	FROM nyc_crime_data
	GROUP BY Crime_Type
	ORDER BY COUNT(*) DESC
	LIMIT 1

Expected Output:
	CRIME_TYPE, COUNT(*)
	BURGLARY, 2
	MURDER, 1
	RAPE, 1
	THEFT, 1
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	IN

====================================================================================================

PROMPT 38:

Generate an SQL statement to answer a question.

Prompt: 
	For each crime type in New York, give its total count, last reported date, last reported area, most common area for this crime type, and percentage increase in this crime type by week.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 38:

Generate an SQL statement to answer a question.

Prompt: 
	For each crime type in New York, give its total count, last reported date, last reported area, most common area for this crime type, and percentage increase in this crime type by week.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM la_crime_data
	WHERE Crime_Type = 'Murder'
	ORDER BY Crime_Date DESC
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	2, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	3, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	4, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	5, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	6, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	7, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	8, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	9, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	10, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	11, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	12, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	13, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	14, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	15, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	16, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	17, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	18, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	19, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	20, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	21, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	22, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	23, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	24, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	25, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	26, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	27, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	28, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40.7128', '-73.9856', 'INSUFFICENT'
	29, 1, '01/01/2015', '12:00:00', 'Murder', 'New York', 'Male', 'Gun', 'New York', '40

====================================================================================================

PROMPT 39:

Generate an SQL statement to answer a question.

Prompt: 
	Give the total count of each crime type in Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 39:

Generate an SQL statement to answer a question.

Prompt: 
	Give the total count of each crime type in Philly

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_Type, COUNT(*)
	FROM philly_crime_data
	GROUP BY Crime_Type
	ORDER BY Crime_Type;

Expected Output:
	Crime_Type, COUNT(*)
	Assault, 2
	Burglary, 1
	Drug, 1
	Robbery, 1
	Vandalism, 1
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	INSUFFICENT, 0
	IN

====================================================================================================

PROMPT 40:

Generate an SQL statement to answer a question.

Prompt: 
	For each crime type in Philly, give its total count, last reported date, last reported area, most common area for this crime type, and percentage increase in this crime type by week.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 40:

Generate an SQL statement to answer a question.

Prompt: 
	For each crime type in Philly, give its total count, last reported date, last reported area, most common area for this crime type, and percentage increase in this crime type by week.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM philly_crime_data
	WHERE Crime_Type = 'Robbery'
	ORDER BY Crime_Date DESC
	LIMIT 1

Expected Output:
	Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, 1, '2014-01-01', '2014-01-01', 'Robbery', 'North Philly', 'Male', 'Gun', '123 Main St.', '40.917', '-75.17', '40.917', '-75.17'

Solution:
	SELECT Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM philly_crime_data
	WHERE Crime_Type = 'Robbery'
	ORDER BY Crime_Date DESC
	LIMIT 1

SQL Fiddle:
	http://sqlfiddle.com/#!2/b1f0d/1


====================================================================================================

PROMPT 41:

Generate an SQL statement to answer a question.

Prompt: 
	For each area in Atlanta, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 41:

Generate an SQL statement to answer a question.

Prompt: 
	For each area in Atlanta, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

Expected Output:
	3

Solution:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

SQL Fiddle:
	http://sqlfiddle.com/#!2/8b9a0/1

---

Generate an SQL statement to answer a question.

Prompt: 
	For each area in Atlanta, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

Expected Output:
	3

Solution:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

SQL Fiddle:
	http://sqlfiddle.com/#!2/8b9a0/1

---

Generate an SQL statement to answer a question.

Prompt: 
	For each area in Atlanta, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

Expected Output:
	3

Solution:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

SQL Fiddle:
	http://sqlfiddle.com/#!2/8b9a0/1

---

Generate an SQL statement to answer a question.

Prompt: 
	For each area in Atlanta, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

Expected Output:
	3

Solution:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

SQL Fiddle:
	http://sqlfiddle.com/#!2/8b9a0/1

---

Generate an SQL statement to answer a question.

Prompt: 
	For each area in Atlanta, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

Expected Output:
	3

Solution:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Area_Name = 'Central Park'

SQL Fiddle:
	http://sqlfiddle.com/#!2/8b9a0/1

---

Generate an SQL statement to answer a question.

Prompt: 
	For each area in Atlanta, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSU

====================================================================================================

PROMPT 42:

Generate an SQL statement to answer a question.

Prompt: 
	For each area in LA, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 42:

Generate an SQL statement to answer a question.

Prompt: 
	For each area in LA, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT LA.Area_Name, LA.Crime_Type, COUNT(*)
	FROM LA.Crime_Data LA
	GROUP BY LA.Area_Name, LA.Crime_Type
	ORDER BY LA.Area_Name, LA.Crime_Type;

Expected Output:
	LA.Area_Name, LA.Crime_Type, COUNT(*)
	LA.Area_1, LA.Crime_1, 5
	LA.Area_1, LA.Crime_2, 1
	LA.Area_1, LA.Crime_3, 1
	LA.Area_1, LA.Crime_4, 1
	LA.Area_1, LA.Crime_5, 1
	LA.Area_2, LA.Crime_1, 1
	LA.Area_2, LA.Crime_2, 1
	LA.Area_2, LA.Crime_3, 1
	LA.Area_2, LA.Crime_4, 1
	LA.Area_2, LA.Crime_5, 1
	LA.Area_3, LA.Crime_1, 1
	LA.Area_3, LA.Crime_2, 1
	LA.Area_3, LA.Crime_3, 1
	LA.Area_3, LA.Crime_4, 1
	LA.Area_3, LA.Crime_5, 1
	LA.Area_4, LA.Crime_1, 1
	LA.Area_4, LA.Crime_2, 1
	LA.Area_4, LA.Crime_3, 1
	LA.Area_4, LA.Crime_4, 1
	LA.Area_4, LA.Crime_5, 1
	LA.Area_5, LA.Crime_1, 1
	LA.Area_5, LA.Crime_2, 1
	LA.Area_5, LA.Crime_3, 1
	LA.Area_5, LA.Crime_4, 1
	LA.Area_5, LA.Crime_5, 1
	LA.Area_6, LA.Crime_1, 1
	LA.Area_6, LA.Crime_2, 1
	LA.Area_6, LA.Crime_3, 1
	LA.Area_6, LA.Crime_4, 1
	LA.Area_6, LA.Crime_5, 1
	LA.Area_7, LA.Crime_1, 1
	LA.Area_7, LA.Crime_2, 1
	LA.Area_7, LA.Crime_3, 1
	LA.Area_7, LA.Crime_4, 1
	LA.Area_7, LA.Crime_5, 1
	LA.Area_8, LA.Crime_1, 1
	LA.Area_8, LA.Crime_2, 1
	LA.Area_8, LA.Crime_3, 1
	LA.Area_8, LA.Crime_4, 1
	LA.Area_8, LA.Crime_5, 1
	LA.Area_9, LA.Crime_1, 1
	LA.Area_9, LA.Crime_2, 1
	LA.Area_9, LA.Crime_3, 1
	LA.Area_9, LA.Crime_4, 1
	LA.Area_9, LA.Crime_5, 1
	LA.Area_10, LA.Crime_1, 1
	LA.Area_10, LA.Crime_2, 1
	LA.Area_10, LA.Crime_3, 1
	LA.Area_10, LA.Crime_4, 1
	LA.Area_10, LA.Crime_5, 1
	LA.Area_11, LA.Crime_1, 1
	LA.Area_11, LA.Crime_2, 1
	LA.Area_11, LA.Crime_3, 1
	LA.Area_11, LA.Crime_4, 1
	LA.Area_11, LA.Crime_5, 1
	LA.Area_12, LA.Crime_1, 1
	LA.Area_12, LA.Crime_2, 1
	LA.Area_12, LA.Crime_3, 1
	LA.Area_12, LA.Crime_4, 1
	LA.Area_12, LA.Crime_5, 1
	LA.Area_13, LA.Crime_1, 1
	LA.Area_13, LA.Crime_2, 1
	LA.Area_13, LA.Crime_3, 1
	LA.Area_13, LA.Crime_4, 1
	LA.Area_13, LA.Crime_5, 1
	LA.Area_14, LA.Crime_1, 1
	LA.Area_14, LA.Crime_2, 1
	LA.Area_14, LA.Crime_3, 1
	LA.Area_14, LA.Crime_4, 1
	LA.Area_14, LA.Crime_5, 1
	LA.Area_15, LA.Crime_1, 1
	LA.Area_15, LA.Crime_2, 1
	LA.Area_15, LA.Crime_3, 1
	LA.Area_15, LA.Crime_4, 1
	LA.Area_15, LA.Crime_5, 1
	LA.Area_16, LA.Crime_1, 1
	LA.Area_16, LA.Crime_2, 1
	LA.Area_16, LA.Crime_3, 1
	LA.Area_16, LA.Crime_4, 1
	LA.Area_16, LA.Crime_5, 1
	LA.Area_17, LA.Crime_1, 1
	LA.Area_17, LA.Crime_2, 1
	LA.Area_17, LA.Crime_3, 1
	LA.Area_17, LA.Crime_4, 1
	LA.Area_17, LA.Crime_5, 1
	LA.Area_18, LA.Crime_1, 1
	LA.Area_18, LA.Crime_2, 1
	LA.Area_18, LA.Crime_3, 1
	LA.Area_18, LA.Crime_4, 1
	LA.Area_18, LA.Crime_5, 1
	LA.Area_19, LA.Crime_1, 1
	LA.Area_19, LA.Crime_2, 1
	LA.Area_19, LA.Crime_3, 1
	LA.Area_19, LA.Crime_4, 1
	LA.Area_19, LA.Crime_5, 1
	LA.Area_20, LA.Crime_1, 1
	LA.Area_20, LA.Crime_2, 1
	LA.Area_20, LA.Crime_3, 1
	LA.Area_20, LA.Crime_4, 1
	LA.Area_20, LA.Crime_5, 1
	LA.Area_21, LA.Crime_1, 1
	LA.Area_21, LA.Crime_2, 1
	LA.Area_21, LA.Crime_3, 1
	LA.Area_21, LA.Crime_4, 1
	LA.Area_21, LA.Crime_5, 1
	LA.Area_22, LA.Crime_1, 1
	LA.Area_22, LA.Cr

====================================================================================================

PROMPT 43:

Generate an SQL statement to answer a question.

Prompt: 
	For each area in New York, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 43:

Generate an SQL statement to answer a question.

Prompt: 
	For each area in New York, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM nyc_crime_data
	WHERE Crime_Type = 'Murder'
	ORDER BY Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	LIMIT 10;

Expected Output:
	Crime_ID, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	2, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	3, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	4, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	5, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	6, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	7, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	8, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	9, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	10, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985

Solution:
	SELECT Crime_ID, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM nyc_crime_data
	WHERE Crime_Type = 'Murder'
	ORDER BY Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	LIMIT 10;

Explanation:
	The query is asking for a list of all the crimes in New York, ordered by Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude.
	The LIMIT 10 is asking for the first 10 results.
	The ORDER BY is ordering the results by the given fields.
	The LIMIT 10 is asking for the first 10 results.

---

Generate an SQL statement to answer a question.

Prompt: 
	For each area in New York, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM nyc_crime_data
	WHERE Crime_Type = 'Murder'
	ORDER BY Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	LIMIT 10;

Expected Output:
	Crime_ID, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	1, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	2, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	3, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	4, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	5, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	6, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	7, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	8, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	9, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985
	10, Murder, Manhattan, 1, Male, Knife, 123 Main St, 40.789, -73.985

Solution:
	SELECT Crime_ID, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM nyc_crime_data
	WHERE Crime_Type = 'Murder'
	ORDER BY Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	LIMIT 10;

Explanation:
	The query is asking for a list of all the crimes in New York, ordered by Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude.
	The LIMIT 10 is asking for the first 10 results.
	The ORDER BY is ordering the results by the given fields.
	The LIMIT 10 is asking for the first 10 results.

---

Generate an SQL statement to answer a question.

Prompt: 
	For each area in New York, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude
	FROM nyc_crime_data
	WHERE Crime_Type = 'Murder'

====================================================================================================

PROMPT 44:

Generate an SQL statement to answer a question.

Prompt: 
	For each area in Philly, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 44:

Generate an SQL statement to answer a question.

Prompt: 
	For each area in Philly, give count of each crime type.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:

Input:
	1, 1, 1/1/2000, 1/1/2000, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1

====================================================================================================

PROMPT 45:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each day of the week in Atlanta.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 45:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each day of the week in Atlanta.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Expected Output:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, NY.Crime_ID, NY.Report_#, NY.Crime_Date, NY.Crime_Time, NY.Crime_Class, NY.Crime_Type, NY.Area_Name, NY.Latitude, NY.Longitude, PH.Crime_ID, PH.Report_#, PH.Crime_Date, PH.Crime_Time, PH.Crime_Class, PH.Crime_Type, PH.Area_#, PH.Address, PH.Longitude, PH.Latitude, ATL.Crime_ID, ATL.Report_#, ATL.Day_Occurred, ATL.Crime_Date, ATL.Crime_Time, ATL.Crime_Type, ATL.Area_Name, ATL.Address, ATL.Longitude, ATL.Latitude
	FROM la_crime_data LA, nyc_crime_data NY, philly_crime_data PH, atlanta_crime_data ATL
	WHERE LA.Crime_ID = NY.Crime_ID AND LA.Crime_ID = PH.Crime_ID AND LA.Crime_ID = ATL.Crime_ID
	ORDER BY LA.Crime_ID, LA.Report_#

Solution:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, NY.Crime_ID, NY.Report_#, NY.Crime_Date, NY.Crime_Time, NY.Crime_Class, NY.Crime_Type, NY.Area_Name, NY.Latitude, NY.Longitude, PH.Crime_ID, PH.Report_#, PH.Crime_Date, PH.Crime_Time, PH.Crime_Class, PH.Crime_Type, PH.Area_#, PH.Address, PH.Longitude, PH.Latitude, ATL.Crime_ID, ATL.Report_#, ATL.Day_Occurred, ATL.Crime_Date, ATL.Crime_Time, ATL.Crime_Type, ATL.Area_Name, ATL.Address, ATL.Longitude, ATL.Latitude
	FROM la_crime_data LA, nyc_crime_data NY, philly_crime_data PH, atlanta_crime_data ATL
	WHERE LA.Crime_ID = NY.Crime_ID AND LA.Crime_ID = PH.Crime_ID AND LA.Crime_ID = ATL.Crime_ID
	ORDER BY LA.Crime_ID, LA.Report_#

Correctness:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, NY.Crime_ID, NY.Report_#, NY.Crime_Date, NY.Crime_Time, NY.Crime_Class, NY.Crime_Type, NY.Area_Name, NY.Latitude, NY.Longitude, PH.Crime_ID, PH.Report_#, PH.Crime_Date, PH.Crime_Time, PH.Crime_Class, PH.Crime_Type, PH.Area_#, PH.Address, PH.Longitude, PH.Latitude, ATL.Crime_ID, ATL.Report_#, ATL.Day_Occurred, ATL.Crime_Date, ATL.Crime_Time, ATL.Crime_Type, ATL.Area_Name, ATL.Address, ATL.Longitude, ATL.Latitude
	FROM la_crime_data LA, nyc_crime_data NY, philly_crime_data PH, atlanta_crime_data ATL
	WHERE LA.Crime_ID = NY.Crime_ID AND LA.Crime_ID = PH.Crime_ID AND LA.Crime_ID = ATL.Crime_ID
	ORDER BY LA.Crime_ID, LA.Report_#

Correctness:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, NY.Crime_ID, NY.Report_#, NY.Crime_Date, NY.Crime_Time, NY.Crime_Class, NY.Crime_Type, NY.Area_Name, NY.Latitude, NY.Longitude, PH.Crime_ID, PH.Report_#, PH.Crime_Date, PH.Crime_Time, PH.Crime_Class, PH.Crime_Type, PH.Area_#, PH.Address, PH.Longitude, PH.Latitude, ATL.Crime_ID, ATL.Report_#, ATL.Day_Occurred, ATL.Crime_Date, ATL.Crime_Time, ATL.Crime_Type, ATL.Area_Name, ATL.Address, ATL.Longitude, ATL.Latitude
	FROM la_crime_data LA, nyc_crime_data NY, philly_crime_data PH, atlanta_crime_data ATL
	WHERE LA.Crime_ID = NY.Crime_ID AND LA.Crime_ID = PH.Crime_ID AND LA.Crime_ID = ATL.Crime_ID
	ORDER BY LA.Crime_ID, LA.Report_#

Correctness:
	SELECT LA.Crime_ID, LA.Report_#, LA.Date_Reported, LA.Crime_Date, LA.Crime_Time, LA.Crime_Type, LA.Area_Name, LA.Vict_Age, LA.Vict_Sex, LA.Weapon_Desc, LA.Address, LA.Latitude, LA.Longitude, NY.Crime_ID, NY.Report_#, NY.Crime_Date, NY.Crime_Time, NY.Crime_Class, NY.Crime_Type, NY.Area_Name, NY.Latitude, NY.Longitude, PH.Crime_ID, PH.Report_#, PH.Crime_Date, PH.Crime_Time, PH.Crime_Class, PH.Crime_Type, PH.Area_#, PH.Address, PH.Longitude, PH.Latitude, ATL.Crime_ID, ATL.Report_#, ATL.Day_Occurred, ATL.Crime_Date, ATL.Crime_Time, ATL.Crime_Type, ATL.Area_Name, ATL.Address, ATL.Longitude, ATL.Latitude
	FROM la_crime_data LA, nyc_crime_data NY, philly_crime_data PH, atlanta_crime_data ATL
	WHERE LA.Crime_ID = NY

====================================================================================================

PROMPT 46:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each hour of the day in Atlanta.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 46:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each hour of the day in Atlanta.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24' AND Vict_Sex = 'F'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Vict_Age = '18-24'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Vict_Age = '18-24' AND Vict_Sex = 'F'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Vict_Age = '18-24'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013' AND Crime_Time = '00:00:00' AND Area_Name = 'Downtown' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Weapon_Desc = 'Knife' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Vict_Age = '18-24' AND Vict_Sex = 'F' AND Vict_Age = '18-24' AND Vict_Sex = 'M' AND Vict_Age = '18-24' AND Vict_Sex = 'F'
	INSUFFICIENT
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Date_Reported = '1/1/2013

====================================================================================================

PROMPT 47:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in Atlanta.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 47:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in Atlanta.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

Expected Output:
	1

Solution:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in New York City.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

Expected Output:
	1

Solution:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in Philadelphia.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

Expected Output:
	1

Solution:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in Atlanta.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

Expected Output:
	1

Solution:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in New York City.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

Expected Output:
	1

Solution:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in Philadelphia.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_

====================================================================================================

PROMPT 48:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each day of the week in LA.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 48:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each day of the week in LA.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Theft' AND Crime_Date = '01/01/2015'

Expected Output:
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	

====================================================================================================

PROMPT 49:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each hour of the day in LA.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 49:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each hour of the day in LA.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Date = '01/01/2015' AND Crime_Time = '00:00:00' AND Crime_Type = 'Theft' AND Area_Name = 'Manhattan' AND Vict_Age = '18-24' AND Vict_Sex = 'Male' AND Weapon_Desc = 'Gun' AND Latitude = '40.7' AND Longitude = '-73.9'

Hint:
	Use the 'WHERE' clause to filter the data.

Hint:
	Use the 'GROUP BY' clause to group the data.

Hint:
	Use the 'HAVING' clause to filter the data.

Hint:
	Use the 'ORDER BY' clause to sort the data.

Hint:
	Use the 'LIMIT' clause to limit the data.

Hint:
	Use the 'UNION' clause to combine the data.

Hint:
	Use the 'JOIN' clause to join the data.

Hint:
	Use the 'CASE' clause to change the data.

Hint:
	Use the 'EXISTS' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'IN' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS' clause to check for data.

Hint:
	Use the 'NOT IN' clause to check for data.

Hint:
	Use the 'NOT LIKE' clause to check for data.

Hint:
	Use the 'NOT BETWEEN' clause to check for data.

Hint:
	Use the 'NOT EXISTS

====================================================================================================

PROMPT 50:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in LA.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 50:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in LA.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

Expected Output:
	1

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in NY.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

Expected Output:
	1

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in Philly.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

Expected Output:
	1

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in ATL.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

Expected Output:
	1

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in LA.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

Expected Output:
	1

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in NY.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

Expected Output:
	1

Solution:
	SELECT COUNT(*) FROM la_crime_data WHERE Crime_Type = 'Assault' AND Crime_Date = '01/01/2015'

---

Generate an SQL statement to answer a question.

Prompt: 
	Give count

====================================================================================================

PROMPT 51:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each day of the week in New York.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 51:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each day of the week in New York.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

SQL Statement:
	SELECT COUNT(*) AS count, crime_type FROM nyc_crime_data WHERE crime_type = 'Murder' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Robbery' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Assault' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Theft' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Burglary' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vandalism' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Arson' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Drug' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Weapon' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vehicle' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Firearm' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Theft' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Burglary' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vandalism' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Arson' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Drug' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Weapon' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vehicle' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Firearm' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Theft' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Burglary' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vandalism' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Arson' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Drug' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Weapon' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vehicle' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Firearm' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Theft' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Burglary' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vandalism' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Arson' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Drug' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Weapon' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vehicle' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Firearm' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Theft' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Burglary' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vandalism' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Arson' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Drug' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Weapon' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vehicle' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Firearm' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Theft' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Burglary' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vandalism' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Arson' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Drug' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Weapon' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Vehicle' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Firearm' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Theft' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND crime_type = 'Burglary' AND date_reported = '01/01/2014' AND time_reported = '00:00:00' AND

====================================================================================================

PROMPT 52:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each hour of the day in New York.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 52:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each hour of the day in New York.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '00:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '01:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '02:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '03:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '04:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '05:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '06:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '07:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '08:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '09:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '10:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '11:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '12:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '13:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '14:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '15:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '16:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '17:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '18:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '19:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '20:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '21:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '22:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '23:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '00:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '01:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '02:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '03:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '04:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '05:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '06:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '07:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '08:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '09:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '10:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '11:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '12:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '13:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '14:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '15:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '16:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '17:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '18:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '19:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '20:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '21:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '22:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '23:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '00:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '01:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '02:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '03:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '04:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '05:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '06:00'
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Crime_Time = '07

====================================================================================================

PROMPT 53:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in New York.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 53:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in New York.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT Crime_ID, Crime_Type, COUNT(*)
	FROM nyc_crime_data
	WHERE Crime_Date BETWEEN '01/01/2012' AND '01/31/2012'
	GROUP BY Crime_ID, Crime_Type
	ORDER BY Crime_Type, Crime_Date

Expected Output:
	Crime_ID, Crime_Type, Count
	1, Theft, 10
	2, Assault, 5
	3, Murder, 1
	4, Rape, 1
	5, Robbery, 1
	6, Burglary, 1
	7, Larceny, 1
	8, Arson, 1
	9, Fraud, 1
	10, Other, 1
	11, Theft, 1
	12, Assault, 1
	13, Murder, 1
	14, Rape, 1
	15, Robbery, 1
	16, Burglary, 1
	17, Larceny, 1
	18, Arson, 1
	19, Fraud, 1
	20, Other, 1
	21, Theft, 1
	22, Assault, 1
	23, Murder, 1
	24, Rape, 1
	25, Robbery, 1
	26, Burglary, 1
	27, Larceny, 1
	28, Arson, 1
	29, Fraud, 1
	30, Other, 1
	31, Theft, 1
	32, Assault, 1
	33, Murder, 1
	34, Rape, 1
	35, Robbery, 1
	36, Burglary, 1
	37, Larceny, 1
	38, Arson, 1
	39, Fraud, 1
	40, Other, 1
	41, Theft, 1
	42, Assault, 1
	43, Murder, 1
	44, Rape, 1
	45, Robbery, 1
	46, Burglary, 1
	47, Larceny, 1
	48, Arson, 1
	49, Fraud, 1
	50, Other, 1
	51, Theft, 1
	52, Assault, 1
	53, Murder, 1
	54, Rape, 1
	55, Robbery, 1
	56, Burglary, 1
	57, Larceny, 1
	58, Arson, 1
	59, Fraud, 1
	60, Other, 1
	61, Theft, 1
	62, Assault, 1
	63, Murder, 1
	64, Rape, 1
	65, Robbery, 1
	66, Burglary, 1
	67, Larceny, 1
	68, Arson, 1
	69, Fraud, 1
	70, Other, 1
	71, Theft, 1
	72, Assault, 1
	73, Murder, 1
	74, Rape, 1
	75, Robbery, 1
	76, Burglary, 1
	77, Larceny, 1
	78, Arson, 1
	79, Fraud, 1
	80, Other, 1
	81, Theft, 1
	82, Assault, 1
	83, Murder, 1
	84, Rape, 1
	85, Robbery, 1
	86, Burglary, 1
	87, Larceny, 1
	88, Arson, 1
	89, Fraud, 1
	90, Other, 1
	91, Theft, 1
	92, Assault, 1
	93, Murder, 1
	94, Rape, 1
	95, Robbery, 1
	96, Burglary, 1
	97, Larceny, 1
	98, Arson, 1
	99, Fraud, 1
	100, Other, 1
	101, Theft, 1
	102, Assault, 1
	103, Murder, 1
	104, Rape, 1
	105, Robbery, 1
	106, Burglary, 1
	107, Larceny, 1
	108, Arson, 1
	109, Fraud, 1
	110, Other, 1
	111, Theft, 1
	112, Assault, 1
	113, Murder, 1
	114, Rape, 1
	115, Robbery, 1
	116, Burglary, 1
	117, Larceny, 1
	118, Arson, 1
	119, Fraud, 1
	120, Other, 1
	121, Theft, 1
	122, Assault, 1
	123, Murder, 1
	124, Rape, 1
	125, Robbery, 1
	126, Burglary, 1
	127, Larceny, 1
	128, Arson, 1
	129, Fraud, 1
	130, Other, 1
	131, Theft, 1
	132, Assault, 1
	133, Murder, 1
	134, Rape, 1
	135, Robbery, 1
	136, Burglary, 1
	137, Larceny, 1
	138, Arson, 1
	139, Fraud, 1
	140, Other, 1
	141, Theft, 1
	142, Assault, 1
	143, Murder, 1
	144, Rape, 1
	145, Robbery, 1
	146, Burglary, 1
	147, Larceny, 1
	148, Arson, 1
	149, Fraud, 1
	150, Other, 1
	151, Theft, 1
	152, Assault, 1
	153, Murder, 1
	154, Rape, 1
	155, Robbery, 1
	156, Burglary, 1
	157, Larceny, 1
	158, Arson, 1
	159, Fraud, 1
	160, Other, 1
	161, Theft, 1
	162, Assault, 1
	163, Murder, 1
	164, Rape, 1
	165, Robbery, 1
	166, Burglary, 1
	167, Larceny, 1
	168, Arson, 1
	169, Fraud, 1
	170, Other, 1
	171, Theft, 1
	172, Assault, 1
	173, Murder, 1
	174, Rape, 1
	175, Robbery, 1
	176, Burglary, 1
	177, Larceny, 1
	178, Arson, 1
	179, Fraud, 1
	180, Other, 1
	181, Theft, 1
	182, Assault, 1
	183, Murder, 1
	184, Rape, 1
	185, Robbery, 1
	186, Burglary, 1
	187, Larceny, 1
	188, Arson, 1
	189, Fraud, 1
	190, Other, 1
	191, Theft, 1
	192, Assault, 1
	193, Murder, 1
	194, Rape, 1
	195, Robbery, 1
	196, Burglary, 1
	197, Larceny, 1
	198, Arson, 1
	199, Fraud, 1
	200, Other, 1
	201, Theft, 1
	202, Assault, 1
	203, Murder, 1
	204, Rape, 1
	205, Robbery, 1
	206, Burglary, 1
	207, Larceny, 1
	208, Arson, 1
	209, Fraud, 1
	210, Other, 1
	211, The

====================================================================================================

PROMPT 54:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each day of the week in Philly.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 54:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each day of the week in Philly.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Date = '01/01/2015' AND Crime_Time = '00:00:00' AND Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Latitude = '40.7127' AND Longitude = '-73.9858'

Expected Output:
	1
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	

====================================================================================================

PROMPT 55:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each hour of the day in Philly.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 55:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each hour of the day in Philly.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT COUNT(*) FROM nyc_crime_data WHERE Crime_Type = 'Assault' AND Area_Name = 'Manhattan' AND Crime_Time >= '00:00:00' AND Crime_Time <= '23:59:59'

Expected Output:
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1
	1


====================================================================================================

PROMPT 56:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in Philly.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

RESPONSE 56:

Generate an SQL statement to answer a question.

Prompt: 
	Give count of each crime type for each month in Philly.

All Schema: 
	    la_crime_data (Crime_ID, Report_#, Date_Reported, Crime_Date, Crime_Time, Crime_Type, Area_Name, Vict_Age, Vict_Sex, Weapon_Desc, Address, Latitude, Longitude)
	    nyc_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Class, Crime_Type, Area_Name, Latitude, Longitude)
	    philly_crime_data (Crime_ID, Report_#, Crime_Date, Crime_Time, Crime_Type, Area_#, Address, Longitude, Latitude)
	    atlanta_crime_data (Crime_ID, Report_#, Day_Occurred, Crime_Date, Crime_Time, Crime_Type, Area_Name, Address, Longitude, Latitude)

Note, only respond with a single most accurate SQL statement.
If more information is required, simply respond with 'INSUFFICENT'.

Example:
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Manhattan' AND Crime_Date = '01/01/2014'
	SELECT count(*) FROM nyc_crime_data WHERE Crime_Type = 'Murder' AND Area_Name = 'Man

====================================================================================================

